{"version":3,"file":"selection-list-model.js","sourceRoot":"","sources":["../../../../src/components/selection-list/selection-list-model.tsx"],"names":[],"mappings":"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","sourcesContent":["import {extendShallowObservable} from 'mobx';\nimport React = require('react');\nimport {clamp} from '../../utils/clamp';\nimport {divider, Divider} from './divider';\nimport {Option} from './option';\n\nexport type DataSourceItem = string | object | symbol;\n\nexport interface OptionList {\n    dataSource?: DataSourceItem[];\n    dataSchema?: {};\n    renderItem?: (item: DataSourceItem) => JSX.Element | null;\n}\n\nexport type SelectionListItemValue = string;\nexport type SelectionListItemData = DataSourceItem | JSX.Element;\n\nexport interface SelectionListItem {\n    data: SelectionListItemData;\n    disabled: boolean;\n    element: JSX.Element;\n    focused: boolean;\n    isOption: boolean;\n    selectable: boolean;\n    selected: boolean;\n    value: SelectionListItemValue;\n}\n\ntype DataSourceItemDefaultFormat = string | {\n    value?: SelectionListItemValue;\n    label?: string | JSX.Element;\n    disabled?: boolean;\n    hidden?: boolean;\n};\n\ninterface Dict<TValue> { [index: string]: TValue; }\n\nfunction renameKeys(data: Dict<any>, schema: Dict<string>): Dict<any> {\n    const result: Dict<any> = {};\n    for (const key in schema) {\n        if (schema.hasOwnProperty(key)) {\n            result[key] = data[schema[key]];\n        }\n    }\n    return result;\n}\n\nfunction defaultRenderItem(item: DataSourceItemDefaultFormat): JSX.Element | null {\n    if (typeof item === 'string') {\n        item = {value: item, label: item};\n    }\n\n    if (item === divider) {\n        return <Divider />;\n    } else if (item.hidden) {\n        return null;\n    }\n    return <Option value={item.value} disabled={item.disabled}>{item.label}</Option>;\n}\n\nexport class SelectionListModel {\n    public items: SelectionListItem[] = [];\n\n    private selectableValues: SelectionListItemValue[] = [];\n    private selectedValue: SelectionListItemValue | undefined = undefined;\n    private focusedValue: SelectionListItemValue | undefined = undefined;\n\n    public addDataSource({dataSource = [], dataSchema, renderItem = defaultRenderItem}: OptionList) {\n        dataSource.forEach(data => {\n            const element = renderItem(dataSchema && typeof data === 'object' ? renameKeys(data, dataSchema) : data);\n            if (element) {\n                this.addItem(data, element);\n            }\n        });\n    }\n\n    public addChildren(children: React.ReactNode) {\n        React.Children.forEach(children, element => {\n            if (typeof element === 'object') {\n                this.addItem(element, element);\n            }\n        });\n    }\n\n    public focusFirst() {\n        this.focusIndex(0);\n    }\n\n    public focusLast() {\n        this.focusIndex(Infinity);\n    }\n\n    public focusPrevious() {\n        const currentIndex = this.getFocusedIndex();\n        this.focusIndex(currentIndex === -1 ? Infinity : currentIndex - 1);\n    }\n\n    public focusNext() {\n        const currentIndex = this.getFocusedIndex();\n        this.focusIndex(currentIndex === -1 ? 0 : currentIndex + 1);\n    }\n\n    public findItemByValue(value: SelectionListItemValue): SelectionListItem | undefined {\n        return this.items.find(item => item.value === value);\n    }\n\n    public getSelectedValue(): SelectionListItemValue | undefined {\n        return this.selectedValue;\n    }\n\n    public getFocusedValue(): SelectionListItemValue | undefined {\n        return this.focusedValue;\n    }\n\n    public selectValue(value: SelectionListItemValue | undefined) {\n        this.selectedValue = value;\n        for (const item of this.items) {\n            item.selected = (value !== undefined && item.value === value);\n        }\n    }\n\n    public focusValue(value: SelectionListItemValue | undefined) {\n        this.focusedValue = value;\n        for (const item of this.items) {\n            item.focused = (value !== undefined && item.value === value);\n        }\n    }\n\n    private addItem(data: SelectionListItemData, element: JSX.Element) {\n        const value = element.props.value;\n        const disabled = Boolean(element.props.disabled);\n        const item = extendShallowObservable(\n            {\n                data,\n                disabled,\n                element,\n                isOption: value !== undefined,\n                selectable: value !== undefined && !disabled,\n                value\n            }, {\n                focused: false,\n                selected: false\n            }\n        );\n\n        this.items.push(item);\n        if (item.selectable) {\n            this.selectableValues.push(item.value);\n        }\n    }\n\n    private getFocusedIndex() {\n        return this.focusedValue === undefined ? -1 : this.selectableValues.indexOf(this.focusedValue);\n    }\n\n    private focusIndex(index: number) {\n        this.focusValue(this.selectableValues[clamp(index, 0, this.selectableValues.length - 1)]);\n    }\n}\n"]}