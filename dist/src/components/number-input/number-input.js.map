{"version":3,"file":"number-input.js","sourceRoot":"","sources":["../../../../src/components/number-input/number-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import {codes as KeyCodes} from 'keycode';\nimport * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport {FormInputProps} from '../../types';\nimport {isNumber, noop} from '../../utils';\nimport {Modifiers, Stepper} from '../stepper';\nimport styles from './number-input.st.css';\n\nexport interface NumberInputProps extends FormInputProps<number | undefined, string> {\n    className?: string;\n    value?: number;\n    defaultValue?: number;\n    placeholder?: string;\n    min?: number;\n    max?: number;\n    step?: number;\n    required?: boolean;\n    disabled?: boolean;\n    label?: string;\n    name?: string;\n    error?: boolean;\n    prefix?: React.ReactNode;\n    suffix?: React.ReactNode;\n}\n\ninterface DefaultProps {\n    step: number;\n    min: number;\n    max: number;\n    onChange(value?: number): void;\n    onInput(value: string): void;\n}\n\nexport interface NumberInputState {\n    value?: number;\n    focus: boolean;\n    error: boolean;\n}\n\nenum Direction {\n    Increase = 'increase',\n    Decrease = 'decrease'\n}\n\nconst DEFAULTS: DefaultProps = {\n    step: 1,\n    min: -Infinity,\n    max: Infinity,\n    onChange: noop,\n    onInput: noop\n};\n\nfunction getPropWithDefault<Prop extends keyof NumberInputProps & keyof DefaultProps>(\n    props: NumberInputProps,\n    name: Prop\n): (DefaultProps & NumberInputProps)[Prop] {\n    return props[name] === undefined ? DEFAULTS[name] : props[name];\n}\n\n@stylable(styles)\nexport class NumberInput extends React.Component<NumberInputProps, NumberInputState> {\n    public static defaultProps = {\n        onChange: DEFAULTS.onChange,\n        onInput: DEFAULTS.onInput\n    };\n\n    private committed = true;\n\n    private inputRef: HTMLInputElement | null = null;\n\n    private get isUncontrolled(): boolean {\n        return this.props.defaultValue !== undefined;\n    }\n\n    private get currentValue(): number | undefined {\n        return (\n            this.isUncontrolled ?\n                this.inputRef ?\n                    this.inputRef.value !== '' ?\n                        Number(this.inputRef.value) :\n                        undefined :\n                    this.props.defaultValue :\n                this.state.value\n        );\n    }\n\n    constructor(props: NumberInputProps) {\n        super(props);\n\n        this.state = {\n            value: isNumber(props.value) ? props.value : props.defaultValue,\n            focus: false,\n            error: Boolean(props.error)\n        };\n    }\n\n    public componentWillReceiveProps({min, max, step, value, defaultValue}: NumberInputProps) {\n        if (defaultValue === undefined && value !== this.state.value) {\n            this.committed = true;\n            this.setState({value});\n        }\n    }\n\n    public render() {\n        const {value, focus} = this.state;\n        const {\n            step, min, max,\n            placeholder, name,\n            disabled, required, error,\n            prefix, suffix\n        } = this.props;\n        const disableIncrement = disabled || (isNumber(value) && value >= max!);\n        const disableDecrement = disabled || (isNumber(value) && value <= min!);\n\n        return (\n            <div\n                style-state={{\n                    disabled: Boolean(disabled),\n                    error: Boolean(error),\n                    focus\n                }}\n                onFocus={this.handleFocus}\n                onBlur={this.handleBlur}\n            >\n                {prefix ?\n                    <div className=\"prefix\">\n                        {prefix}\n                    </div> : null\n                }\n                <input\n                    ref={input => this.inputRef = input}\n                    className=\"native-input\"\n                    data-automation-id=\"NATIVE_INPUT_NUMBER\"\n                    type=\"number\"\n                    name={name}\n                    value={isNumber(value) ? value : ''}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    required={required}\n                    min={min}\n                    max={max}\n                    step={step}\n                    onChange={this.handleInputChange}\n                    onKeyDown={this.handleInputKeyDown}\n                    onBlur={this.handleInputBlur}\n                />\n                {suffix ?\n                    <div className=\"suffix\">\n                        {suffix}\n                    </div> : null\n                }\n                <Stepper\n                    className=\"stepper\"\n                    data-automation-id=\"NUMBER_INPUT_STEPPER\"\n                    onUp={this.handleIncrement}\n                    onDown={this.handleDecrement}\n                    disableUp={disableIncrement}\n                    disableDown={disableDecrement}\n                />\n            </div>\n        );\n    }\n\n    private validate(value?: number) {\n        const min = getPropWithDefault(this.props, 'min');\n        const max = getPropWithDefault(this.props, 'max');\n        return isNumber(value) ?\n            Math.min(max, Math.max(min, value))\n            : value;\n    }\n\n    private commit(value?: number) {\n        const {onChange} = this.props;\n        const valueInRange = this.validate(value);\n\n        this.updateValue(valueInRange);\n\n        if (!this.committed) {\n            onChange!({value: valueInRange});\n            this.committed = true;\n        }\n    }\n\n    private revert() {\n        const {value} = this.props;\n        this.updateValue(value);\n        this.committed = true;\n    }\n\n    private updateValue(next?: number) {\n        const {value} = this.state;\n\n        if (value !== next) {\n            this.committed = false;\n            this.setState({value: next});\n        }\n    }\n\n    private stepValue(direction: Direction, multiplier = 1) {\n        const value = this.currentValue;\n        let step = getPropWithDefault(this.props, 'step');\n\n        step = step * multiplier;\n\n        const next = (direction === Direction.Increase ?\n            isNumber(value) ? value + step : step :\n            isNumber(value) ? value - step : -step);\n\n        this.commit(next);\n    }\n\n    private handleIncrement = ({shiftKey}: Modifiers) =>\n        this.stepValue(Direction.Increase, shiftKey ? 10 : 1)\n\n    private handleDecrement = ({shiftKey}: Modifiers) =>\n        this.stepValue(Direction.Decrease, shiftKey ? 10 : 1)\n\n    private handleFocus: React.FocusEventHandler<HTMLElement> =\n        e => this.setState({focus: true})\n\n    private handleBlur: React.FocusEventHandler<HTMLElement> =\n        e => this.setState({focus: false})\n\n    private handleInputKeyDown: React.KeyboardEventHandler<HTMLElement> = e => {\n        switch (e.keyCode) {\n            case KeyCodes.up:\n                this.stepValue(Direction.Increase, e.shiftKey ? 10 : 1);\n                e.preventDefault();\n                break;\n            case KeyCodes.down:\n                this.stepValue(Direction.Decrease, e.shiftKey ? 10 : 1);\n                e.preventDefault();\n                break;\n            case KeyCodes.enter:\n                this.commit(this.state.value);\n                e.preventDefault();\n                break;\n            case KeyCodes.esc:\n                this.revert();\n                e.preventDefault();\n                break;\n        }\n    }\n\n    private handleInputBlur: React.FocusEventHandler<HTMLInputElement> =\n        e => this.commit(this.state.value)\n\n    private handleInputChange: React.ChangeEventHandler<HTMLInputElement> =\n        e => {\n            const {onInput} = this.props;\n            const value = e.target.value;\n            const next = value !== '' ?\n                Number(e.target.value) :\n                undefined;\n\n            this.updateValue(next);\n            onInput!({value});\n        }\n}\n"]}