{"version":3,"file":"toggle.js","sourceRoot":"","sources":["../../../../src/components/toggle/toggle.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,sCAAwC;AACxC,6BAA+B;AAC/B,mDAAyC;AAEzC,qCAAyC;AACzC,iDAAoC;AAgBpC;IAAoC,0BAA6B;IADjE;QAAA,qEAiFC;QAnEU,WAAK,GAAG;YACX,KAAK,EAAE,KAAK;SACf,CAAC;QAEM,sBAAgB,GAAY,KAAK,CAAC;QA8ClC,kBAAY,GAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,EAA5B,CAA4B,CAAC;QAClD,iBAAW,GAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,EAA7B,CAA6B,CAAC;QAElD,YAAM,GAAG,UAAC,CAAyC;YACjD,IAAA,gBAAwC,EAAvC,sBAAQ,EAAE,gBAAK,EAAE,sBAAQ,CAAe;YAC/C,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACxB,QAAQ,CAAC,EAAC,KAAK,EAAE,CAAC,KAAK,EAAC,CAAC,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAClC,CAAC;QACL,CAAC,CAAA;QAEO,iBAAW,GAAG;YAClB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACjC,CAAC,CAAA;;IACL,CAAC;IA7DU,uBAAM,GAAb;QACU,IAAA,eAQQ,EAPV,gBAAK,EACL,sBAAQ,EACR,gBAAK,EACL,gBAAK,EACL,cAAI,EACJ,sBAAQ,EACR,sBAAQ,CACG;QACR,IAAA,wBAAK,CAAe;QAE3B,MAAM,CAAC,CACH,qDACuB,QAAQ,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,iBAChB;gBACT,OAAO,EAAE,KAAM;gBACf,QAAQ,EAAE,QAAS;gBACnB,KAAK,EAAE,KAAM;gBACb,KAAK,EAAE,KAAM;gBACb,GAAG,EAAE,oBAAY,CAAC,IAAI,CAAC,OAAO,CAAC;aAClC;YAEA,CAAC,QAAQ;gBACN,qDACuB,cAAc,EACjC,SAAS,EAAC,aAAa,EACvB,IAAI,EAAC,UAAU,EACf,IAAI,EAAE,IAAI,gBACE,KAAK,EACjB,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,MAAM,EACrB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,IAAI,CAAC,YAAY,EAC1B,MAAM,EAAE,IAAI,CAAC,WAAW,GAC1B;YAEN,6BAAK,SAAS,EAAC,QAAQ,GAAE,CACrB,CACX,CAAC;IACN,CAAC;IA5Da,mBAAY,GAAG;QACzB,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,KAAK;KAClB,CAAC;IACY,mBAAY,GAAG;QACzB,eAAe,EAAE,SAAS,CAAC,KAAK,CAAC;YAC7B,GAAG,EAAE,SAAS,CAAC,MAAM;SACxB,CAAC;KACL,CAAC;IAXe,MAAM;QAD1B,0BAAQ,CAAC,uBAAK,CAAC;OACK,MAAM,CAgF1B;IAAD,aAAC;CAAA,AAhFD,CAAoC,KAAK,CAAC,SAAS,GAgFlD;kBAhFoB,MAAM","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport {FormInputProps} from '../../types/forms';\nimport {isRTLContext} from '../../utils';\nimport style from './toggle.st.css';\n\nexport interface Props extends FormInputProps<boolean> {\n    className?: string;\n    error?: boolean;\n    disabled?: boolean;\n    label?: string;\n    tabIndex?: number;\n    required?: boolean;\n    name?: string;\n}\nexport interface State {\n    focus: boolean;\n}\n\n@stylable(style)\nexport default class Toggle extends React.Component<Props, State> {\n    public static defaultProps = {\n        value: false,\n        disabled: false,\n        error: false,\n        required: false\n    };\n    public static contextTypes = {\n        contextProvider: PropTypes.shape({\n            dir: PropTypes.string\n        })\n    };\n\n    public state = {\n        focus: false\n    };\n\n    private shouldResetFocus: boolean = false;\n\n    public render() {\n        const {\n            value,\n            disabled,\n            error,\n            label,\n            name,\n            required,\n            tabIndex\n        } = this.props;\n        const {focus} = this.state;\n\n        return (\n            <label\n                data-automation-id=\"TOGGLE\"\n                onMouseDown={this.onMouseDown}\n                style-state={{\n                    checked: value!,\n                    disabled: disabled!,\n                    focus: focus!,\n                    error: error!,\n                    rtl: isRTLContext(this.context)\n                }}\n            >\n                {!disabled &&\n                    <input\n                        data-automation-id=\"TOGGLE_INPUT\"\n                        className=\"nativeInput\"\n                        type=\"checkbox\"\n                        name={name}\n                        aria-label={label}\n                        checked={value}\n                        required={required}\n                        onChange={this.toggle}\n                        tabIndex={tabIndex}\n                        onFocus={this.onInputFocus}\n                        onBlur={this.onInputBlur}\n                    />\n                }\n                <div className=\"switch\"/>\n            </label>\n        );\n    }\n\n    private onInputFocus = () => this.setState({focus: true});\n    private onInputBlur = () => this.setState({focus: false});\n\n    private toggle = (e: React.SyntheticEvent<HTMLInputElement>) => {\n        const {disabled, value, onChange} = this.props;\n        if (!disabled && onChange) {\n            onChange({value: !value});\n        }\n        if (this.shouldResetFocus) {\n            this.setState({focus: false});\n            this.shouldResetFocus = false;\n        }\n    }\n\n    private onMouseDown = () => {\n        this.shouldResetFocus = true;\n    }\n}\n"]}