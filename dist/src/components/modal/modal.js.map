{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../src/components/modal/modal.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,mDAAqD;AACrD,qCAAiC;AACjC,qDAAiD;AACjD,6DAA0E;AAC1E,oCAAiC;AACjC,+CAAoC;AAapC;IAA2B,yBAA+B;IAF1D;QAAA,qEAiDC;QAnBW,aAAO,GAAsD,UAAA,KAAK;YAC/D,IAAA,qBAAM,CAAU;YACvB,EAAE,CAAC,CAAC,sBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAM,UAAU,gBAA0B,KAAK,IAAE,MAAM,EAAE,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAC,CAAC;gBAC9F,KAAI,CAAC,KAAK,CAAC,cAAe,CAAC,UAAU,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC,CAAA;;IAaL,CAAC;IAzCU,iCAAiB,GAAxB;QACI,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,kCAAkB,GAAzB;QACI,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,sBAAM,GAAb;QACI,MAAM,CAAC,CACH,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAChB,oBAAC,eAAM;YACH,6BAAK,SAAS,EAAC,UAAU,eAAW,UAAU,wBAAoB,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO;gBAC3F,6BAAK,SAAS,EAAC,UAAU,eAAW,UAAU,IACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAClB,CACJ,CACD,CACZ,GAAG,IAAI,CACX,CAAC;IACN,CAAC;IAUO,sCAAsB,GAA9B,UAA+B,MAAe;QAC1C,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,aAAc,CAAC,CAAC;IAClG,CAAC;IAEO,qCAAqB,GAA7B,UAA8B,YAAqB;QAC/C,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,gCAAe,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,8BAAa,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IA7Ca,kBAAY,GAAe;QACrC,MAAM,EAAE,KAAK;QACb,cAAc,EAAE,YAAI;KACvB,CAAC;IAJO,KAAK;QAFjB,0BAAQ,CAAC,sBAAM,CAAC;QAChB,4BAAU;OACE,KAAK,CA+CjB;IAAD,YAAC;CAAA,AA/CD,CAA2B,KAAK,CAAC,aAAa,GA+C7C;AA/CY,sBAAK","sourcesContent":["import * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {noop} from '../../utils';\nimport {isElement} from '../../utils/is-element';\nimport {enableScrolling, stopScrolling} from '../../utils/stop-scrolling';\nimport {Portal} from '../portal';\nimport styles from './modal.st.css';\n\nexport interface RequestCloseEvent extends React.SyntheticEvent<Element> {\n    source: string;\n}\n\nexport interface ModalProps extends React.HTMLAttributes<HTMLDivElement> {\n    isOpen: boolean;\n    onRequestClose?(event: RequestCloseEvent): void;\n}\n\n@stylable(styles)\n@properties\nexport class Modal extends React.PureComponent<ModalProps> {\n    public static defaultProps: ModalProps = {\n        isOpen: false,\n        onRequestClose: noop\n    };\n\n    public componentDidMount() {\n        this.shouldEnableScrolling(!this.props.isOpen);\n    }\n\n    public componentDidUpdate() {\n        this.shouldEnableScrolling(!this.props.isOpen);\n    }\n\n    public render() {\n        return (\n            this.props.isOpen ? (\n                <Portal>\n                    <div className=\"backdrop\" data-slot=\"backdrop\" data-automation-id=\"MODAL\" onClick={this.onClick}>\n                        <div className=\"children\" data-slot=\"children\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </Portal>\n            ) : null\n        );\n    }\n\n    private onClick: React.EventHandler<React.SyntheticEvent<Element>> = event => {\n        const {target} = event;\n        if (isElement(target)) {\n            const closeEvent: RequestCloseEvent = {...event, source: this.getDataFromNearestNode(target)};\n            this.props.onRequestClose!(closeEvent);\n        }\n    }\n\n    private getDataFromNearestNode(target: Element): string {\n        return target.getAttribute('data-slot') || this.getDataFromNearestNode(target.parentElement!);\n    }\n\n    private shouldEnableScrolling(shouldScroll: boolean) {\n        if (shouldScroll) {\n            enableScrolling();\n        } else {\n            stopScrolling();\n        }\n    }\n}\n"]}