{"version":3,"file":"tree-util.js","sourceRoot":"","sources":["../../../../src/components/tree-view/tree-util.ts"],"names":[],"mappings":"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","sourcesContent":["import {TreeItemData, TreeViewParentsMap, TreeViewStateMap} from './tree-view';\n\nexport function getPreviousItem(\n    dataSource: object[],\n    item: TreeItemData,\n    stateMap: TreeViewStateMap,\n    parentsMap: TreeViewParentsMap): TreeItemData {\n    const parent = parentsMap.get(item);\n\n    const siblings = parent ? parent.children! : dataSource;\n\n    const itemIdx = siblings.indexOf(item);\n    if (itemIdx === 0) { return parent ? parent : item; }\n\n    const prevSibling = siblings[itemIdx - 1] as TreeItemData;\n    const prevSiblingState = stateMap.getItemState(prevSibling);\n\n    if (prevSiblingState.isExpanded && prevSibling.children!.length) {\n        return prevSibling.children![prevSibling.children!.length - 1];\n    } else {\n        return prevSibling;\n    }\n}\n\nexport function getNextItem(\n    dataSource: object[],\n    item: TreeItemData,\n    stateMap: TreeViewStateMap,\n    parentsMap: TreeViewParentsMap): TreeItemData {\n    const itemState = stateMap.getItemState(item);\n\n    if (itemState.isExpanded && item.children) {\n        return item.children![0];\n    } else {\n        const parent = parentsMap.get(item);\n        const siblings = parent ? parent.children! : dataSource;\n        const itemIdx = siblings.indexOf(item);\n        return itemIdx !== siblings.length - 1 ?\n            siblings[itemIdx + 1] as TreeItemData :\n            getNextParentSibling(item, parent, parentsMap);\n    }\n}\n\nexport function getLastAvailableItem(lastChild: TreeItemData, stateMap: TreeViewStateMap): TreeItemData {\n    if (stateMap.getItemState(lastChild).isExpanded && lastChild.children) {\n        return getLastAvailableItem(lastChild.children[lastChild.children.length - 1], stateMap);\n    } else {\n        return lastChild;\n    }\n\n}\n\nexport function getNextParentSibling(\n    item: TreeItemData,\n    parent: TreeItemData | undefined,\n    parentsMap: TreeViewParentsMap): TreeItemData {\n    if (!parent) {\n        return item;\n    } else {\n        const grandParent = parentsMap.get(parent);\n        if (!grandParent) { return item; }\n        const grandParentChildren = grandParent!.children!;\n        const parentIdx = grandParentChildren.indexOf(parent);\n        return parentIdx !== grandParentChildren.length - 1 ? grandParentChildren[parentIdx + 1] : item;\n    }\n}\n"]}