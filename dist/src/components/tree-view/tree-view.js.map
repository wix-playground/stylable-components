{"version":3,"file":"tree-view.js","sourceRoot":"","sources":["../../../../src/components/tree-view/tree-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport {action, autorun, observable} from 'mobx';\nimport {observer} from 'mobx-react';\nimport * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {TreeItem} from './tree-item-default';\nimport {getLastAvailableItem, getNextItem, getPreviousItem} from './tree-util';\nimport style from './tree-view.st.css';\n\nexport const TreeKeyCodes: any = {\n    ENTER: keycode('enter'),\n    HOME: keycode('home'),\n    END: keycode('end'),\n    UP: keycode('up'),\n    DOWN: keycode('down'),\n    LEFT: keycode('left'),\n    RIGHT: keycode('right')\n};\n\nexport type TreeItemEventHandler = (item: TreeItemData, e: React.MouseEvent<HTMLElement>) => void;\n\nexport interface TreeItemData {\n    label: string;\n    children?: TreeItemData[];\n}\n\nexport interface TreeItemProps {\n    item: TreeItemData;\n    itemRenderer: React.ComponentType<TreeItemProps>;\n    onItemClick?: TreeItemEventHandler;\n    onIconClick?: TreeItemEventHandler;\n    stateMap: TreeViewStateMap;\n}\n\nexport interface TreeViewProps extends React.HTMLAttributes<HTMLUListElement> {\n    dataSource: object[];\n    itemRenderer?: React.ComponentType<TreeItemProps>;\n    onSelectItem?: React.EventHandler<any>;\n    onFocusItem?: React.EventHandler<any>;\n    selectedItem?: TreeItemData;\n    focusedItem?: TreeItemData;\n    className?: string;\n}\n\nexport interface TreeItemState {\n    isSelected: boolean;\n    isExpanded: boolean;\n    isFocused: boolean;\n}\n\nexport type StateMap = Map<TreeItemData, TreeItemState>;\nexport type TreeViewParentsMap = Map<TreeItemData, TreeItemData | undefined>;\n\nexport function initParentsMap(parentsMap: TreeViewParentsMap,\n                               data: TreeItemData[] = [], parent: TreeItemData | undefined) {\n    data.forEach((item: TreeItemData) => {\n        parentsMap.set(item, parent);\n        initParentsMap(parentsMap, item.children || [], item);\n    });\n}\n\nconst TreeItemWrapper = observer(TreeItem);\n\nexport class TreeViewStateMap {\n    private stateMap: StateMap = new Map<TreeItemData, TreeItemState>();\n\n    public getItemState(item: TreeItemData) {\n        const state = this.stateMap.get(item);\n        if (state) {\n            return state;\n        } else {\n            const newState = observable({isSelected: false, isExpanded: false, isFocused: false});\n            this.stateMap.set(item, newState);\n            return newState;\n        }\n    }\n}\n\n@observer\n@stylable(style)\n@properties\nexport class TreeView extends React.Component<TreeViewProps> {\n    public static defaultProps: Partial<TreeViewProps> = {\n        itemRenderer: TreeItemWrapper,\n        onSelectItem: () => { },\n        onFocusItem: () => { }\n    };\n\n    private stateMap: TreeViewStateMap = new TreeViewStateMap();\n    private parentsMap: TreeViewParentsMap = new Map<TreeItemData, TreeItemData | undefined>();\n\n    constructor(props: TreeViewProps) {\n        super(props);\n        initParentsMap(this.parentsMap, props.dataSource as TreeItemData[], undefined);\n    }\n\n    public componentDidMount() {\n        autorun(() => {\n            if (this.props.selectedItem) {\n                action(() => this.stateMap.getItemState(this.props.selectedItem!).isSelected = true)();\n            }\n            if (this.props.focusedItem) {\n                action(() => this.stateMap.getItemState(this.props.focusedItem!).isFocused = true)();\n            }\n        });\n    }\n\n    public render() {\n        const TreeNode = this.props.itemRenderer!;\n\n        return (\n            <ul\n                data-automation-id=\"TREE_VIEW\"\n                onKeyDown={this.onKeyDown}\n                role=\"tree\"\n                tabIndex={0}\n                aria-activedescendant={this.props.focusedItem && this.props.focusedItem.label}\n            >\n                {(this.props.dataSource || []).map((item: TreeItemData, index: number) =>\n                    <TreeNode\n                        item={item}\n                        onItemClick={this.onSelectItem}\n                        itemRenderer={this.props.itemRenderer!}\n                        onIconClick={this.onToggleItem}\n                        stateMap={this.stateMap}\n                        key={`${index}`}\n                    />\n                )}\n            </ul>\n        );\n    }\n\n    public collapse = (item: TreeItemData): void => {\n        this.collapseItem(item);\n        if (item.children) {\n            item.children.forEach(this.collapse);\n        }\n    }\n\n    public collapseAll = (): void => {\n        this.props.dataSource.forEach(this.collapse);\n    }\n\n    public expand = (item: TreeItemData): void => {\n        this.expandItem(item);\n        if (item.children) {\n            item.children.forEach(this.expand);\n        }\n    }\n\n    public expandAll = (): void => {\n        this.props.dataSource.forEach(this.expand);\n    }\n\n    public selectItem(item: TreeItemData) {\n        if (this.props.selectedItem) {\n            if (this.props.selectedItem !== item) {\n                this.stateMap.getItemState(this.props.selectedItem).isSelected = false;\n                this.props.onSelectItem!(this.props.selectedItem !== item ? item : undefined);\n            }\n        } else {\n            this.props.onSelectItem!(item);\n        }\n    }\n\n    private toggleItem(item: TreeItemData) {\n        this.stateMap.getItemState(item).isExpanded = !this.stateMap.getItemState(item).isExpanded;\n    }\n\n    @action\n    private onSelectItem = (item: TreeItemData, e: React.MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        this.selectItem(item);\n        if (this.props.focusedItem) { this.stateMap.getItemState(this.props.focusedItem).isFocused = false; }\n    }\n\n    @action\n    private onToggleItem = (item: TreeItemData, e: React.MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        if (this.props.focusedItem) { this.stateMap.getItemState(this.props.focusedItem).isFocused = false; }\n        this.toggleItem(item);\n        this.props.onFocusItem!(item);\n    }\n\n    @action\n    private onFocusItem(item: TreeItemData) {\n        if (this.props.focusedItem !== item) {\n            if (this.props.focusedItem) { this.stateMap.getItemState(this.props.focusedItem).isFocused = false; }\n            this.props.onFocusItem!(item);\n        }\n    }\n\n    private expandItem = (item: TreeItemData) => {\n        if (this.stateMap.getItemState(item).isExpanded) {\n            this.focusNext(item);\n        } else {\n            if (item.children) { this.stateMap.getItemState(item).isExpanded = true; }\n        }\n    }\n\n    private collapseItem = (item: TreeItemData) => {\n        if (!this.stateMap.getItemState(item).isExpanded) {\n            const parent = this.parentsMap.get(item);\n            if (parent) { this.onFocusItem!(parent); }\n        } else {\n            if (item.children) { this.stateMap.getItemState(item).isExpanded = false; }\n        }\n    }\n\n    private focusPrev = (item: TreeItemData) =>\n        this.onFocusItem!(getPreviousItem(this.props.dataSource, item, this.stateMap, this.parentsMap))\n\n    private focusNext = (item: TreeItemData) =>\n        this.onFocusItem!(getNextItem(this.props.dataSource, item, this.stateMap, this.parentsMap))\n\n    private focusFirst = () => this.props.onFocusItem!(this.props.dataSource[0]);\n    private focusLast = () =>\n        this.props.onFocusItem!(\n            getLastAvailableItem(this.props.dataSource[this.props.dataSource.length - 1] as TreeItemData, this.stateMap)\n        )\n\n    @action\n    private onKeyDown = (e: any) => {\n        if (!this.props.focusedItem) { return; }\n\n        switch (e.keyCode) {\n            case TreeKeyCodes.RIGHT:\n                e.preventDefault(); this.expandItem(this.props.focusedItem); break;\n            case TreeKeyCodes.LEFT:\n                e.preventDefault(); this.collapseItem(this.props.focusedItem); break;\n            case TreeKeyCodes.UP:\n                e.preventDefault(); this.focusPrev(this.props.focusedItem); break;\n            case TreeKeyCodes.DOWN:\n                e.preventDefault(); this.focusNext(this.props.focusedItem); break;\n            case TreeKeyCodes.ENTER:\n                e.preventDefault(); this.selectItem(this.props.focusedItem); break;\n            case TreeKeyCodes.HOME:\n                this.stateMap.getItemState(this.props.focusedItem).isFocused = false;\n                e.preventDefault(); this.focusFirst(); break;\n            case TreeKeyCodes.END:\n                this.stateMap.getItemState(this.props.focusedItem).isFocused = false;\n                e.preventDefault(); this.focusLast(); break;\n        }\n    }\n}\n"]}