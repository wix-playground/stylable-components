{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["../../../../src/components/checkbox/checkbox.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,mDAAqD;AAErD,qDAAuC;AAwBvC;IAA8B,4BAA6C;IAF3E;QAAA,qEA4EC;QApEU,WAAK,GAAkB,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;QAuDzC,kBAAY,GAAG,UAAC,CAAoC;YACxD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3C,KAAI,CAAC,KAAK,CAAC,QAAS,CAAC,EAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;YAC3F,CAAC;QACL,CAAC,CAAA;QAEO,sBAAgB,GAAG;YACvB,KAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QACrC,CAAC,CAAA;QAEO,qBAAe,GAAG;YACtB,KAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QACtC,CAAC,CAAA;;IACL,CAAC;IAlEU,yBAAM,GAAb;QACI,IAAM,UAAU,GAAG;YACf,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM;YAC1B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS;YAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS;YAC9B,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAc;YACxC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;SAC9B,CAAC;QAEF,MAAM,CAAC,CACH,mDACuB,eAAe,EAClC,OAAO,EAAE,IAAI,CAAC,YAAY,iBACb,UAAU,EACvB,IAAI,EAAC,UAAU,kBACD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;YAGnE,qDACuB,iBAAiB,EACpC,IAAI,EAAC,UAAU,EACf,SAAS,EAAC,gBAAgB,EAC1B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACzB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAC9B,MAAM,EAAE,IAAI,CAAC,eAAe,EAC5B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EACjB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAC/B;YAEF,8BACI,SAAS,EAAC,SAAS,wBACA,cAAc,GACnC;YAED,IAAI,CAAC,KAAK,CAAC,aAAa;gBACrB,8BACI,SAAS,EAAC,mBAAmB,wBACV,wBAAwB,GAC7C;YAEL,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC1C,8BACI,SAAS,EAAC,UAAU,wBACD,mBAAmB,GACxC;YAEL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAClB,CACT,CAAC;IACN,CAAC;IA1Da,qBAAY,GAA2B;QACjD,aAAa,EAAE,KAAK;QACpB,QAAQ,EAAE,CAAC;KACd,CAAC;IAJO,QAAQ;QAFpB,0BAAQ,CAAC,yBAAM,CAAC;QAChB,4BAAU;OACE,QAAQ,CA0EpB;IAAD,eAAC;CAAA,AA1ED,CAA8B,KAAK,CAAC,SAAS,GA0E5C;AA1EY,4BAAQ","sourcesContent":["import * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {FormInputProps} from '../../types/forms';\nimport styles from './checkbox.st.css';\n\nexport interface CheckBoxProps extends FormInputProps<boolean>, properties.Props {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    readonly?: boolean;\n    indeterminate?: boolean;\n    tabIndex?: number;\n    id?: string;\n}\n\nexport interface CheckBoxIconProps {\n    value?: boolean;\n    indeterminate?: boolean;\n    disabled?: boolean;\n    className?: string;\n}\n\nexport interface CheckBoxState {\n    isFocused: boolean;\n}\n\n@stylable(styles)\n@properties\nexport class CheckBox extends React.Component<CheckBoxProps, CheckBoxState> {\n    public static defaultProps: Partial<CheckBoxProps> = {\n        indeterminate: false,\n        tabIndex: 0\n    };\n\n    public state: CheckBoxState = {isFocused: false};\n\n    public render() {\n        const styleState = {\n            checked: this.props.value!,\n            disabled: this.props.disabled!,\n            readonly: this.props.readonly!,\n            indeterminate: this.props.indeterminate!,\n            focus: this.state.isFocused\n        };\n\n        return (\n            <div\n                data-automation-id=\"CHECKBOX_ROOT\"\n                onClick={this.handleChange}\n                style-state={styleState}\n                role=\"checkbox\"\n                aria-checked={this.props.indeterminate ? 'mixed' : this.props.value}\n            >\n\n                <input\n                    data-automation-id=\"NATIVE_CHECKBOX\"\n                    type=\"checkbox\"\n                    className=\"nativeCheckbox\"\n                    checked={this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.handleChange}\n                    onFocus={this.handleInputFocus}\n                    onBlur={this.handleInputBlur}\n                    id={this.props.id}\n                    tabIndex={this.props.tabIndex}\n                />\n\n                <span\n                    className=\"boxIcon\"\n                    data-automation-id=\"CHECKBOX_BOX\"\n                />\n\n                {this.props.indeterminate &&\n                    <span\n                        className=\"indeterminateIcon\"\n                        data-automation-id=\"CHECKBOX_INDETERMINATE\"\n                    />\n                }\n                {!this.props.indeterminate && this.props.value &&\n                    <span\n                        className=\"tickIcon\"\n                        data-automation-id=\"CHECKBOX_TICKMARK\"\n                    />\n                }\n                {this.props.children}\n            </div>\n        );\n    }\n\n    private handleChange = (e: React.SyntheticEvent<HTMLElement>) => {\n        if (!this.props.disabled && !this.props.readonly) {\n                this.props.onChange!({value: this.props.indeterminate ? true : !this.props.value});\n        }\n    }\n\n    private handleInputFocus = () => {\n        this.setState({isFocused: true});\n    }\n\n    private handleInputBlur = () => {\n        this.setState({isFocused: false});\n    }\n}\n"]}