{"version":3,"file":"date-picker.js","sourceRoot":"","sources":["../../../../src/components/date-picker/date-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {FormInputProps} from '../../types/forms';\nimport {noop} from '../../utils';\nimport {Popup} from '../popup';\nimport {Calendar} from './calendar';\nimport {CalendarIcon} from './date-picker-icons';\nimport styles from './date-picker.st.css';\n\nconst invalidDate: string = 'Invalid Date';\n\nexport interface DatePickerProps extends FormInputProps<Date>, properties.Props {\n    placeholder?: string;\n    openOnFocus?: boolean;\n    disabled?: boolean;\n    readOnly?: boolean;\n    showDropdownOnInit?: boolean;\n    startingDay?: number;\n    calendarIcon?: React.ComponentType;\n}\n\nexport interface DatePickerState {\n    inputValue: string;\n    isDropdownVisible: boolean;\n    dropdownRef: HTMLDivElement | null;\n    dropdownDate: Date;\n    highlightSelectedDate: boolean;\n    highlightFocusedDate: boolean;\n}\n\n@stylable(styles)\n@properties\nexport class DatePicker extends React.PureComponent<DatePickerProps, DatePickerState> {\n    public static defaultProps: Partial<DatePickerProps> = {\n        openOnFocus: false,\n        onChange: noop,\n        calendarIcon: CalendarIcon\n    };\n\n    public componentWillMount() {\n        this.setState({\n            inputValue: this.props.value ? this.props.value.toDateString() : '',\n            isDropdownVisible: this.props.showDropdownOnInit || false,\n            dropdownDate: this.props.value || new Date()\n        });\n    }\n\n    public render() {\n        const Icon = this.props.calendarIcon!;\n\n        return (\n            <div\n                data-automation-id=\"DATE_PICKER_ROOT\"\n                ref={dropdownRef => this.setState({dropdownRef})}\n            >\n                <input\n                    className=\"input\"\n                    onKeyDown={this.onKeyDown}\n                    onMouseDown={this.onMouseDown}\n                    onBlur={this.onBlur}\n                    onFocus={this.onFocus}\n                    onChange={this.onInputChange}\n                    value={this.state.inputValue}\n                    placeholder={this.props.placeholder}\n                    type=\"text\"\n                    data-automation-id=\"DATE_PICKER_INPUT\"\n                />\n                <div className=\"icon\" data-automation-id=\"CALENDAR_ICON\" onClick={this.toggleDropdown}>\n                    <Icon />\n                </div>\n                <Popup open={this.state.isDropdownVisible} anchor={this.state.dropdownRef}>\n                    <Calendar\n                        onChange={this.onCalendarInput}\n                        updateDropdownDate={this.updateDropdownDate}\n                        value={this.state.dropdownDate}\n                        selectedDate={this.props.value}\n                        startingDay={this.props.startingDay}\n                        highlightSelectedDate={this.state.highlightSelectedDate}\n                        highlightFocusedDate={this.state.highlightFocusedDate}\n                    />\n                </Popup>\n            </div>\n        );\n    }\n\n    // Called with possibly invalid string from the input\n    private onUserInput = (input: string): void => {\n        if (this.isDateValid(input)) {\n            const updatedDate = input ? new Date(input) : new Date();\n            this.setState({inputValue: updatedDate.toDateString()});\n\n            this.props.onChange!({value: updatedDate});\n        } else {\n            this.setState({inputValue: invalidDate});\n        }\n    }\n\n    // Should only be called with valid date from the dropdown\n    private onCalendarInput = (input: Date): void => {\n        this.setState({\n            inputValue: input.toDateString() ,\n            isDropdownVisible: false,\n            highlightSelectedDate: true,\n            highlightFocusedDate: false,\n            dropdownDate: input\n        });\n\n        this.props.onChange!({value: input});\n    }\n\n    private updateDropdownDate = (updatedDate: Date): void => {\n        this.setState({\n           highlightFocusedDate: false,\n           dropdownDate: updatedDate\n        });\n    }\n\n    private toggleDropdown = (): void => {\n        if (!this.props.disabled && !this.props.readOnly) {\n            this.setState({isDropdownVisible: !this.state.isDropdownVisible});\n        }\n    }\n\n    private onInputChange: React.EventHandler<React.SyntheticEvent<HTMLInputElement>> = (event): void => {\n        const eventTarget = event.target as HTMLInputElement;\n        this.setState({inputValue: eventTarget.value});\n    }\n\n    private onFocus: React.EventHandler<React.SyntheticEvent<HTMLInputElement>> = (): void => {\n        if (this.props.openOnFocus) {\n            this.setState({isDropdownVisible: true});\n        }\n    }\n\n    private onMouseDown: React.EventHandler<React.SyntheticEvent<HTMLInputElement>> = (): void => {\n        this.toggleDropdown();\n    }\n\n    private onBlur: React.EventHandler<React.SyntheticEvent<HTMLInputElement>> = (event): void => {\n        const eventTarget = event.target as HTMLInputElement;\n        this.onUserInput(eventTarget.value);\n        this.setState({isDropdownVisible: false});\n    }\n\n    private shiftDate = (daysToShift: number): void => {\n        const shiftedDate: Date = new Date(\n            this.state.dropdownDate.getFullYear(),\n            this.state.dropdownDate.getMonth(),\n            this.state.dropdownDate.getDate()\n        );\n\n        shiftedDate.setDate(this.state.dropdownDate.getDate() + daysToShift);\n        this.setState({\n           highlightFocusedDate: true,\n           dropdownDate: shiftedDate\n        });\n    }\n\n    private onKeyDown: React.EventHandler<React.KeyboardEvent<Element>> = (event): void => {\n        const eventTarget = event.target as HTMLInputElement;\n        const {keyCode} = event;\n\n        if (!this.props.disabled && !this.props.readOnly) {\n            switch (keyCode) {\n                case keycode('enter'):\n                    this.state.highlightFocusedDate\n                        ? this.onCalendarInput(this.state.dropdownDate)\n                        : this.onUserInput(eventTarget.value);\n                    this.toggleDropdown();\n                    event.preventDefault();\n                    break;\n\n                case keycode('space'):\n                    this.toggleDropdown();\n                    event.preventDefault();\n                    break;\n\n                case keycode('right'):\n                    if (this.state.isDropdownVisible) {\n                        event.preventDefault();\n                        this.shiftDate(1);\n                    }\n                    break;\n\n                case keycode('left'):\n                    if (this.state.isDropdownVisible) {\n                        event.preventDefault();\n                        this.shiftDate(-1);\n                    }\n                    break;\n\n                case keycode('up'):\n                    if (this.state.isDropdownVisible) {\n                        event.preventDefault();\n                        this.shiftDate(-7);\n                    }\n                    break;\n\n                case keycode('down'):\n                    if (this.props.openOnFocus === false && !this.state.isDropdownVisible) {\n                        this.toggleDropdown();\n                    } else if (!this.state.isDropdownVisible) {\n                        this.toggleDropdown();\n                    } else {\n                        this.shiftDate(7);\n                    }\n                    event.preventDefault();\n                    break;\n            }\n        }\n    }\n\n    private isDateValid = (stringToValidate: string): boolean => {\n        return new Date(stringToValidate).toDateString() !== invalidDate;\n    }\n}\n"]}