{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../../src/components/date-picker/calendar.tsx"],"names":[],"mappings":"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","sourcesContent":["import {computed} from 'mobx';\nimport {observer} from 'mobx-react';\nimport * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport {\n    getDayNames,\n    getDaysInMonth,\n    getMonthFromOffset,\n    getMonthNames,\n    getNumOfFollowingDays,\n    getNumOfPreviousDays\n} from '../../utils';\nimport styles from './date-picker.st.css';\nimport {Day} from './day';\n\nexport interface CalendarProps {\n    value: Date;\n    selectedDate?: Date;\n    focusedDate?: Date;\n    startingDay?: number;\n    highlightSelectedDate?: boolean;\n    highlightFocusedDate?: boolean;\n    onChange(date: Date): void;\n    updateDropdownDate(date: Date): void;\n}\n\nconst monthNames = getMonthNames();\n\n@stylable(styles)\n@observer\nexport class Calendar extends React.Component<CalendarProps, {}> {\n    public render() {\n        return (\n            <div data-automation-id=\"DATE_PICKER_CALENDAR\">\n                <div className=\"dropdownArrowWrapper\"><div className=\"dropdownArrow\" /></div>\n                <div className=\"dropdown\" data-automation-id=\"DATE_PICKER_DROPDOWN\">\n                    <div className=\"header\">\n                        <span\n                            className=\"arrowWrapper arrowWrapperPrev\"\n                            onMouseDown={this.goToPrevMonth}\n                            data-automation-id=\"PREV_MONTH_BUTTON\"\n                        >\n                            <i className=\"headerArrow headerArrowPrev\" />\n                        </span>\n                        <span className=\"headerDate\">\n                            <span data-automation-id=\"MONTH_NAME\">\n                                {this.monthName}\n                            </span>\n                            &nbsp;\n                            <span data-automation-id=\"YEAR\">{this.year}</span>\n                        </span>\n                        <span\n                            className=\"arrowWrapper arrowWrapperNext\"\n                            onMouseDown={this.goToNextMonth}\n                            data-automation-id=\"NEXT_MONTH_BUTTON\"\n                        >\n                            <i className=\"headerArrow headerArrowNext\" />\n                        </span>\n                    </div>\n                    <div className=\"calendar\" data-automation-id=\"DAY_GRID\">\n                        {this.dayNames}\n                        {this.previousDays}\n                        {this.days}\n                        {this.followingDays}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private selectDay = (day: number) => {\n        const date = new Date(this.props.value.getFullYear(), this.props.value.getMonth(), day);\n        this.props.onChange(date);\n    }\n\n    @computed\n    get monthName(): string {\n        return monthNames[this.props.value.getMonth()];\n    }\n\n    @computed\n    get year(): number {\n        return this.props.value.getFullYear();\n    }\n\n    @computed\n    get days(): JSX.Element[] {\n        const dayArray: JSX.Element[] = [];\n        const daysInMonth = getDaysInMonth(this.props.value);\n\n        for (let day = 1; day <= daysInMonth; day++) {\n            dayArray.push(\n                <Day\n                    day={day}\n                    focused={this.isFocused(day)}\n                    selected={this.isSelected(day)}\n                    currentDay={this.isCurrentDay(day)}\n                    onSelect={this.selectDay}\n                    data-automation-id={'DAY_' + day}\n                    key={'DAY_' + day}\n                />\n            );\n        }\n\n        return dayArray;\n    }\n\n    @computed\n    get dayNames(): JSX.Element[] {\n        return getDayNames(this.props.startingDay).map((name: string, index: number) => {\n            return (\n                <span\n                    className=\"calendarItem dayName\"\n                    key={'DAY_NAME_' + index}\n                    data-automation-id={'DAY_NAME_' + name.toUpperCase()}\n                >\n                    {name}\n                </span>\n            );\n        });\n    }\n\n    @computed\n    get previousDays(): JSX.Element[] {\n        const previousDays: JSX.Element[] = [];\n        const lastDayOfPrevMonth: number = getDaysInMonth(getMonthFromOffset(this.props.value, -1));\n        const numberOfDaysToDisplay: number = lastDayOfPrevMonth -\n            getNumOfPreviousDays(this.props.value, this.props.startingDay);\n\n        for (let day = numberOfDaysToDisplay + 1; day <= lastDayOfPrevMonth; day++) {\n            previousDays.push((\n                <Day\n                    day={day}\n                    data-automation-id={'PREV_DAY_' + day}\n                    key={'PREV_DAY_' + day}\n                    partOfPrevMonth={true}\n                />\n            ));\n        }\n\n        return previousDays;\n    }\n\n    @computed\n    get followingDays(): JSX.Element[] {\n        const followingDays: JSX.Element[] = [];\n        const numberOfDaysToDisplay: number = getNumOfFollowingDays(this.props.value, this.props.startingDay);\n\n        for (let i = 1; i <= numberOfDaysToDisplay; i++) {\n            followingDays.push(\n                <Day\n                    day={i}\n                    data-automation-id={'NEXT_DAY_' + i}\n                    key={'NEXT_DAY_' + i}\n                    partOfNextMonth={true}\n                />\n            );\n        }\n\n        return followingDays;\n    }\n\n    private isCurrentDay(day: number): boolean {\n        const currentDate = new Date();\n        return (this.props.value.getFullYear() === currentDate.getFullYear()\n            && this.props.value.getMonth() === currentDate.getMonth()\n            && currentDate.getDate() === day);\n    }\n\n    private isSelected(day: number): boolean {\n        // Don't highlight the current day as selected\n        if (this.props.highlightSelectedDate && this.props.selectedDate) {\n            return (this.props.value.getFullYear() === this.props.selectedDate.getFullYear()\n                && this.props.value.getMonth() === this.props.selectedDate.getMonth()\n                && this.props.selectedDate.getDate() === day);\n        } else {\n            return false;\n        }\n    }\n\n    private isFocused(day: number): boolean {\n        if (this.props.highlightFocusedDate) {\n            return (this.props.value.getDate() === day);\n        } else {\n            return false;\n        }\n    }\n\n    private goToNextMonth: React.EventHandler<React.SyntheticEvent<Element>> = event => {\n        event.preventDefault();\n        const nextMonth: Date =\n            getMonthFromOffset(new Date(this.props.value.getFullYear(), this.props.value.getMonth(), 1), 1);\n        this.props.updateDropdownDate(nextMonth);\n    }\n\n    private goToPrevMonth: React.EventHandler<React.SyntheticEvent<Element>> = event => {\n        event.preventDefault();\n        const previousMonth: Date =\n            getMonthFromOffset(new Date(this.props.value.getFullYear(), this.props.value.getMonth(), 1), -1);\n        this.props.updateDropdownDate(previousMonth);\n    }\n}\n"]}