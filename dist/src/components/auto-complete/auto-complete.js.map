{"version":3,"file":"auto-complete.js","sourceRoot":"","sources":["../../../../src/components/auto-complete/auto-complete.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {Popup} from '../../';\nimport {ChangeEvent} from '../../types/events';\nimport {FormInputProps} from '../../types/forms';\nimport {noop} from '../../utils';\nimport {CaretDown} from '../drop-down/drop-down-icons';\nimport {OptionList, SelectionListItemValue, SelectionListModel} from '../selection-list/selection-list-model';\nimport {SelectionListView} from '../selection-list/selection-list-view';\nimport style from './auto-complete.st.css';\n\nexport type FilterPredicate = (item: string, filterString: string) => boolean;\n\nexport interface AutoCompleteProps extends FormInputProps<string>, Partial<OptionList>, properties.Props {\n    open?: boolean;\n    filter?: FilterPredicate;\n    onOpenStateChange?: (e: ChangeEvent<boolean>) => void;\n}\n\nexport interface AutoCompleteState {\n    input: HTMLInputElement | null;\n}\n\nconst prefixFilter: FilterPredicate = (item: string, prefix: string) => {\n    return item.toLowerCase().startsWith(prefix.toLowerCase());\n};\n\n@stylable(style)\n@properties\nexport class AutoComplete extends React.Component<AutoCompleteProps, AutoCompleteState> {\n    public static defaultProps: AutoCompleteProps = {\n        open: false,\n        dataSource: [],\n        value: '',\n        filter: prefixFilter,\n        onChange: noop,\n        onOpenStateChange: noop\n    };\n    public state = {input: null, isOpen: this.props.open!};\n\n    public render() {\n        const filteredItems = this.props.value ?\n            this.props.dataSource!.filter((item: string) => this.props.filter!(item, this.props.value!)) :\n            this.props.dataSource;\n        const list = new SelectionListModel();\n        list.addDataSource({dataSource: filteredItems});\n        return (\n            <div data-automation-id=\"AUTO_COMPLETE\">\n                <input\n                    className=\"auto-complete-input\"\n                    data-automation-id=\"AUTO_COMPLETE_INPUT\"\n                    type=\"text\"\n                    onChange={this.onChange}\n                    value={this.props.value}\n                    ref={this.refCallback}\n                />\n                <CaretDown onClick={this.onCaretClick} className=\"caret\" data-automation-id=\"AUTO_COMPLETE_CARET\"/>\n                <Popup anchor={this.state.input} open={this.props.open && filteredItems!.length > 0}>\n                    <SelectionListView\n                        className=\"root auto-complete-list\"\n                        list={list}\n                        onChange={this.onClick}\n                    />\n                </Popup>\n            </div>\n        );\n    }\n\n    private refCallback = (ref: HTMLInputElement) => {\n        this.setState({input: ref});\n    }\n\n    private onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange!({value: e.target.value || ''});\n        if (!this.props.value) {\n            this.openPopup();\n        }\n    }\n\n    private onClick = (e: ChangeEvent<SelectionListItemValue>) => {\n        this.props.onChange!(e);\n        this.togglePopup();\n    }\n\n    private onCaretClick = () => {\n        this.togglePopup();\n    }\n\n    private openPopup() {\n        this.props.onOpenStateChange!({value: true});\n    }\n\n    private togglePopup() {\n        this.props.onOpenStateChange!({value: !this.props.open});\n    }\n}\n"]}