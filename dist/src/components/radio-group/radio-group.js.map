{"version":3,"file":"radio-group.js","sourceRoot":"","sources":["../../../../src/components/radio-group/radio-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {action, computed, observable} from 'mobx';\nimport {observer} from 'mobx-react';\nimport * as React from 'react';\nimport {properties, stylable} from 'wix-react-tools';\nimport {ChangeEvent} from '../../types/events';\nimport {FormInputProps} from '../../types/forms';\nimport {RadioButton} from './radio-button';\nimport styles from './radio-group.st.css';\n\nexport interface RadioGroupDataSchemaProps {\n    disabled?: boolean;\n    readOnly?: boolean;\n    value: string;\n    labelText?: string;\n}\n\nexport interface RadioGroupProps extends FormInputProps<string>, properties.Props {\n    children?: any;\n    dataSource?: RadioGroupDataSchemaProps[];\n    name?: string;\n    disabled?: boolean;\n    readOnly?: boolean;\n    tabIndex?: number;\n    className?: string;\n}\n\nlet counter = 0;\n\nexport interface RadioState {\n    checked: boolean;\n}\n\n@stylable(styles)\n@properties\n@observer\nexport class RadioGroup extends React.Component<RadioGroupProps> {\n    public static defaultProps: Partial<RadioGroupProps> = {\n        dataSource: [],\n        tabIndex: 0\n    };\n\n    private name: string;\n    private checkedArray: RadioState[];\n\n    constructor(props: RadioGroupProps) {\n        super(props);\n        this.checkedArray = [];\n        if (this.props.children) {\n            this.initCheckedArray(this.props.children, true);\n        } else if (this.props.dataSource) {\n            this.initCheckedArray(this.props.dataSource, false);\n        }\n        this.name = this.props.name ? this.props.name : 'radio_group_' + counter++;\n    }\n\n    public render() {\n        let childArray: React.ReactNode[] = [];\n\n        if (this.props.children) {\n            if (React.isValidElement(this.props.children)) {\n                childArray.push(this.props.children);\n            } else {\n                childArray = this.createChildren(this.props.children);\n            }\n        } else if (this.props.dataSource!.length > 0) {\n            childArray = this.createChildrenFromDataSource();\n        }\n\n        return (\n            <div data-automation-id=\"RADIO_GROUP\" role=\"radiogroup\">\n                {childArray}\n            </div>\n        );\n    }\n\n    private initCheckedArray(dataArray: any[], isChildren: boolean = false) {\n        let noCheckedRadioButton = true;\n        for (let button of dataArray) {\n            if (typeof button === 'object' && isChildren) {\n                button = button.props;\n            }\n\n            const isChecked: boolean = !!this.props.value && this.props.value === button.value;\n            this.checkedArray.push(\n                observable({checked: noCheckedRadioButton && isChecked})\n            );\n            if (isChecked) {\n                noCheckedRadioButton = false;\n            }\n        }\n    }\n\n    private childrenOnClick(index: number) {\n        return (e: ChangeEvent<string>) => {\n            this.checkedArray.forEach(data => {\n                data.checked = false;\n            });\n            this.checkedArray[index].checked = true;\n            if (this.props.onChange) {\n                this.props.onChange(e);\n            }\n        };\n    }\n\n    private createChildrenFromDataSource(): Array<React.ReactElement<RadioButton>> {\n        return this.props.dataSource!.map((props, index) => (\n            <RadioButton\n                key={index}\n                value={props.value}\n                data-automation-id={'RADIO_BUTTON_' + index}\n                checked={this.checkedArray[index].checked}\n                onChange={this.childrenOnClick(index)}\n                disabled={this.props.disabled || props.disabled}\n                readOnly={this.props.readOnly || props.readOnly}\n                name={this.name}\n                className=\"radioGroupChild\"\n                tabIndex={this.getChildTabIndex(index, this.isGroupChecked)}\n            >\n                {props.labelText ? <label className=\"data-label\">{props.labelText}</label> : null}\n            </RadioButton>\n        ));\n    }\n\n    private createChildren(dataArray: React.ReactNode): React.ReactNode[] {\n        return React.Children.map(dataArray, (child, index) => {\n            if (child && typeof child === 'object') {\n                if (child.type === RadioButton) {\n                    return (\n                        <RadioButton\n                            key={index}\n                            value={child.props.value}\n                            data-automation-id={'RADIO_BUTTON_' + index}\n                            checked={this.checkedArray[index].checked}\n                            onChange={this.childrenOnClick(index)}\n                            disabled={this.props.disabled || child.props.disabled}\n                            readOnly={this.props.readOnly || child.props.readOnly}\n                            name={this.name}\n                            className=\"radioGroupChild\"\n                            tabIndex={this.getChildTabIndex(index, this.isGroupChecked)}\n                            children={child.props.children}\n                        />\n                    );\n                } else {\n                    return (\n                        React.cloneElement(child,\n                            {\n                                key: index,\n                                checked: this.checkedArray[index].checked,\n                                onChange: action(this.childrenOnClick(index)),\n                                className: 'radioGroupChild',\n                                tabIndex: this.getChildTabIndex(index, this.isGroupChecked)\n                            },\n                            child.props.children\n                        )\n                    );\n                }\n            } else {\n                return child;\n            }\n        });\n    }\n\n    @computed\n    get isGroupChecked(): boolean {\n        return !!this.checkedArray.find(elm => elm.checked);\n    }\n\n    private getChildTabIndex = (index: number, isGroupChecked: boolean): number | undefined => {\n        if (isGroupChecked) {\n            return this.checkedArray[index].checked ? this.props.tabIndex : -1;\n        } else {\n            return index === 0 ? this.props.tabIndex : -1;\n        }\n    }\n}\n"]}