{"version":3,"file":"date-helpers.js","sourceRoot":"","sources":["../../../src/utils/date-helpers.ts"],"names":[],"mappings":";;AAAA,IAAM,UAAU,GAAG;IACf,SAAS,EAAE,UAAU,EAAE,OAAO;IAC9B,OAAO,EAAE,KAAK,EAAE,MAAM;IACtB,MAAM,EAAE,QAAQ,EAAE,WAAW;IAC7B,SAAS,EAAE,UAAU,EAAE,UAAU;CACpC,CAAC;AAEF,qBAA4B,WAAuB;IAAvB,4BAAA,EAAA,eAAuB;IAC/C,IAAM,QAAQ,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAE7E,wDAAwD;IACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC;AACpB,CAAC;AATD,kCASC;AAED;IACI,MAAM,CAAC,UAAU,CAAC;AACtB,CAAC;AAFD,sCAEC;AAED,4BAAmC,IAAU,EAAE,MAAc;IACzD,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AACrE,CAAC;AAFD,gDAEC;AAED,wBAA+B,IAAU;IACrC,uGAAuG;IACvG,+FAA+F;IAC/F,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAC1E,CAAC;AAJD,wCAIC;AAED,2BAAkC,IAAU;IACxC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AACzE,CAAC;AAFD,8CAEC;AAED,8BAAqC,IAAU,EAAE,WAAuB;IAAvB,4BAAA,EAAA,eAAuB;IACpE,wDAAwD;IACxD,IAAM,YAAY,GAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAC3G,MAAM,CAAC,YAAY,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,GAAG,YAAY,CAAC;AAC9D,CAAC;AAJD,oDAIC;AAED,+BAAsC,IAAU,EAAE,WAAuB;IAAvB,4BAAA,EAAA,eAAuB;IACrE,IAAM,aAAa,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC;IAClE,MAAM,CAAC,aAAa,GAAG,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG,aAAa,CAAC;AACjE,CAAC;AAHD,sDAGC","sourcesContent":["const monthNames = [\n    'January', 'February', 'March',\n    'April', 'May', 'June',\n    'July', 'August', 'September',\n    'October', 'November', 'December'\n];\n\nexport function getDayNames(startingDay: number = 0): string[] {\n    const dayNames: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    // Days start from Sunday (Sunday = 0, Monday = 1, etc.)\n    for (let i = startingDay; i > 0; i--) {\n        dayNames.push(dayNames.shift()!);\n    }\n\n    return dayNames;\n}\n\nexport function getMonthNames(): string[] {\n    return monthNames;\n}\n\nexport function getMonthFromOffset(date: Date, offset: number): Date {\n    return new Date(date.getFullYear(), date.getMonth() + offset, 1);\n}\n\nexport function getDaysInMonth(date: Date): number {\n    // Important: the '0' in the day category \"rolls back\" the daysArray to the start of the previous month\n    // so we add a month to the daysArray in order to get the number of days for the intended month\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n}\n\nexport function getLastDayOfMonth(date: Date): number {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay();\n}\n\nexport function getNumOfPreviousDays(date: Date, startingDay: number = 0): number {\n    // Days start from Sunday (Sunday = 0, Monday = 1, etc.)\n    const previousDays: number = (new Date(date.getFullYear(), date.getMonth(), 1).getDay() - startingDay) + 7;\n    return previousDays > 6 ? previousDays - 7 : previousDays;\n}\n\nexport function getNumOfFollowingDays(date: Date, startingDay: number = 0): number {\n    const followingDays = (6 - getLastDayOfMonth(date)) + startingDay;\n    return followingDays > 6 ? followingDays - 7 : followingDays;\n}\n"]}