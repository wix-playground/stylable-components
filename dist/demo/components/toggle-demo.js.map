{"version":3,"file":"toggle-demo.js","sourceRoot":"","sources":["../../../demo/components/toggle-demo.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,iCAAkD;AAOlD;IAAgC,8BAA0B;IAA1D;QAAA,qEA0DC;QAzDU,WAAK,GAAG;YACX,OAAO,EAAE,KAAK;SACjB,CAAC;;IAuDN,CAAC;IArDU,2BAAM,GAAb;QAAA,iBAoDC;QAnDG,IAAM,QAAQ,GAAG,UAAC,CAAuB,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,CAAC,CAAC,KAAK,EAAC,CAAC,EAAjC,CAAiC,CAAC;QAChF,MAAM,CAAC,CACH;YACA;gBACI;oBACI,kDAAuB,wBAAwB;;wBAE3C,oBAAC,YAAM,IACH,KAAK,EAAC,YAAY,EAClB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EACzB,QAAQ,EAAE,QAAQ,GACpB,CACD;oBACL;;wBAEI,oBAAC,qBAAe,IAAC,GAAG,EAAC,KAAK;4BACtB,oBAAC,YAAM,IACH,KAAK,EAAC,YAAY,EAClB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EACzB,QAAQ,EAAE,QAAQ,GACpB,CACY,CACjB;oBACL,kDAAuB,0BAA0B;;wBAE7C,oBAAC,YAAM,OAAE,CACR;oBACL;;wBAEI,oBAAC,YAAM,IAAC,KAAK,EAAE,IAAI,GAAG,CACrB;oBACL;;wBAEI,oBAAC,YAAM,IAAC,QAAQ,SAAE,CACjB;oBACL;;wBAEI,oBAAC,YAAM,IAAC,QAAQ,QAAC,KAAK,EAAE,IAAI,GAAG,CAC9B;oBACL;;wBAEI,oBAAC,YAAM,IAAC,KAAK,SAAE,CACd;oBACL;;wBAEI,oBAAC,YAAM,IAAC,KAAK,QAAC,KAAK,EAAE,IAAI,GAAG,CAC3B,CACJ,CACD,CACA,CACX,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CAAC,AA1DD,CAAgC,KAAK,CAAC,SAAS,GA0D9C;AA1DY,gCAAU","sourcesContent":["import * as React from 'react';\nimport {ContextProvider, Toggle} from '../../src';\nimport {ChangeEvent} from '../../src/types/events';\n\nexport interface State {\n    checked: boolean;\n}\n\nexport class ToggleDemo extends React.Component<{}, State> {\n    public state = {\n        checked: false\n    };\n\n    public render() {\n        const onChange = (e: ChangeEvent<boolean>) => this.setState({checked: e.value});\n        return (\n            <table>\n            <tbody>\n                <tr>\n                    <th data-automation-id=\"TOGGLE_DEMO_CONTROLLED\">\n                        Controlled\n                        <Toggle\n                            label=\"with icons\"\n                            value={this.state.checked}\n                            onChange={onChange}\n                        />\n                    </th>\n                    <th>\n                        Controlled RTL\n                        <ContextProvider dir=\"rtl\">\n                            <Toggle\n                                label=\"with icons\"\n                                value={this.state.checked}\n                                onChange={onChange}\n                            />\n                        </ContextProvider>\n                    </th>\n                    <th data-automation-id=\"TOGGLE_DEMO_UNCONTROLLED\">\n                        Off\n                        <Toggle/>\n                    </th>\n                    <th>\n                        On\n                        <Toggle value={true}/>\n                    </th>\n                    <th>\n                        Disabled and off\n                        <Toggle disabled/>\n                    </th>\n                    <th>\n                        Disabled and on\n                        <Toggle disabled value={true}/>\n                    </th>\n                    <th>\n                        Error and off\n                        <Toggle error/>\n                    </th>\n                    <th>\n                        Error and on\n                        <Toggle error value={true}/>\n                    </th>\n                </tr>\n            </tbody>\n            </table>\n        );\n    }\n}\n"]}