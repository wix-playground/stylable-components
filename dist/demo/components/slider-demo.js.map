{"version":3,"file":"slider-demo.js","sourceRoot":"","sources":["../../../demo/components/slider-demo.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport {ContextProvider, Slider} from '../../src';\nimport {ChangeEvent} from '../../src/types/events';\nimport style from './slider-demo.st.css';\n\nexport interface SliderDemoState {\n    value: number;\n    rawValue: string;\n}\n\n@stylable(style)\nexport class SliderDemo extends React.Component<{}, SliderDemoState> {\n    constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            value: 50,\n            rawValue: '50'\n        };\n    }\n\n    public render() {\n        const min = 0;\n        const max = 100;\n\n        return (\n            <table cellSpacing=\"24px\">\n                <thead>\n                    <tr>\n                        <th className=\"table-head-cell\">Default Slider</th>\n                        <th className=\"table-head-cell\">Disabled Slider</th>\n                        <th className=\"table-head-cell\">Slider with step</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                disabled={true}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                step={10}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                    </tr>\n                </tbody>\n                <thead>\n                    <tr>\n                        <th className=\"table-head-cell\">\n                            Slider with error state<br />\n                            <span style={{color: '#777', fontSize: '12px'}}>To be continued...</span>\n                        </th>\n                        <th className=\"table-head-cell\">Slider with label</th>\n                        <th className=\"table-head-cell\">Slider with tooltip</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                error={true}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                label=\"It's simple slider.\"\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td>\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                onChange={this.onSliderChange}\n                                onInput={this.onSliderInput}\n                                tooltip={<div className=\"tooltip\">{this.state.rawValue}</div>}\n                            />\n                        </td>\n                    </tr>\n                </tbody>\n                <thead>\n                    <tr>\n                        <th className=\"table-head-cell\">Slider axis=\"y\"</th>\n                        <th className=\"table-head-cell\">Slider axis=\"x-reverse\"</th>\n                        <th className=\"table-head-cell\">Slider axis=\"y-reverse\"</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                axis={'y'}\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                axis={'x-reverse'}\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                axis={'y-reverse'}\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                    </tr>\n                </tbody>\n                <thead>\n                    <tr>\n                        <th className=\"table-head-cell\">Slider with marks</th>\n                        <th className=\"table-head-cell\">Vertical Slider with marks</th>\n                        <th className=\"table-head-cell\">Reverse Slider with marks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                step={10}\n                                marks={true}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                axis={'y'}\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                step={10}\n                                marks={true}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                        <td className=\"vertical-demo\">\n                            <Slider\n                                axis={'x-reverse'}\n                                value={this.state.value}\n                                min={min}\n                                max={max}\n                                step={10}\n                                marks={true}\n                                onChange={this.onSliderChange}\n                            />\n                        </td>\n                    </tr>\n                </tbody>\n                <thead>\n                    <tr>\n                        <th className=\"table-head-cell\">Slider with RTL</th>\n                        <th className=\"table-head-cell\">Reverse Slider with RTL</th>\n                        <th className=\"table-head-cell\">Slider with RTL and marks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <ContextProvider\n                                dir=\"rtl\"\n                            >\n                                <Slider\n                                    value={this.state.value}\n                                    min={min}\n                                    max={max}\n                                    onChange={this.onSliderChange}\n                                />\n                            </ContextProvider>\n                        </td>\n                        <td>\n                            <ContextProvider\n                                dir=\"rtl\"\n                            >\n                                <Slider\n                                    value={this.state.value}\n                                    min={min}\n                                    max={max}\n                                    axis=\"x-reverse\"\n                                    onChange={this.onSliderChange}\n                                />\n                            </ContextProvider>\n                        </td>\n                        <td>\n                            <ContextProvider\n                                dir=\"rtl\"\n                            >\n                                <Slider\n                                    value={this.state.value}\n                                    min={min}\n                                    max={max}\n                                    step={10}\n                                    marks={true}\n                                    onChange={this.onSliderChange}\n                                />\n                            </ContextProvider>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n\n    private onSliderChange = ({value}: ChangeEvent<number>) => {\n        this.setState({\n            value,\n            rawValue: String(value)\n        });\n    }\n\n    private onSliderInput = ({value}: ChangeEvent<string>) => {\n        this.setState({\n            rawValue: value\n        });\n    }\n}\n"]}