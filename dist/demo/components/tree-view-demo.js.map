{"version":3,"file":"tree-view-demo.js","sourceRoot":"","sources":["../../../demo/components/tree-view-demo.tsx"],"names":[],"mappings":"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","sourcesContent":["import {observer} from 'mobx-react';\nimport * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport {TreeItemData , TreeItemProps, TreeView} from '../../src';\nimport style from './tree-view-demo.st.css';\n\nexport const treeData: TreeItemData[] = [\n    { label: 'Food Menu', children: [\n        { label: 'Salads', children: [\n            {label: 'Greek Salad'},\n            {label: 'Israeli Salad'},\n            {label: 'Caesar Salad'}\n        ]},\n        { label: 'Steaks', children: [\n            {label: 'Fillet Steak'},\n            {label: 'Sirloin Steak'}\n        ]},\n        { label: 'Desserts', children: [\n            {label: 'Pancakes'},\n            {label: 'Muffin'},\n            {label: 'Waffle'},\n            {label: 'Cupcake'}\n        ]}\n    ]}\n];\n\nfunction SelectedItem({selectedItem}: any) {\n    return (\n        <div style={{fontSize: '1.41em', textDecoration: 'underline'}}>\n            {selectedItem ?\n                (!selectedItem.children ?\n                    `You chose ${selectedItem.label}. Bon appetit!` :\n                    `You are looking at ${selectedItem.label}. Please choose a dish.`) :\n                'Please choose from the Menu!'}\n        </div>\n    );\n}\n\nexport interface TreeViewDemoState {\n    selectedItem: TreeItemData | undefined;\n    focusedItem: TreeItemData | undefined;\n}\n\nexport interface TreeViewDemoCustomState {\n    selectedItemCustom: TreeItemData | undefined;\n    focusedItemCustom: TreeItemData | undefined;\n}\n\nconst itemIdPrefix = 'TREE_ITEM';\n\nexport const CustomItem: React.SFC<TreeItemProps> =\n    stylable(style)(({item, itemRenderer, onItemClick, onIconClick, stateMap}) => {\n        const state = stateMap.getItemState(item);\n        const TreeNode = itemRenderer;\n        const itemLabel = item.label.replace(' ', '_');\n        const iconProps = {\n            ['data-automation-id']: `${itemIdPrefix}_${itemLabel}_ICON`,\n            onClick: onIconClick && onIconClick.bind(null, item),\n            className: 'custom-tree-item-icon'\n        };\n        return (\n            <div>\n                <div\n                    className=\"custom-tree-node\"\n                    style-state={{selected: state!.isSelected, focused: state!.isFocused}}\n                    onClick={onItemClick && onItemClick.bind(null, item)}\n                    data-automation-id={`${itemIdPrefix}_${itemLabel}`}\n                >\n                    {item.children &&\n                        <span {...iconProps}>{state!.isExpanded ? '[Close] ' : '[Open] '}</span>}\n                    <span\n                        data-automation-id={`${itemIdPrefix}_${itemLabel}_LABEL`}\n                        className=\"custom-tree-item-label\"\n                    >\n                        {item.label}<span className=\"node-tool-tip\"> ({Math.floor(Math.random() * 100)} kcal)</span>\n                    </span>\n                </div>\n                <div className=\"custom-nested-tree\">\n                    {state!.isExpanded && (item.children || []).map((child: TreeItemData, index: number) =>\n                        <TreeNode\n                            item={child}\n                            onItemClick={onItemClick}\n                            itemRenderer={itemRenderer}\n                            onIconClick={onIconClick}\n                            stateMap={stateMap}\n                            key={`${index}`}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    });\n\nconst CustomItemWrapper = observer(CustomItem);\n\n@stylable(style)\nexport class TreeViewDemo extends React.Component<{}, TreeViewDemoState> {\n\n    public state = {selectedItem: undefined, focusedItem: undefined, checkBoxMap: {}};\n\n    public render() {\n        return (\n            <div>\n                <h3>TreeView with ability to select a child</h3>\n                <section data-automation-id=\"TREE_VIEW_DEMO\">\n                    <SelectedItem selectedItem={this.state.selectedItem} />\n                    <br />\n                    <TreeView\n                        dataSource={treeData}\n                        onFocusItem={this.onFocusItem}\n                        focusedItem={this.state.focusedItem}\n                        onSelectItem={this.onSelectItem}\n                        selectedItem={this.state.selectedItem}\n                    />\n                </section>\n            </div>\n        );\n    }\n\n    private onSelectItem = (item: TreeItemData) => {\n        this.setState({\n            selectedItem: item,\n            focusedItem: item\n        });\n    }\n\n    private onFocusItem = (item: TreeItemData) => {\n        this.setState({\n            focusedItem: item\n        });\n    }\n\n}\n\n@stylable(style)\nexport class TreeViewDemoCustom extends React.Component<{}, TreeViewDemoCustomState> {\n\n    public state = {selectedItemCustom: undefined, focusedItemCustom: undefined};\n\n    public render() {\n        return (\n            <div>\n                <h3>TreeView with custom item renderer (try hovering the labels)</h3>\n                <section data-automation-id=\"TREE_VIEW_DEMO_CUSTOM\">\n                    <SelectedItem selectedItem={this.state.selectedItemCustom} />\n                    <br />\n                    <TreeView\n                        className=\"tree-view\"\n                        dataSource={treeData}\n                        itemRenderer={CustomItemWrapper}\n                        onFocusItem={this.onFocusItemCustom}\n                        focusedItem={this.state.focusedItemCustom}\n                        onSelectItem={this.onSelectItemCustom}\n                        selectedItem={this.state.selectedItemCustom}\n                    />\n                </section>\n            </div>\n        );\n    }\n\n    private onSelectItemCustom = (item: TreeItemData) => {\n        this.setState({\n            selectedItemCustom: item,\n            focusedItemCustom: item\n        });\n    }\n\n    private onFocusItemCustom = (item: TreeItemData) => {\n        this.setState({\n            focusedItemCustom: item\n        });\n    }\n\n}\n"]}