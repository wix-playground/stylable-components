{"version":3,"file":"checkbox-demo.js","sourceRoot":"","sources":["../../../demo/components/checkbox-demo.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {stylable} from 'wix-react-tools';\nimport style from './checkbox-demo.st.css';\n\nimport {CheckBox} from '../../src';\nimport {ChangeEvent} from '../../src/types/events';\n\nexport const demoCheckBoxText: string = 'Yes, I\\'m over 18 years old';\n\n@stylable(style)\nexport class CheckBoxDemo extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <div>\n                <div>\n                    <h3>Basic CheckBox</h3>\n                    <BasicDemo/>\n                </div>\n\n                <div>\n                    <h3>Disabled</h3>\n                    <DisabledDemo/>\n                </div>\n\n                <div>\n                    <h3>Indeterminate</h3>\n                    <IndeterminateDemo/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class BasicDemo extends React.Component<{}, {value: boolean}> {\n    public state = {\n        value: false\n    };\n\n    public render() {\n        return (\n            <div data-automation-id=\"BASIC_DEMO\">\n                <CheckBox\n                    data-automation-id=\"BASIC_DEMO_CHECKBOX\"\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                >\n                    <span data-automation-id=\"BASIC_LABEL\" className={style.label}>{demoCheckBoxText}</span>\n                </CheckBox> <br/>\n                <button disabled={!this.state.value} data-automation-id=\"BUTTON_SUBMIT\">\n                    Proceed\n                </button>\n            </div>\n        );\n    }\n    private handleChange = (e: ChangeEvent<boolean>) => { this.setState({value: e.value}); };\n}\n\nexport class DisabledDemo extends React.Component<{}, {value: boolean}> {\n\n    public state = {\n        value: false\n    };\n\n    public render() {\n        return (\n            <div>\n                <span data-automation-id=\"DISABLED_DEMO\">\n                    <CheckBox\n                        data-automation-id=\"DISABLED_DEMO_CHECKBOX\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        disabled\n                    >\n                        <span data-automation-id=\"DISABLED_LABEL\" className={style.label}>Unchecked</span>\n                    </CheckBox>\n                </span>\n                <span>\n                    <CheckBox\n                        value={true}\n                        disabled\n                    >\n                        <span className={style.label}>Checked</span>\n                    </CheckBox>\n                </span>\n                <span>\n                    <CheckBox value={true} disabled indeterminate>\n                        <span className={style.label}>Indeterminate</span>\n                    </CheckBox>\n                </span>\n            </div>\n        );\n    }\n\n    private handleChange = (e: ChangeEvent<boolean>) => { this.setState({value: e.value}); };\n}\n\nexport class IndeterminateDemo extends React.Component<{}, {value1: boolean, value2: boolean}> {\n\n    public state = {\n        value1: true,\n        value2: false\n    };\n\n    public render() {\n        return (\n            <ul data-automation-id=\"INDETERMINATE_DEMO\">\n                <CheckBox\n                    value={this.state.value1 && this.state.value2}\n                    onChange={this.onChangeParent}\n                    indeterminate={this.state.value1 !== this.state.value2}\n                    data-automation-id=\"INDETERMINATE_DEMO_TOP_LEVEL\"\n                >\n                    <span data-automation-id=\"DISABLED_LABEL\" className={style.label}>All Options</span>\n                </CheckBox>\n                <li style={{listStyle: 'none', marginLeft: '1em'}}>\n                    <CheckBox\n                        value={this.state.value1}\n                        onChange={this.onChangeChild1}\n                        data-automation-id=\"INDETERMINATE_DEMO_OPTION1\"\n                    >\n                        <span className={style.label}>Option1</span>\n                    </CheckBox>\n                </li>\n                <li  style={{listStyle: 'none', marginLeft: '1em'}}>\n                    <CheckBox\n                        value={this.state.value2}\n                        onChange={this.onChangeChild2}\n                        data-automation-id=\"INDETERMINATE_DEMO_OPTION2\"\n                    >\n                        <span className={style.label}>Option2</span>\n                    </CheckBox>\n                </li>\n            </ul>\n        );\n    }\n\n    private onChangeParent = (e: ChangeEvent<boolean>) => { this.setState({value1: e.value, value2: e.value}); };\n    private onChangeChild1 = (e: ChangeEvent<boolean>) => { this.setState({value1: e.value}); };\n    private onChangeChild2 = (e: ChangeEvent<boolean>) => { this.setState({value2: e.value}); };\n}\n"]}