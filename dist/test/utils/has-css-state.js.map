{"version":3,"file":"has-css-state.js","sourceRoot":"","sources":["../../../test/utils/has-css-state.ts"],"names":[],"mappings":";;AAGA,qBACI,IAAoB,EACpB,UAAuC,EACvC,QAAoC;IAGpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACR,MAAM,IAAI,KAAK,CAAC,wCAAuC,CAAC,CAAC;IAC7D,CAAC;IAED,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,WAAE,GAAC,CAAC,IAAG,IAAI,MAAE,CAAC;YAC9D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC,IAAI,CAAC,uCAAoC,CAAC,6BAAsB,CAAC,wBAAoB,CAAC,CAAC;oBAClG,CAAC;gBACL,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvB,MAAM,CAAC,IAAI,CAAC,2CAAwC,CAAC,oCAA6B,CAAC,QAAI,CAAC,CAAC;oBAC7F,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAChB,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;;AAEL,CAAC;AAlCD,kCAkCC","sourcesContent":["\nimport {Stylesheet} from 'stylable';\n\nexport function hasCssState(\n    elem: Element | null,\n    stylesheet: { $stylesheet: Stylesheet },\n    stateMap: { [key: string]: boolean }\n): void | never {\n\n    if (!elem) {\n        throw new Error(`hasCssState: Element does not exists\"`);\n    }\n\n    const errors = [];\n    for (const k in stateMap) {\n        if (stateMap.hasOwnProperty(k)) {\n            const mapping = stylesheet.$stylesheet.cssStates({[k]: true});\n            if (stateMap[k]) {\n                for (const m in mapping) {\n                    if (!elem.hasAttribute(m)) {\n                        errors.push(`expected element to have state \":${k}\" with mapping to \"${m}\" but got nothing.`);\n                    }\n                }\n            } else {\n                for (const m in mapping) {\n                    if (elem.hasAttribute(m)) {\n                        errors.push(`expected element to not have state \":${k}\" but found with mapping \"${m}\".`);\n                    }\n                }\n            }\n        }\n    }\n\n    if (errors.length) {\n        throw new Error('hasCssState:\\n' + errors.join('\\n'));\n    }\n\n}\n"]}