{"version":3,"file":"simulate-touch-event.js","sourceRoot":"","sources":["../../../test/utils/simulate-touch-event.ts"],"names":[],"mappings":";;AAAA,6CAA0C;AAE1C,4BACI,OAAY,EACZ,SAAiB,EACjB,OAIC;IAED,IAAM,QAAQ,GAAG;QACb,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,OAAO,EAAE,OAAO,CAAC,OAAO;KAC3B,CAAC;IAEF,IAAM,cAAc,GAAQ;QACxB,OAAO,EAAE,CAAC,QAAQ,CAAC;QACnB,aAAa,EAAE,CAAC,QAAQ,CAAC;QACzB,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1B,cAAc,EAAE,WAAI;KACvB,CAAC;IACF,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAChD,CAAC;AAtBD,gDAsBC","sourcesContent":["import {noop} from '../../src/utils/noop';\n\nexport function simulateTouchEvent(\n    element: any,\n    eventType: string,\n    options: {\n        clientX: number,\n        clientY: number,\n        shiftKey?: boolean\n    }\n): void {\n    const touchObj = {\n        target: element,\n        clientX: options.clientX,\n        clientY: options.clientY\n    };\n\n    const touchEventInit: any = {\n        touches: [touchObj],\n        targetTouches: [touchObj],\n        changedTouches: [touchObj],\n        preventDefault: noop\n    };\n    element.simulate(eventType, touchEventInit);\n}\n"]}