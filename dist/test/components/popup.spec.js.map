{"version":3,"file":"popup.spec.js","sourceRoot":"","sources":["../../../test/components/popup.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import React = require('react');\nimport ReactDOM = require('react-dom');\nimport {selectDom} from 'test-drive';\nimport {ClientRenderer, expect, waitFor} from 'test-drive-react';\nimport {PopupDemo} from '../../demo/components/popup-demo';\nimport {Popup, PopupPositionPoint} from '../../src/components/';\nimport {Point} from '../../src/types';\nimport {sleep} from '../utils';\n\nconst portalId = 'PORTAL';\nconst demoContainer = 'POPUP_DEMO_DIV';\n\ndescribe('<Popup />', () => {\n    const clientRenderer = new ClientRenderer();\n    const bodySelect = selectDom(document.body);\n    let anchor: HTMLElement;\n\n    before(() => {\n        anchor = document.body.appendChild(document.createElement('div'));\n        anchor.style.position = 'absolute';\n        anchor.style.top = '150px';\n        anchor.style.left = '150px';\n        anchor.style.width = '150px';\n        anchor.style.height = '150px';\n        anchor.style.border = '1px solid blue';\n    });\n    afterEach(() => {clientRenderer.cleanup(); });\n    after(() => {document.body.removeChild(anchor); });\n\n    describe('The popup user', () => {\n        it('clicks on the parent and the popup opens and closes after another click', async () => {\n            const {select, waitForDom} = clientRenderer.render(<PopupDemo />);\n\n            await waitForDom(() => {\n                expect(select(demoContainer)).to.be.present();\n                expect(select(demoContainer, portalId)).to.be.absent();\n            });\n            select<HTMLDivElement>(demoContainer)!.click();\n            await waitForDom(() => expect(bodySelect(portalId)).to.be.present());\n            select<HTMLDivElement>(demoContainer)!.click();\n            return waitForDom(() => expect(bodySelect(portalId)).to.be.absent());\n        });\n    });\n\n    it('displays the popup and renders its children if the open prop is given', () => {\n        clientRenderer.render(\n            <Popup anchor={anchor} open>\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>\n        );\n\n        return waitFor(() => {\n            expect(bodySelect(portalId)).to.be.present();\n            expect(bodySelect(portalId, 'SPAN')).to.be.present();\n        });\n    });\n\n    it('does not render the popup if there is no anchor', async () => {\n        clientRenderer.render(\n            <Popup anchor={null} open={true}>\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>\n        );\n        await sleep(100);\n        await waitFor(() => expect(bodySelect(portalId)).to.be.absent());\n    });\n\n    it('does not reder the popup if the open prop is false', async () => {\n        clientRenderer.render(\n            <Popup anchor={anchor} open={false}>\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>\n        );\n        await sleep(100);\n        await waitFor(() => expect(bodySelect(portalId)).to.be.absent());\n    });\n\n    it('renders the popup using a point as anchor', async () => {\n        const point: Point = {x: 100, y: 100};\n        clientRenderer.render(\n            <Popup anchor={point} open>\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>\n        );\n\n        await waitFor(() => expect(bodySelect(portalId)).to.be.present());\n    });\n\n    it('removes the component when unmounting', async () => {\n        clientRenderer.render(\n            <Popup\n                anchor={anchor}\n                open={true}\n            >\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>);\n\n        await waitFor(() => {expect(bodySelect(portalId)).to.be.present(); });\n        ReactDOM.unmountComponentAtNode(bodySelect(portalId)!.parentElement!);\n        return waitFor(() => {expect(bodySelect(portalId)).to.not.exist; });\n    });\n\n    it('syncs the popup width', () => {\n        clientRenderer.render(\n            <Popup\n                anchor={anchor}\n                syncWidth={true}\n                open={true}\n            >\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>);\n\n        return waitFor(() => {\n            expect(bodySelect(portalId)!.getBoundingClientRect().width)\n                .to.equal(anchor.getBoundingClientRect().width);\n        });\n    });\n\n    it('sets the default maxHeight', () => {\n        clientRenderer.render(\n            <Popup\n                anchor={anchor}\n                open={true}\n            >\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>);\n\n        return waitFor(() => {\n            expect(bodySelect<HTMLElement>(portalId)!.style.maxHeight).to.equal('500px');\n        });\n    });\n\n    it('sets and enforces the maxHeight', () => {\n        clientRenderer.render(\n            <Popup\n                anchor={anchor}\n                maxHeight={5}\n                open={true}\n            >\n                <span data-automation-id=\"SPAN\">Popup Body</span>\n            </Popup>);\n\n        return waitFor(() => {\n            expect(bodySelect<HTMLElement>(portalId)!.style.maxHeight).to.equal('5px');\n            expect(bodySelect<HTMLElement>(portalId)!.getBoundingClientRect().height).to.equal(5);\n        });\n    });\n\n    describe('Scrolling tests', () => {\n        const scroll = document.createElement('div');\n        scroll.style.height = '5000px';\n        scroll.style.width = '5000px';\n\n        before(() => {document.body.appendChild(scroll); });\n\n        after(() => {\n            document.body.removeChild(scroll);\n            document.body.scrollTop = 0;\n            document.body.scrollLeft = 0;\n        });\n\n        it('renders the popup in the right location when it is out of view', async () => {\n            let div: HTMLDivElement;\n            const {waitForDom} = clientRenderer.render(\n                <div>\n                    <div style={{height: '1000px'}}>Filler</div>\n                    <div ref={(elem: HTMLDivElement) => div = elem}>Anchor</div>\n                </div>\n            );\n\n            await waitForDom(() => {\n                expect(div).to.be.present();\n            });\n            document.body.scrollTop = 500;\n            document.body.scrollLeft = 500;\n            clientRenderer.render(\n                <Popup\n                    anchor={div!}\n                    open={true}\n                >\n                    <span data-automation-id=\"SPAN\">Popup Body</span>\n                </Popup>);\n\n            return waitForDom(() => {\n                expect([div, bodySelect(portalId)]).to.be.inVerticalSequence();\n            });\n        });\n    });\n\n    describe('Layout tests', () => {\n        const fixture = getFixture();\n\n        describe('Popup with anchor', () => {\n            for (const popupPos of fixture) {\n                for (const anchorPos of fixture) {\n                    it(`Popup position: V: ${popupPos.vertical} H: ${popupPos.horizontal};\n                 Anchor position: V: ${anchorPos.vertical} H: ${anchorPos.horizontal}`, () => {\n                        clientRenderer.render(\n                            <Popup anchor={anchor} anchorPosition={anchorPos} popupPosition={popupPos} open={true}>\n                                <div style={{background: 'green', color: 'white'}}>\n                                    <span data-automation-id=\"SPAN\">\n                                        Popup Body\n                                    </span>\n                                    <div>some more stuff</div>\n                                </div>\n                            </Popup>);\n\n                        return waitFor(() => {\n                            const popup = bodySelect<HTMLElement>(portalId)!;\n\n                            runTest(popup, anchor, popupPos, anchorPos);\n                        });\n                    });\n                }\n            }\n        });\n\n        describe('Popup with point', () => {\n            const point: Point = {x: 90, y: 100};\n            const verticalTests = getPointLayoutTests('vertical');\n            const horizontalTests = getPointLayoutTests('horizontal');\n\n            for (const popupPos of fixture) {\n                it(`Popup position: V: ${popupPos.vertical} H: ${popupPos.horizontal}`, async () => {\n                    clientRenderer.render(\n                        <Popup anchor={point} popupPosition={popupPos} open>\n                            <div style={{background: 'green', color: 'white'}}>\n                                <span data-automation-id=\"SPAN\">Popup Body</span>\n                            </div>\n                        </Popup>);\n\n                    await waitFor(() => {\n                        const popup = bodySelect<HTMLElement>(portalId)!;\n\n                        verticalTests[popupPos.vertical](popup, point);\n                        horizontalTests[popupPos.horizontal](popup, point);\n                    });\n                });\n            }\n        });\n    });\n});\n\nfunction getAnchorLayoutTests(axis: 'vertical' | 'horizontal') {\n    let start: 'left' | 'top' = 'top';\n    let end: 'bottom' | 'right' = 'bottom';\n    let length: 'height' | 'width' = 'height';\n\n    if (axis === 'horizontal') {\n        start = 'left';\n        end = 'right';\n        length = 'width';\n    }\n\n    // Level one: popup position, level two: anchor position\n    return {\n        [start]: {\n            [start]: (anchor: HTMLElement, popup: HTMLElement) =>\n                createExpect(popup.getBoundingClientRect()[start], anchor.getBoundingClientRect()[start]),\n            center: (anchor: HTMLElement, popup: HTMLElement) => {\n                const anchorRect = anchor.getBoundingClientRect();\n                createExpect(popup.getBoundingClientRect()[start], anchorRect[start] + (anchorRect[length] / 2)); },\n            [end]: (anchor: HTMLElement, popup: HTMLElement) =>\n                createExpect(popup.getBoundingClientRect()[start], anchor.getBoundingClientRect()[end])\n        },\n        center: {\n            [start]: (anchor: HTMLElement, popup: HTMLElement) => {\n                const popupRect = popup.getBoundingClientRect();\n                createExpect(popupRect[start], anchor.getBoundingClientRect()[start] - (popupRect[length] / 2)); },\n            center: (anchor: HTMLElement, popup: HTMLElement) => {\n                const popupRect = popup.getBoundingClientRect();\n                const anchorRect = anchor.getBoundingClientRect();\n                createExpect(popupRect[start], anchorRect[start] + (anchorRect[length] / 2) - (popupRect[length] / 2));\n            },\n            [end]: (anchor: HTMLElement, popup: HTMLElement) => {\n                const popupRect = popup.getBoundingClientRect();\n                createExpect(popupRect[end], anchor.getBoundingClientRect()[end] + (popupRect[length] / 2)); }\n        },\n        [end]: {\n            [start]: (anchor: HTMLElement, popup: HTMLElement) =>\n                createExpect(popup.getBoundingClientRect()[end], anchor.getBoundingClientRect()[start]),\n            center: (anchor: HTMLElement, popup: HTMLElement) => {\n                const anchorRect = anchor.getBoundingClientRect();\n                createExpect(popup.getBoundingClientRect()[end], anchorRect[start] + (anchorRect[length] / 2)); },\n            [end]: (anchor: HTMLElement, popup: HTMLElement) =>\n                createExpect(popup.getBoundingClientRect()[end], anchor.getBoundingClientRect()[end])\n        }\n    };\n}\n\nfunction getPointLayoutTests(axis: 'vertical' | 'horizontal') {\n    let start: 'left' | 'top' = 'top';\n    let end: 'bottom' | 'right' = 'bottom';\n    let length: 'height' | 'width' = 'height';\n    let pointAxis: 'x' | 'y' = 'y';\n\n    if (axis === 'horizontal') {\n        start = 'left';\n        end = 'right';\n        length = 'width';\n        pointAxis = 'x';\n    }\n\n    return {\n        [start]: (popup: HTMLElement, p: Point) => {\n            createExpect(popup.getBoundingClientRect()[start], p[pointAxis], 0.5);\n        },\n        center: (popup: HTMLElement, p: Point) => {\n            const popupRect = popup.getBoundingClientRect();\n            createExpect(popupRect[start], p[pointAxis] - (popupRect[length] / 2), 0.5);\n        },\n        [end]: (popup: HTMLElement, p: Point) => createExpect(popup.getBoundingClientRect()[end], p[pointAxis], 0.5)\n    };\n}\n\nfunction runTest(popup: HTMLElement, anchor: HTMLElement, popupPos: PopupPositionPoint, anchorPos: PopupPositionPoint) {\n    const topTests = getAnchorLayoutTests('vertical');\n    const leftTests = getAnchorLayoutTests('horizontal');\n\n    topTests[popupPos.vertical][anchorPos.vertical](anchor, popup);\n    leftTests[popupPos.horizontal][anchorPos.horizontal](anchor, popup);\n}\n\nfunction getFixture(): PopupPositionPoint[] {\n    return [{vertical: 'top', horizontal: 'left'},\n        {vertical: 'top', horizontal: 'center'},\n        {vertical: 'top', horizontal: 'right'},\n        {vertical: 'center', horizontal: 'left'},\n        {vertical: 'center', horizontal: 'center'},\n        {vertical: 'center', horizontal: 'right'},\n        {vertical: 'bottom', horizontal: 'left'},\n        {vertical: 'bottom', horizontal: 'center'},\n        {vertical: 'bottom', horizontal: 'right'}];\n}\n\nfunction createExpect(pValue: number, aValue: number, resulotion: number = 0.01) {\n    expect(pValue, `popup value: ${pValue} anchor value: ${aValue}`).to.be.closeTo(aValue, resulotion);\n}\n"]}