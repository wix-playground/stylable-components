{"version":3,"file":"stepper.spec.js","sourceRoot":"","sources":["../../../test/components/stepper.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {SinonSpy} from 'sinon';\nimport {ClientRenderer, expect, simulate, sinon} from 'test-drive-react';\nimport {Stepper} from '../../src/components/stepper';\nimport WindowStub from '../stubs/window.stub';\n\ndescribe('<Stepper />', () => {\n    const clientRenderer = new ClientRenderer();\n    let windowStub: WindowStub;\n    let onUp: SinonSpy;\n    let onDown: SinonSpy;\n\n    beforeEach(() => {\n        onUp = sinon.spy();\n        onDown = sinon.spy();\n        windowStub = new WindowStub();\n    });\n\n    afterEach(() => windowStub.sandbox.restore());\n    afterEach(() => clientRenderer.cleanup());\n\n    it('onUp and onDown should pass modifiers if any', async () => {\n        const {select, waitForDom} = clientRenderer.render(\n            <Stepper onUp={onUp} onDown={onDown} />\n        );\n\n        await waitForDom(() => {\n            const up = select('STEPPER_INCREMENT');\n            const down = select('STEPPER_DECREMENT');\n\n            simulate.click(up, {shiftKey: true});\n            simulate.click(down, {altKey: true, ctrlKey: true});\n\n            expect(onUp).to.have.been.calledWithMatch({shiftKey: true});\n            expect(onDown).to.have.been.calledWithMatch({altKey: true, ctrlKey: true});\n        });\n        });\n\n    describe('draggable', () => {\n\n        describe('drag up', () => {\n\n            it('should call onUp', async () => {\n                const dragStep = 20;\n                const dragStartPoint = {\n                    clientX: 100,\n                    clientY: 100\n                };\n                const {waitForDom, select} = clientRenderer.render(\n                    <Stepper\n                        data-automation-id=\"STEPPER\"\n                        onUp={onUp}\n                        onDown={onDown}\n                        dragStep={dragStep}\n                    />\n                );\n\n                await waitForDom(() => {\n                    simulate.mouseDown(select('STEPPER'), dragStartPoint);\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY - dragStep,\n                        shiftKey: true\n                    });\n\n                    expect(onUp).to.have.been.calledOnce;\n                    expect(onUp).to.have.been.calledWithMatch({shiftKey: true});\n                    expect(onDown).not.to.have.been.called;\n                });\n            });\n\n            it('should not call onUp when disableUp is true', async () => {\n                const dragStep = 20;\n                const dragStartPoint = {\n                    clientX: 100,\n                    clientY: 100\n                };\n                const {waitForDom, select} = clientRenderer.render(\n                    <Stepper\n                        data-automation-id=\"STEPPER\"\n                        onUp={onUp}\n                        onDown={onDown}\n                        dragStep={dragStep}\n                        disableUp\n                    />\n                );\n\n                await waitForDom(() => {\n                    simulate.mouseDown(select('STEPPER'), dragStartPoint);\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY - dragStep\n                    });\n\n                    expect(onUp).not.to.have.been.called;\n                    expect(onDown).not.to.have.been.called;\n                });\n            });\n\n        });\n\n        describe('drag down', () => {\n\n            it('should call onDown', async () => {\n                const dragStep = 20;\n                const dragStartPoint = {\n                    clientX: 100,\n                    clientY: 100\n                };\n                const {waitForDom, select} = clientRenderer.render(\n                    <Stepper\n                        data-automation-id=\"STEPPER\"\n                        onUp={onUp}\n                        onDown={onDown}\n                        dragStep={dragStep}\n                    />\n                );\n\n                await waitForDom(() => {\n                    simulate.mouseDown(select('STEPPER'), dragStartPoint);\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY + dragStep,\n                        altKey: true,\n                        ctrlKey: true\n                    });\n\n                    expect(onUp).not.to.have.been.called;\n                    expect(onDown).to.have.been.calledOnce;\n                    expect(onDown).to.have.been.calledWithMatch({altKey: true, ctrlKey: true});\n                });\n            });\n\n            it('should not call onDown when disableDown is true', async () => {\n                const dragStep = 20;\n                const dragStartPoint = {\n                    clientX: 100,\n                    clientY: 100\n                };\n                const {waitForDom, select} = clientRenderer.render(\n                    <Stepper\n                        data-automation-id=\"STEPPER\"\n                        onUp={onUp}\n                        onDown={onDown}\n                        dragStep={dragStep}\n                        disableDown\n                    />\n                );\n\n                await waitForDom(() => {\n                    simulate.mouseDown(select('STEPPER'), dragStartPoint);\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY + dragStep\n                    });\n\n                    expect(onUp).not.to.have.been.called;\n                    expect(onDown).not.to.have.been.called;\n                });\n            });\n        });\n\n        describe('drag stop', () => {\n\n            it('should stop calling onUp/onDown', async () => {\n                const dragStep = 20;\n                const dragStartPoint = {\n                    clientX: 100,\n                    clientY: 100\n                };\n                const {waitForDom, select} = clientRenderer.render(\n                    <Stepper\n                        data-automation-id=\"STEPPER\"\n                        onUp={onUp}\n                        onDown={onDown}\n                        dragStep={dragStep}\n                    />\n                );\n\n                await waitForDom(() => {\n                    simulate.mouseDown(select('STEPPER'), {clientX: 100, clientY: 100});\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY - dragStep\n                    });\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY + dragStep\n                    });\n                    windowStub.simulate('mouseup');\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY - dragStep\n                    });\n                    windowStub.simulate('mousemove', {\n                        clientX: dragStartPoint.clientX,\n                        clientY: dragStartPoint.clientY + dragStep\n                    });\n\n                    expect(onUp).to.have.been.calledOnce;\n                    expect(onDown).to.have.been.calledOnce;\n                });\n            });\n\n        });\n\n    });\n\n});\n"]}