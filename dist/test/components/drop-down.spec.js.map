{"version":3,"file":"drop-down.spec.js","sourceRoot":"","sources":["../../../test/components/drop-down.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport * as React from 'react';\nimport {ClientRenderer, DriverBase, expect, sinon, waitFor} from 'test-drive-react';\nimport {DropDownDemo} from '../../demo/components/drop-down.demo';\nimport {DropDown} from '../../src';\nimport {DropDownDriver} from '../../test-kit';\n\nclass DropDownDemoDriver extends DriverBase {\n    public static ComponentClass = DropDownDemo;\n\n    public dropdown = new DropDownDriver(() => this.select('DROP_DOWN_DEMO', 'DROP_DOWN'));\n\n    public text(): string | null {\n        return this.select('DROP_DOWN_DEMO').textContent;\n    }\n}\n\ndescribe('<DropDown />', () => {\n    const clientRenderer = new ClientRenderer();\n    afterEach(() => clientRenderer.cleanup());\n\n    const items = ['Muffins', 'Pancakes', 'Waffles'];\n\n    it('renders a dropdown, opens it with a click, selects an item', async () => {\n        const {driver: demo, waitForDom} = clientRenderer.render(\n            <DropDownDemo />\n        ).withDriver(DropDownDemoDriver);\n\n        const dropdown = demo.dropdown;\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n        dropdown.clickOnDropDown();\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n\n        dropdown.clickOnItem(0);\n\n        await waitForDom(() => {\n            expect(dropdown.list).to.be.absent();\n            expect(demo.text()).to.equal('Muffins');\n        });\n    });\n\n    it('renders to the screen', async () => {\n        const {driver: dropdown, waitForDom} = clientRenderer.render(<DropDown />).withDriver(DropDownDriver);\n\n        await waitForDom(() => {\n            expect(dropdown.root).to.be.present();\n            expect(dropdown.selection).to.equal('');\n        });\n    });\n\n    it('has correct selected item text', async () => {\n        const item = 'Test';\n        const {driver: dropdown, waitForDom} = clientRenderer.render(\n            <DropDown value={item}>{item}</DropDown>\n        ).withDriver(DropDownDriver);\n\n        await waitForDom(() => {\n            expect(dropdown.root).to.be.present();\n            expect(dropdown.selection).to.equal(item);\n        });\n    });\n\n    it('doesn\\'t open the dropdown if disabled', async () => {\n        const {driver: dropdown, waitForDom, container} = clientRenderer.render(\n            <DropDown open disabled />\n        ).withDriver(DropDownDriver);\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n        clientRenderer.render(<DropDown open />, container);\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n    });\n\n    it('opens the dropdown when focused and openOnFocus is true', async () => {\n        const {driver: dropdown, waitForDom} = clientRenderer.render(\n            <DropDown openOnFocus />\n        ).withDriver(DropDownDriver);\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n        dropdown.focus();\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n    });\n\n    it('toggles between dropdown visibility when the input is clicked', async () => {\n        const {driver: dropdown, waitForDom} = clientRenderer.render(<DropDown />).withDriver(DropDownDriver);\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n        dropdown.clickOnDropDown();\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n\n        dropdown.clickOnDropDown();\n\n        await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n    });\n\n    it('displays item list to choose from when open is true', async () => {\n        const {driver: dropdown, waitForDom} = clientRenderer.render(\n            <DropDown open dataSource={items} />\n        ).withDriver(DropDownDriver);\n\n        await waitForDom(() => {\n            expect(dropdown.list).to.be.present();\n            expect(dropdown.items).to.have.length(3);\n\n            items.forEach((elem, idx) => {\n                expect(dropdown.items![idx]).to.be.present();\n                expect(dropdown.items![idx]).to.have.text(elem);\n            });\n        });\n    });\n\n    it('invokes onClick handler when an item is clicked', async () => {\n        const onClick = sinon.spy();\n        const {driver: dropdown} = clientRenderer.render(\n            <DropDown open dataSource={items} onChange={onClick}/>\n        ).withDriver(DropDownDriver);\n\n        dropdown.clickOnItem(0);\n\n        await waitFor(() => expect(onClick).to.have.been.calledWithMatch({value: items[0]}));\n    });\n\n    describe('Keyboard Navigation', () => {\n        it('toggles visibility of selection list when SPACE is clicked', async () => {\n            const {driver: dropdown, waitForDom} = clientRenderer.render(<DropDown />).withDriver(DropDownDriver);\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n            dropdown.focus();\n            dropdown.keyDown(keycode('space'));\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n\n            dropdown.keyDown(keycode('space'));\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n        });\n\n        it('closes selection list when ESC is clicked', async () => {\n            const {driver: dropdown, waitForDom} = clientRenderer.render(<DropDown />).withDriver(DropDownDriver);\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n            dropdown.clickOnDropDown();\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n\n            dropdown.keyDown(keycode('esc'));\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n        });\n\n        it('opens selection list when DOWN is clicked and it is closed', async () => {\n            const {driver: dropdown, waitForDom} = clientRenderer.render(<DropDown />).withDriver(DropDownDriver);\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be closed').to.equal(false));\n\n            dropdown.focus();\n            dropdown.keyDown(keycode('down'));\n\n            await waitForDom(() => expect(dropdown.isOpen(), 'expected list to be open').to.equal(true));\n        });\n    });\n});\n"]}