{"version":3,"file":"global-event.spec.js","sourceRoot":"","sources":["../../../test/components/global-event.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {ClientRenderer, expect, sinon} from 'test-drive-react';\nimport {GlobalEvent, Props as GlobalEventProps} from '../../src/components/global-event';\nimport WindowStub from '../stubs/window.stub';\n\ndescribe('<GlobalEvent />', () => {\n    const clientRenderer = new ClientRenderer();\n    let windowStub: WindowStub;\n\n    beforeEach(() => windowStub = new WindowStub());\n\n    afterEach(() => windowStub.sandbox.restore());\n    afterEach(() => clientRenderer.cleanup());\n\n    describe('mount', () => {\n        it('should add an event listener on window object when mounted', () => {\n            const handler = () => {};\n\n            clientRenderer.render(\n                <GlobalEvent click={handler} />\n            );\n\n            expect(windowStub.addEventListener).to.have.been.calledOnce;\n        });\n    });\n\n    describe('unmount', () => {\n        it('should remove an event listener on window object when unmounted', () => {\n            const handler = () => {};\n\n            clientRenderer.render(\n                <GlobalEvent click={handler} />\n            );\n\n            clientRenderer.cleanup();\n\n            expect(windowStub.removeEventListener).to.have.been.calledOnce;\n        });\n    });\n\n    describe('changing a listener', () => {\n        class Fixture extends React.Component<\n            {listener: GlobalEventProps['click']},\n            {listener: GlobalEventProps['click']}\n        > {\n            constructor({listener}: {listener: EventListener}) {\n                super();\n                this.state = {listener};\n            }\n            public render() {\n                const {listener} = this.state;\n                return <GlobalEvent click={listener} />;\n            }\n        }\n\n        it('should not call a handler after it was unset', () => {\n            const originalListener = sinon.spy();\n\n            const fixture = clientRenderer.render(\n                <Fixture listener={originalListener} />\n            ).result as Fixture;\n            fixture.setState({listener: undefined});\n\n            windowStub.simulate('click');\n\n            expect(originalListener).not.to.have.been.called;\n        });\n\n        it('should call new handler but not the old one', () => {\n            const originalListener = sinon.spy();\n            const newListener = sinon.spy();\n\n            const fixture = clientRenderer.render(\n                <Fixture listener={originalListener} />\n            ).result as Fixture;\n            fixture.setState({listener: newListener});\n\n            windowStub.simulate('click');\n\n            expect(originalListener).not.to.have.been.called;\n            expect(newListener).to.have.been.calledOnce;\n        });\n\n    });\n\n    describe('listening to multiple events', () => {\n        it('should call all appropriate handlers', () => {\n            const onMouseDown = sinon.spy();\n            const onMouseMove = sinon.spy();\n            const onMouseUp = sinon.spy();\n\n            clientRenderer.render(\n                <GlobalEvent\n                    mousedown={onMouseDown}\n                    mousemove={onMouseMove}\n                    mouseup={onMouseUp}\n                />\n            );\n\n            windowStub.simulate('mousedown');\n            windowStub.simulate('mousemove');\n            windowStub.simulate('mouseup');\n\n            expect(onMouseDown).to.have.been.calledBefore(onMouseMove);\n            expect(onMouseMove).to.have.been.calledBefore(onMouseUp);\n        });\n    });\n\n});\n"]}