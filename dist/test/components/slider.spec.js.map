{"version":3,"file":"slider.spec.js","sourceRoot":"","sources":["../../../test/components/slider.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport * as React from 'react';\nimport {ClientRenderer, expect, simulate, sinon, waitFor} from 'test-drive-react';\nimport {ContextProvider} from '../../src';\nimport {AXISES, AxisOptions, Slider, SliderProps} from '../../src/components/slider';\nimport {ChangeEvent} from '../../src/types/events';\nimport WindowStub from '../stubs/window.stub';\nimport {simulateMouseEvent, simulateTouchEvent, skipItIfTouch} from '../utils';\n\nlet environment: WindowStub;\n\ninterface EventCoordinates {\n    clientX: number;\n    clientY: number;\n}\n\nfunction getAxis(\n    options?: Partial<{axis: AxisOptions, RTL: boolean}>,\n    context?: any\n) {\n    let axis;\n    if (!options) {\n        return;\n    }\n    axis = options.axis;\n    if (context && context.dir === 'rtl') {\n        axis = axis === AXISES.x ?\n            AXISES.xReverse :\n            axis === AXISES.xReverse ?\n                AXISES.x :\n                axis || AXISES.xReverse;\n    }\n\n    return axis;\n}\n\nfunction getEventCoordinates(bounds: any, direction: string | undefined, value: number = 0.702): EventCoordinates {\n    switch (direction) {\n        case AXISES.x:\n            return {\n                clientX: Math.round(bounds.left + bounds.width * value),\n                clientY: bounds.top + bounds.height / 3\n            };\n        case AXISES.y:\n            return {\n                clientX: bounds.left + bounds.width / 3,\n                clientY: Math.round(bounds.bottom - bounds.height * value)\n            };\n        case AXISES.xReverse:\n            return {\n                clientX: Math.round(bounds.left + bounds.width * (1 - value)),\n                clientY: bounds.top + bounds.height / 3\n            };\n        case AXISES.yReverse:\n            return {\n                clientX: bounds.left + bounds.width / 3,\n                clientY: Math.round(bounds.bottom - bounds.height * (1 - value))\n            };\n        default:\n            return {\n                clientX: Math.round(bounds.left + bounds.width * value),\n                clientY: bounds.top + bounds.height / 3\n            };\n    }\n}\n\nfunction getRenderedSlider(\n    clientRenderer: ClientRenderer,\n    props?: Partial<SliderProps>,\n    context?: any\n) {\n    const slider = context ?\n        (\n            <ContextProvider {...context}>\n                <Slider\n                    {...props}\n                />\n            </ContextProvider>\n        ) :\n        (\n            <Slider\n                {...props}\n            />\n        );\n    return clientRenderer.render(slider);\n}\n\nfunction withValueMinMax(\n    clientRenderer: ClientRenderer,\n    positionProp: string,\n    sizeProp: string,\n    orientation: 'vertical' | 'horizontal',\n    options?: Partial<SliderProps>,\n    context?: any\n) {\n    describe('with value, min and max', () => {\n        const value = 5;\n        const min = -10;\n        const max = 10;\n\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n\n        beforeEach(() => {\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    ...options\n                },\n                context\n            );\n\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('renders handle on the right place', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.style[positionProp as any]).to.equal('75%');\n            });\n        });\n\n        it('renders progress bar with the right width', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-PROGRESS');\n\n                expect(element).to.be.present();\n                expect(element!.style[sizeProp as any]).to.equal('75%');\n            });\n        });\n\n        it('renders invisible native input with right value', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-NATIVE-INPUT');\n\n                expect(element).to.has.value(String(value));\n            });\n        });\n\n        it('renders with proper aria-orientation', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.getAttribute('aria-orientation')).to.equal(orientation);\n            });\n        });\n    });\n}\n\nfunction whenDragThingsAround(\n    clientRenderer: ClientRenderer,\n    positionProp: string,\n    sizeProp: string,\n    options?: Partial<SliderProps>,\n    context?: any\n) {\n    describe('when drag things around', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n        let eventMock: EventCoordinates;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    onChange,\n                    onInput,\n                    ...options\n                },\n                context\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n\n            const bounds = select('SLIDER')!.getBoundingClientRect();\n            eventMock = getEventCoordinates(bounds, getAxis(options, context));\n        });\n\n        it('should change value', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n\n                expect(handle!.style[positionProp as any]).to.equal('70%');\n                expect(progress!.style[sizeProp as any]).to.equal('70%');\n            });\n        });\n\n        it('should call onChange', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onChange).to.be.calledWithMatch({value: 7});\n            });\n        });\n\n        it('should call onInput', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mousemove',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onInput).to.be.calledWithMatch({value: '7'});\n                expect(onChange).to.be.calledWithMatch({value: 7});\n            });\n        });\n    });\n\n    describe('when drag things around using touch', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n        let eventMock: EventCoordinates;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    onChange,\n                    onInput,\n                    ...options\n                },\n                context\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n\n            const bounds = select('SLIDER')!.getBoundingClientRect();\n            eventMock = getEventCoordinates(bounds, getAxis(options, context));\n        });\n\n        skipItIfTouch('should change value', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n\n                expect(handle!.style[positionProp as any]).to.equal('70%');\n                expect(progress!.style[sizeProp as any]).to.equal('70%');\n            });\n        });\n\n        skipItIfTouch('should call onChange', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n\n                simulateTouchEvent(\n                    environment,\n                    'touchend',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onChange).to.be.calledWithMatch({value: 7});\n            });\n        });\n\n        skipItIfTouch('should call onInput', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n                simulateTouchEvent(\n                    environment,\n                    'touchmove',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                simulateTouchEvent(\n                    environment,\n                    'touchend',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onInput).to.be.calledWithMatch({value: '7'});\n                expect(onChange).to.be.calledWithMatch({value: 7});\n            });\n        });\n    });\n}\n\nfunction whenDragThingsAroundWithStep(\n    clientRenderer: ClientRenderer,\n    positionProp: string,\n    sizeProp: string,\n    options?: Partial<SliderProps>,\n    context?: any\n) {\n    describe('when drag things around with step', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n        const step = 2;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n        let eventMock: EventCoordinates;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    step,\n                    onChange,\n                    onInput,\n                    ...options\n                },\n                context\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n\n            const bounds = select('SLIDER')!.getBoundingClientRect();\n            eventMock = getEventCoordinates(bounds, getAxis(options, context));\n        });\n\n        it('renders handle on the right place', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.style[positionProp as any]).to.equal('50%');\n            });\n        });\n\n        it('renders progress bar with the right width', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-PROGRESS');\n\n                expect(element).to.be.present();\n                expect(element!.style[sizeProp as any]).to.equal('50%');\n            });\n        });\n\n        it('renders invisible native input with right value', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-NATIVE-INPUT');\n\n                expect(element).to.has.value(String(value));\n            });\n        });\n\n        it('should change value according to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n\n                expect(handle!.style[positionProp as any]).to.equal('80%');\n                expect(progress!.style[sizeProp as any]).to.equal('80%');\n            });\n        });\n\n        it('should call onChange with value normalized to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onChange).to.be.calledWithMatch({value: 8});\n            });\n        });\n\n        it('should call onInput with value normalized to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: eventMock.clientX,\n                    clientY: eventMock.clientY\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mousemove',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onInput).to.be.calledWithMatch({value: '8'});\n                expect(onChange).to.be.calledWithMatch({value: 8});\n            });\n        });\n    });\n\n    describe('when drag things around with step using touch', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n        const step = 2;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n        let eventMock: EventCoordinates;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    step,\n                    onChange,\n                    onInput,\n                    ...options\n                },\n                context\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n\n            const bounds = select('SLIDER')!.getBoundingClientRect();\n            eventMock = getEventCoordinates(bounds, getAxis(options, context));\n        });\n\n        skipItIfTouch('should change value', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n\n                expect(handle!.style[positionProp as any]).to.equal('80%');\n                expect(progress!.style[sizeProp as any]).to.equal('80%');\n            });\n        });\n\n        skipItIfTouch('should call onChange', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n\n                simulateTouchEvent(\n                    environment,\n                    'touchend',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onChange).to.be.calledWithMatch({value: 8});\n            });\n        });\n\n        skipItIfTouch('should call onInput', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n\n                simulate.touchStart(element, {\n                    currentTarget: element!,\n                    touches: {\n                        0: {\n                            clientX: eventMock.clientX,\n                            clientY: eventMock.clientY\n                        }\n                    } as any as TouchList\n                });\n                simulateTouchEvent(\n                    environment,\n                    'touchmove',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                simulateTouchEvent(\n                    environment,\n                    'touchend',\n                    {\n                        clientX: eventMock.clientX,\n                        clientY: eventMock.clientY\n                    }\n                );\n\n                expect(onInput).to.be.calledWithMatch({value: '8'});\n                expect(onChange).to.be.calledWithMatch({value: 8});\n            });\n        });\n    });\n}\n\nfunction keyboard(\n    clientRenderer: ClientRenderer,\n    options?: Partial<SliderProps>,\n    context?: any\n) {\n    const step = Number(options && options.step || 1);\n    describe(step === 1 ? 'keyboard control' : 'keyboard control with step', () => {\n        const value = 50;\n        const min = 0;\n        const max = 100;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n        let deviation: number = step;\n        let home: number = 0;\n        let end: number = 100;\n\n        switch (getAxis(options, context)) {\n            case AXISES.xReverse:\n            case AXISES.yReverse:\n                deviation = -1 * step;\n                home = 100;\n                end = 0;\n        }\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            const rendered = getRenderedSlider(\n                clientRenderer,\n                {\n                    value,\n                    min,\n                    max,\n                    onChange,\n                    onInput,\n                    ...options\n                },\n                context\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('on pressing right key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes.right\n            });\n\n            return waitFor(() => {\n                expect(onChange).to.be.calledWithMatch({value: value + deviation});\n            });\n        });\n\n        it('on pressing up key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes.up\n            });\n\n            return waitFor(() => {\n                expect(onChange).to.be.calledWithMatch({value: value + deviation});\n            });\n        });\n\n        it('on pressing page up key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes['page up']\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value + Math.abs(deviation * 10)});\n            });\n        });\n\n        it('on pressing up key with ctrl', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                ctrlKey: true,\n                keyCode: keycode.codes.up\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value + (deviation * 10)});\n            });\n        });\n\n        it('on pressing left key with ctrl', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                ctrlKey: true,\n                keyCode: keycode.codes.left\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: home});\n            });\n        });\n\n        it('on pressing up key with shift', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                shiftKey: true,\n                keyCode: keycode.codes.up\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value + (deviation * 10)});\n            });\n        });\n\n        it('on pressing left key with shift', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                shiftKey: true,\n                keyCode: keycode.codes.left\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: home});\n            });\n        });\n\n        it('on pressing left key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes.left\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value - deviation});\n            });\n        });\n\n        it('on pressing down key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes.down\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value - deviation});\n            });\n        });\n\n        it('on pressing page down key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes['page down']\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value - Math.abs(deviation * 10)});\n            });\n        });\n\n        it('on pressing down key with ctrl', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                ctrlKey: true,\n                keyCode: keycode.codes.down\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value - (deviation * 10)});\n            });\n        });\n\n        it('on pressing right key with ctrl', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                ctrlKey: true,\n                keyCode: keycode.codes.right\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: end});\n            });\n        });\n\n        it('on pressing down key with shift', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                shiftKey: true,\n                keyCode: keycode.codes.down\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: value - (deviation * 10)});\n            });\n        });\n\n        it('on pressing right key with shift', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                shiftKey: true,\n                keyCode: keycode.codes.right\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: end});\n            });\n        });\n\n        it('on pressing home key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                keyCode: keycode.codes.home\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: home});\n            });\n        });\n\n        it('on pressing end key', async () => {\n            simulate.keyDown(select('SLIDER-HANDLE'), {\n                shiftKey: true,\n                keyCode: keycode.codes.end\n            });\n\n            return waitFor(() => {\n                expect(onChange).have.been.calledWithMatch({value: end});\n            });\n        });\n    });\n}\n\ndescribe('<Slider />', () => {\n    const clientRenderer = new ClientRenderer();\n\n    beforeEach(() => {\n        environment = new WindowStub();\n    });\n\n    afterEach(() => {\n        environment.sandbox.restore();\n    });\n    afterEach(() => {\n        clientRenderer.cleanup();\n    });\n\n    describe('without any arguments', () => {\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n\n        beforeEach(() => {\n            const rendered = clientRenderer.render(<Slider />);\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('renders default value on the start of the track', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.style.left).to.equal('0%');\n            });\n        });\n\n        it('renders progress bar', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-PROGRESS');\n\n                expect(element).not.to.be.null;\n                expect(element!.style.width).to.equal('0%');\n            });\n        });\n\n        it('renders invisible native input with default value', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-NATIVE-INPUT');\n\n                expect(element).to.has.value('');\n            });\n        });\n    });\n\n    describe('with min and max and no value', () => {\n        const min = -10;\n        const max = 10;\n\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n\n        beforeEach(() => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    min={min}\n                    max={max}\n                />\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('renders handle on the right place', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.style.left).to.equal('0%');\n            });\n        });\n\n        it('renders progress bar with the right width', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-PROGRESS');\n\n                expect(element).not.to.be.present();\n                expect(element!.style.width).to.equal('0%');\n            });\n        });\n\n        it('renders invisible native input with right value', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-NATIVE-INPUT');\n\n                expect(element).to.has.value('');\n            });\n        });\n    });\n\n    withValueMinMax(clientRenderer, 'left', 'width', 'horizontal', {});\n\n    describe('when value is out of range', () => {\n        const valueLessThenMin = -1;\n        const valueGreaterThenMax = 11;\n        const min = 0;\n        const max = 10;\n\n        it('should normilize value that less than min to min', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={valueLessThenMin}\n                    min={min}\n                    max={max}\n                />\n            );\n\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                expect(handle!.style.left).to.equal('0%');\n                expect(progress!.style.width).to.equal('0%');\n            });\n        });\n\n        it('should normilize value that greater than max to max', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={valueGreaterThenMax}\n                    min={min}\n                    max={max}\n                />\n            );\n\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n\n                expect(handle!.style.left).to.equal('100%');\n                expect(progress!.style.width).to.equal('100%');\n            });\n        });\n    });\n\n    describe('when value is out of step', () => {\n        const valueOutOfStep = 3;\n        const min = 0;\n        const max = 10;\n        const step = 5;\n        let onChange: (data: ChangeEvent<number>) => void;\n        let onInput: (data: ChangeEvent<string>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={valueOutOfStep}\n                    min={min}\n                    max={max}\n                    step={step}\n                    onChange={onChange}\n                    onInput={onInput}\n                />\n            );\n\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('renders handle ignoring step', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-HANDLE');\n\n                expect(element!.style.left).to.equal('30%');\n            });\n        });\n\n        it('renders progress bar ignoring step', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-PROGRESS');\n\n                expect(element).to.be.present();\n                expect(element!.style.width).to.equal('30%');\n            });\n        });\n\n        it('renders invisible native input with passed value', async () => {\n            await waitForDom(() => {\n                const element = select('SLIDER-NATIVE-INPUT');\n\n                expect(element).to.has.value(String(valueOutOfStep));\n            });\n        });\n\n        it('should change value according to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n                const bounds = element!.getBoundingClientRect();\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientY: bounds.top + bounds.height / 3,\n                    clientX: Math.round(bounds.left + bounds.width * 0.4)\n                });\n\n                expect(handle!.style.left).to.equal('50%');\n                expect(progress!.style.width).to.equal('50%');\n            });\n        });\n\n        it('should call onChange with value normalized to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const bounds = element!.getBoundingClientRect();\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: Math.round(bounds.left + bounds.width * 0.5)\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {clientX: Math.round(bounds.left + bounds.width * 0.8)}\n                );\n\n                expect(onChange).to.be.calledWithMatch({value: 10});\n            });\n        });\n\n        it('should call onInput with value normalized to step', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const bounds = element!.getBoundingClientRect();\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientX: Math.round(bounds.left + bounds.width * 0.5)\n                });\n                simulateMouseEvent(\n                    environment,\n                    'mousemove',\n                    {clientX: Math.round(bounds.left + bounds.width * 0.6)}\n                );\n                simulateMouseEvent(\n                    environment,\n                    'mouseup',\n                    {clientX: Math.round(bounds.left + bounds.width * 0.6)}\n                );\n\n                expect(onInput).to.be.calledWithMatch({value: '5'});\n                expect(onChange).to.be.calledWithMatch({value: 5});\n            });\n        });\n    });\n\n    describe('when marks=true', () => {\n        it('renders proper number of marks', async () => {\n            const value = 5;\n            const min = 0;\n            const max = 10;\n            const step = 5;\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    step={step}\n                    marks={true}\n                />\n            );\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                expect(select(`SLIDER-MARKS-0`)).to.be.present();\n                expect(select(`SLIDER-MARKS-1`)).to.be.present();\n                expect(select(`SLIDER-MARKS-2`)).to.be.present();\n                expect(select(`SLIDER-MARKS-3`)).not.to.be.present();\n            });\n        });\n\n        it('renders marks on proper places', async () => {\n            const value = 5;\n            const min = 0;\n            const max = 10;\n            const step = 2;\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    step={step}\n                    marks={true}\n                />\n            );\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                for (let i = 0; i <= 5; i++) {\n                    const mark = select(`SLIDER-MARKS-${i}`);\n                    expect(mark!.style.left).to.equal(`${20 * i}%`);\n                }\n            });\n        });\n    });\n\n    whenDragThingsAround(clientRenderer, 'left', 'width');\n\n    whenDragThingsAroundWithStep(clientRenderer, 'left', 'width');\n\n    keyboard(clientRenderer);\n\n    keyboard(clientRenderer, {step: 2});\n\n    describe('when disabled', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n\n        let onChange: (data: ChangeEvent<number>) => void;\n        let select: (automationId: string) => HTMLElement | null;\n        let waitForDom: (expectation: () => void) => Promise<void>;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    onChange={onChange}\n                    disabled={true}\n                />\n            );\n            select = rendered.select;\n            waitForDom = rendered.waitForDom;\n        });\n\n        it('should not change value', async () => {\n            await waitFor(() => {\n                const element = select('SLIDER');\n                const handle = select('SLIDER-HANDLE');\n                const progress = select('SLIDER-PROGRESS');\n                const bounds = element!.getBoundingClientRect();\n\n                simulate.mouseDown(element, {\n                    currentTarget: element!,\n                    clientY: bounds.top + bounds.height / 3,\n                    clientX: bounds.left + bounds.width / 4\n                });\n\n                expect(handle!.style.left).not.to.equal('25%');\n                expect(progress!.style.width).not.to.equal('25%');\n            });\n        });\n    });\n\n    describe('when label provided', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n        const label = 'Simple Slider';\n\n        it('slider should has title and aria-label equal to passed label value', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    label={label}\n                />\n            );\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const slider = select('SLIDER');\n                const sliderHandle = select('SLIDER-HANDLE');\n\n                expect(slider!.title).equal(label);\n                expect(sliderHandle!.getAttribute('aria-label')).equal(label);\n            });\n        });\n    });\n\n    describe('when name provided', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n        const name = 'Simple Slider';\n\n        it('native input should has name equal to passed name value', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    name={name}\n                />\n            );\n            const select: (automationId: string) => HTMLInputElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const sliderInput = select('SLIDER-NATIVE-INPUT');\n\n                expect(sliderInput!.name).equal(name);\n            });\n        });\n    });\n\n    describe('when it is required', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n\n        it('native input should has required attribute equal to true', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    required={true}\n                />\n            );\n            const select: (automationId: string) => HTMLInputElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const sliderInput = select('SLIDER-NATIVE-INPUT');\n\n                expect(sliderInput!.required).to.be.true;\n            });\n        });\n    });\n\n    describe('tooltip', () => {\n        const value = 5;\n        const min = 0;\n        const max = 10;\n        const label = 'Simple Slider Tooltip';\n\n        it('should be presented', async () => {\n            const rendered = clientRenderer.render(\n                <Slider\n                    value={value}\n                    min={min}\n                    max={max}\n                    label={label}\n                    tooltip={<div data-slot=\"tooltip\" data-automation-id=\"TOOLTIP-CUSTOM-CONTENT\">{label}</div>}\n                />\n            );\n            const select: (automationId: string) => HTMLElement | null = rendered.select;\n            const waitForDom: (expectation: () => void) => Promise<void> = rendered.waitForDom;\n\n            await waitForDom(() => {\n                const tooltip = select('SLIDER-TOOLTIP');\n                const tooltipContent = select('TOOLTIP-CUSTOM-CONTENT');\n\n                expect(tooltip).to.be.present();\n                expect(tooltipContent).to.be.present();\n                expect(tooltipContent!.innerText).to.equal(label);\n            });\n        });\n    });\n\n    describe('vertical Slider', () => {\n        withValueMinMax(\n            clientRenderer,\n            'bottom',\n            'height',\n            'vertical',\n            {\n                axis: AXISES.y\n            }\n        );\n\n        whenDragThingsAround(\n            clientRenderer,\n            'bottom',\n            'height',\n            {\n                axis: AXISES.y\n            }\n        );\n\n        whenDragThingsAroundWithStep(\n            clientRenderer,\n            'bottom',\n            'height',\n            {\n                axis: AXISES.y\n            }\n        );\n\n        keyboard(clientRenderer, {axis: AXISES.y});\n\n        keyboard(clientRenderer, {axis: AXISES.y, step: 2});\n    });\n\n    describe('reverse Slider', () => {\n        withValueMinMax(\n            clientRenderer,\n            'right',\n            'width',\n            'horizontal',\n            {\n                axis: AXISES.xReverse\n            }\n        );\n\n        whenDragThingsAround(\n            clientRenderer,\n            'right',\n            'width',\n            {\n                axis: AXISES.xReverse\n            }\n        );\n\n        whenDragThingsAroundWithStep(\n            clientRenderer,\n            'right',\n            'width',\n            {\n                axis: AXISES.xReverse\n            }\n        );\n\n        keyboard(clientRenderer, {axis: AXISES.xReverse});\n\n        keyboard(clientRenderer, {axis: AXISES.xReverse, step: 2});\n    });\n\n    describe('vertical reverse Slider', () => {\n        withValueMinMax(\n            clientRenderer,\n            'top',\n            'height',\n            'vertical',\n            {\n                axis: AXISES.yReverse\n            }\n        );\n\n        whenDragThingsAround(\n            clientRenderer,\n            'top',\n            'height',\n            {\n                axis: AXISES.yReverse\n            }\n        );\n\n        whenDragThingsAroundWithStep(\n            clientRenderer,\n            'top',\n            'height',\n            {\n                axis: AXISES.yReverse\n            }\n        );\n\n        keyboard(clientRenderer, {axis: AXISES.yReverse});\n\n        keyboard(clientRenderer, {axis: AXISES.yReverse, step: 2});\n    });\n\n    describe('RTL Slider', () => {\n        withValueMinMax(\n            clientRenderer,\n            'right',\n            'width',\n            'horizontal',\n            {},\n            {dir: 'rtl'}\n        );\n\n        whenDragThingsAround(\n            clientRenderer,\n            'right',\n            'width',\n            {},\n            {dir: 'rtl'}\n        );\n\n        whenDragThingsAroundWithStep(\n            clientRenderer,\n            'right',\n            'width',\n            {},\n            {dir: 'rtl'}\n        );\n\n        keyboard(clientRenderer, {}, {dir: 'rtl'});\n\n        keyboard(clientRenderer, {step: 2}, {dir: 'rtl'});\n    });\n});\n"]}