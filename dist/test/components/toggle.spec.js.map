{"version":3,"file":"toggle.spec.js","sourceRoot":"","sources":["../../../test/components/toggle.spec.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAiHA;;AAjHA,6BAA+B;AAC/B,qDAAyE;AAEzE,iEAA6D;AAC7D,iCAAiC;AACjC,2EAA+D;AAC/D,kCAAqC;AAErC,QAAQ,CAAC,WAAW,EAAE;IAClB,IAAM,cAAc,GAAG,IAAI,iCAAc,EAAE,CAAC;IAC5C,SAAS,CAAC,cAAM,OAAA,cAAc,CAAC,OAAO,EAAE,EAAxB,CAAwB,CAAC,CAAC;IAE1C,QAAQ,CAAC,wBAAwB,EAAE;QAC/B,IAAI,QAAa,CAAC;QAClB,IAAI,QAAa,CAAC;QAClB,UAAU,CAAC;YACP,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAC,YAAM,IAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mBAAmB,EAAE;YACpB,yBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE;QACjC,IAAI,QAAa,CAAC;QAClB,IAAI,QAAa,CAAC;QAClB,UAAU,CAAC;YACP,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAC,YAAM,IAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,GAAG,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mBAAmB,EAAE;YACpB,yBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE;QAC7B,IAAI,QAAa,CAAC;QAClB,IAAI,QAAa,CAAC;QAClB,UAAU,CAAC;YACP,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAC,YAAM,IAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE;YAC1D,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,2BAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,2BAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvB,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACzC,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE;QACpC,IAAI,QAAa,CAAC;QAClB,IAAI,QAAa,CAAC;QAClB,UAAU,CAAC;YACP,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAC,YAAM,IAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,SAAE,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iCAAiC,EAAE;YAClC,yBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE;;;;wBACpC,2BAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC1C,qBAAM,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,EAAxB,CAAwB,CAAC,EAAA;;wBAAtD,SAAsD,CAAC;wBACvD,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;;;;aAC5C,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE;QAC7B,IAAI,QAAa,CAAC;QAClB,UAAU,CAAC;YACP,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAC,wBAAU,OAAE,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,oBAAoB,EAAE;YAC3B,IAAI,MAAW,CAAC;YAChB,UAAU,CAAC;gBACP,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,sBAAsB,EAAE;gBACvB,yBAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,qBAAqB,EAAE;gBACtB,mBAAW,CAAC,MAAM,EAAE,uBAAM,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,+BAA+B,EAAE;gBAChC,2BAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/C,mBAAW,CAAC,MAAM,EAAE,uBAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,iBAAiB,EAAE;YACxB,IAAI,MAAW,CAAC;YAChB,UAAU,CAAC;gBACP,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,sBAAsB,EAAE;gBACvB,yBAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,qBAAqB,EAAE;gBACtB,mBAAW,CAAC,MAAM,EAAE,uBAAM,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,iCAAiC,EAAE;gBAClC,2BAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/C,mBAAW,CAAC,MAAM,EAAE,uBAAM,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {ClientRenderer, expect, simulate, sinon} from 'test-drive-react';\n\nimport {ToggleDemo} from '../../demo/components/toggle-demo';\nimport {Toggle} from '../../src';\nimport styles from '../../src/components/toggle/toggle.st.css';\nimport {hasCssState} from '../utils';\n\ndescribe('<Toggle/>', () => {\n    const clientRenderer = new ClientRenderer();\n    afterEach(() => clientRenderer.cleanup());\n\n    describe('render without options', () => {\n        let onChange: any;\n        let renderer: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<Toggle onChange={onChange}/>);\n        });\n        it('should have input', () => {\n            expect(renderer.select('TOGGLE_INPUT')).to.not.null;\n        });\n    });\n\n    describe('render with value={true}', () => {\n        let onChange: any;\n        let renderer: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<Toggle onChange={onChange} value={true}/>);\n        });\n        it('should have input', () => {\n            expect(renderer.select('TOGGLE_INPUT')).to.not.null;\n        });\n    });\n\n    describe('render with onChange', () => {\n        let onChange: any;\n        let renderer: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<Toggle onChange={onChange}/>);\n        });\n\n        it('pressing space on focused input should trigger onChange', () => {\n            const input = renderer.select('TOGGLE_INPUT');\n            simulate.focus(input);\n            simulate.change(input);\n            expect(onChange).to.have.been.calledOnce;\n            expect(onChange).to.have.been.calledWithExactly({value: true});\n        });\n    });\n\n    describe('render with disabled={true}', () => {\n        let onChange: any;\n        let renderer: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<Toggle onChange={onChange} disabled/>);\n        });\n        it('should not have input underhood', () => {\n            expect(renderer.select('TOGGLE_INPUT')).to.be.null;\n        });\n\n        it('click should not trigger onChange', async () => {\n            simulate.click(renderer.select('TOGGLE'));\n            await new Promise(resolve => setTimeout(resolve, 500));\n            expect(onChange).to.not.have.been.called;\n        });\n    });\n\n    describe('render <ToggleDemo/>', () => {\n        let renderer: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<ToggleDemo/>);\n        });\n\n        describe('contorolled toggle', () => {\n            let toggle: any;\n            beforeEach(() => {\n                toggle = renderer.select('TOGGLE_DEMO_CONTROLLED', 'TOGGLE');\n            });\n            it('should render toggle', () => {\n                expect(toggle).to.not.null;\n            });\n            it('should be unchecked', () => {\n                hasCssState(toggle, styles, {checked: false});\n            });\n            it('should be checked after click', () => {\n                simulate.change(toggle.querySelector('input'));\n                hasCssState(toggle, styles, {checked: true});\n            });\n        });\n\n        describe('readonly toggle', () => {\n            let toggle: any;\n            beforeEach(() => {\n                toggle = renderer.select('TOGGLE_DEMO_UNCONTROLLED', 'TOGGLE');\n            });\n            it('should render toggle', () => {\n                expect(toggle).to.not.null;\n            });\n            it('should be unchecked', () => {\n                hasCssState(toggle, styles, {checked: false});\n            });\n            it('should be unchecked after click', () => {\n                simulate.change(toggle.querySelector('input'));\n                hasCssState(toggle, styles, {checked: false});\n            });\n        });\n    });\n\n});\n"]}