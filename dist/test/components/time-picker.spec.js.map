{"version":3,"file":"time-picker.spec.js","sourceRoot":"","sources":["../../../test/components/time-picker.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport * as React from 'react';\nimport {ClientRenderer, expect, simulate, sinon} from 'test-drive-react';\nimport {TimePickerDemo} from '../../demo/components/time-picker-demo';\nimport {TimePicker} from '../../src';\nimport styles from '../../src/components/time-picker/time-picker.st.css';\nimport {\n    Ampm, formatTimeChunk,\n    isTouchTimeInputSupported, isValidValue, to24, toAmpm\n} from '../../src/components/time-picker/utils';\nimport {hasCssState} from '../utils/has-css-state';\n\nconst describeNative = isTouchTimeInputSupported ? describe : describe.skip;\nconst describeDesktop = !isTouchTimeInputSupported ? describe : describe.skip;\nconst itDesktop = !isTouchTimeInputSupported ? it : it.skip;\nconst itNative = isTouchTimeInputSupported ? it : it.skip;\n\ndescribe('<TimePicker/>', () => {\n    const clientRenderer = new ClientRenderer();\n    afterEach(() => clientRenderer.cleanup());\n\n    describeDesktop('render with format=\"ampm\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let placeholder: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\"/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            placeholder = renderer.select('TIME_PICKER_PLACEHOLDER');\n        });\n        it('should not render with placeholder', () => {\n            expect(placeholder).to.be.null;\n        });\n        it('hh should not have value set', () => {\n            expect(hh).attr('value', '');\n        });\n        it('hh should have placeholder \"00\"', () => {\n            expect(hh).attr('placeholder', '00');\n        });\n        it('mm should not have value set', () => {\n            expect(mm).attr('value', '');\n        });\n        it('mm should have placeholder \"00\"', () => {\n            expect(mm).attr('placeholder', '00');\n        });\n    });\n    describe('render with format=\"24h\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let placeholder: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"24h\"/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            placeholder = renderer.select('TIME_PICKER_PLACEHOLDER');\n        });\n        it('should not render with placeholder', () => {\n            expect(placeholder).to.be.null;\n        });\n        it('hh should not have value set', () => {\n            expect(hh).attr('value', '');\n        });\n        it('hh should have placeholder \"00\"', () => {\n            expect(hh).attr('placeholder', '00');\n        });\n        it('mm should not have value set', () => {\n            expect(mm).attr('value', '');\n        });\n        it('mm should have placeholder \"00\"', () => {\n            expect(mm).attr('placeholder', '00');\n        });\n    });\n\n    describe('render with value=\"4:36\" format=\"ampm\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker value=\"4:36\" format=\"ampm\" />);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n        it('hh input should have \"04\" value', () => {\n            expect(hh).attr('value', '04');\n        });\n        it('mm input should have \"36\" value', () => {\n            expect(mm).attr('value', '36');\n        });\n        itDesktop('ampm should have \"AM\" value', () => {\n            expect(ampm).text('AM');\n        });\n    });\n\n    describe('render with placeholder=\"Enter Time\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let placeholder: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker placeholder=\"Enter Time\"/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            placeholder = renderer.select('TIME_PICKER_PLACEHOLDER');\n        });\n        it('placeholder should render with \"Enter Time\"', () => {\n            expect(placeholder).text('Enter Time');\n        });\n        it('hh should not have value set', () => {\n            expect(hh).attr('value', '');\n        });\n        it('mm should not have value set', () => {\n            expect(mm).attr('value', '');\n        });\n    });\n\n    describe('render with format=\"ampm\" value=\"13:55\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"13:55\"/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n\n        describeDesktop('desktop', () => {\n            it('hh input should have \"01\" value', () => {\n                expect(hh).attr('value', '01');\n            });\n            it('mm input should have \"55\" value', () => {\n                expect(mm).attr('value', '55');\n            });\n            it('ampm should have input \"PM\" value', () => {\n                expect(ampm).text('PM');\n            });\n        });\n        describeNative('mobile', () => {\n            it('hh input should have \"13\" value', () => {\n                expect(hh).attr('value', '13');\n            });\n            it('mm input should have \"55\" value', () => {\n                expect(mm).attr('value', '55');\n            });\n        });\n    });\n\n    describe('render with format=\"24h\" value=\"13:55\"', () => {\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"24h\" value=\"13:55\"/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n        });\n        it('hh input should have \"13\" value', () => {\n            expect(hh).attr('value', '13');\n        });\n        it('mm input should have \"55\" value', () => {\n            expect(mm).attr('value', '55');\n        });\n    });\n\n    describe('render with onChange={onChange} format=\"24h\" value=\"13:55\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let root: any;\n        let hh: any;\n        let mm: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"24h\" value=\"13:55\" onChange={onChange}/>);\n            root = renderer.select('TIME_PICKER');\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n        });\n\n        describe('entering \"3\" into hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                hh.value = '3';\n                simulate.change(hh);\n            });\n            it('should set focus state', () => {\n                hasCssState(root, styles, {focus: true});\n            });\n            it('hh input should have \"03\" value', () => {\n                expect(hh).attr('value', '03');\n            });\n            it('mm input should have \"55\" value', () => {\n                expect(mm).attr('value', '55');\n            });\n            it('should move selection to mm segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n            it('onChange should be callend with \"03:55\"', () => {\n                expect(onChange).to.be.calledWithExactly({value: '03:55'});\n            });\n        });\n\n        describe('entering \"2\" into hh segment', () => {\n            beforeEach(async () => {\n                simulate.focus(hh);\n                hh.value = '2';\n                simulate.change(hh);\n            });\n            it('hh input should have \"2\" value', () => {\n                expect(hh).attr('value', '2');\n            });\n            it('mm input should have \"55\" value', () => {\n                expect(mm).attr('value', '55');\n            });\n            it('should keep selection on hh segment', () => {\n                expect(document.activeElement).to.equal(hh);\n            });\n            it('onChange should not be callen', async () => {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                expect(onChange).to.not.be.called;\n            });\n        });\n\n        describe('entering \"7\" into mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                mm.value = '7';\n                simulate.change(mm);\n            });\n            it('should set focus state', () => {\n                hasCssState(root, styles, {focus: true});\n            });\n            it('hh input should have \"13\" value', () => {\n                expect(hh).attr('value', '13');\n            });\n            it('mm input should have \"07\" value', () => {\n                expect(mm).attr('value', '07');\n            });\n            it('should keep selection on mm segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n            it('onChange should be callen with \"13:07\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '13:07'});\n            });\n        });\n\n        describe('entering \"5\" into mm input', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                mm.value = '5';\n                simulate.change(mm);\n            });\n            it('hh input should have \"13\" value', () => {\n                expect(hh).attr('value', '13');\n            });\n            it('mm input should have \"5\" value', () => {\n                expect(mm).attr('value', '5');\n            });\n            it('should keep selection on mm segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n            it('onChange should not be callen', async () => {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                expect(onChange).to.not.called;\n            });\n        });\n\n        describe('backspace on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('backspace')});\n            });\n            it('hh input should have \"13\" value', () => {\n                expect(hh).attr('value', '13');\n            });\n            it('mm input should have \"00\" value', () => {\n                expect(mm).attr('value', '00');\n            });\n            it('should keep selection on mm segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n        });\n        describe('backspace x 2 on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('backspace')});\n                simulate.keyDown(mm, {keyCode: keycode('backspace')});\n            });\n            it('hh input should have \"13\" value', () => {\n                expect(hh).attr('value', '13');\n            });\n            it('mm input should have \"00\" value', () => {\n                expect(mm).attr('value', '00');\n            });\n            it('should move selection on hh segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n        });\n\n        describe('arrow down on hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.keyDown(hh, {keyCode: keycode('down')});\n            });\n            it('hh input should have \"12\" value', () => {\n                expect(hh).attr('value', '12');\n            });\n            it('onChange should be callen with \"12:55\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '12:55'});\n            });\n        });\n\n        describe('arrow up on hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.keyDown(hh, {keyCode: keycode('up')});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('onChange should be callen with \"14:55\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:55'});\n            });\n        });\n\n        describe('arrow down on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('down')});\n            });\n            it('mm input should have \"54\" value', () => {\n                expect(mm).attr('value', '54');\n            });\n            it('onChange should be callen with \"13:54\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '13:54'});\n            });\n        });\n\n        describe('arrow up on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('up')});\n            });\n            it('mm input should have \"56\" value', () => {\n                expect(mm).attr('value', '56');\n            });\n            it('onChange should be callen with \"13:56\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '13:56'});\n            });\n        });\n\n    });\n\n    describe('render with onChange={onChange} onInput={onInput} format=\"24h\" value=\"13:55\"', () => {\n        let onChange: any;\n        let onInput: any;\n        let renderer: any;\n        let hh: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            onInput = sinon.spy();\n            renderer = clientRenderer.render(\n                <TimePicker format=\"24h\" value=\"13:55\" onChange={onChange} onInput={onInput}/>\n            );\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n        });\n\n        describe('entering \"3\" into hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                hh.value = '3';\n                simulate.change(hh);\n            });\n            it('onChange should be callend with \"03:55\"', () => {\n                expect(onChange).to.be.calledWithExactly({value: '03:55'});\n            });\n            it('onInput should be callend with \"03:55\"', () => {\n                expect(onInput).to.be.calledWithExactly({value: '03:55'});\n            });\n        });\n    });\n\n    describe('render with onChange={onChange} format=\"24h\" value=\"13:59\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let stepperIncrement: any;\n        let stepperDecrement: any;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"24h\" value=\"13:59\" onChange={onChange}/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            stepperIncrement = renderer.select('STEPPER_INCREMENT');\n            stepperDecrement = renderer.select('STEPPER_DECREMENT');\n        });\n\n        describe('arrow up on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('up')});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('mm input should have \"00\" value', () => {\n                expect(mm).attr('value', '00');\n            });\n            itDesktop('mm input should have selection', () => {\n                expect([mm.selectionStart, mm.selectionEnd]).to.deep.equal([0, 2]);\n            });\n            it('onChange should be callen with \"14:00\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:00'});\n            });\n        });\n\n        describe('arrow shift + up on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('up'), shiftKey: true});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('mm input should have \"09\" value', () => {\n                expect(mm).attr('value', '09');\n            });\n            it('onChange should be callen with \"14:09\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:09'});\n            });\n        });\n\n        describe('arrow shift + down on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('down'), shiftKey: true});\n            });\n            it('mm input should have \"49\" value', () => {\n                expect(mm).attr('value', '49');\n            });\n            it('onChange should be callen with \"13:49\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '13:49'});\n            });\n        });\n\n        describe('arrow shift + up on hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.keyDown(mm, {keyCode: keycode('up'), shiftKey: true});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('onChange should be callen with \"14:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:59'});\n            });\n        });\n\n        describe('arrow shift + down on hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.keyDown(mm, {keyCode: keycode('down'), shiftKey: true});\n            });\n            it('hh input should have \"12\" value', () => {\n                expect(hh).attr('value', '12');\n            });\n            it('onChange should be callen with \"12:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '12:59'});\n            });\n        });\n\n        describeDesktop('shift + stepper up (mm focus)', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.click(stepperIncrement, {shiftKey: true});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('mm input should have \"09\" value', () => {\n                expect(mm).attr('value', '09');\n            });\n            itDesktop('mm input should have selection', () => {\n                expect([mm.selectionStart, mm.selectionEnd]).to.deep.equal([0, 2]);\n            });\n            it('onChange should be callen with \"14:09\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:09'});\n            });\n        });\n\n        describeDesktop('shift + stepper down (mm focus)', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.click(stepperDecrement, {shiftKey: true});\n            });\n            it('mm input should have \"49\" value', () => {\n                expect(mm).attr('value', '49');\n            });\n            it('onChange should be callen with \"13:49\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '13:49'});\n            });\n        });\n\n        describeDesktop('shift + stepper up (hh focus)', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.click(stepperIncrement, {shiftKey: true});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            itDesktop('hh input should have selection', () => {\n                expect([hh.selectionStart, hh.selectionEnd]).to.deep.equal([0, 2]);\n            });\n            it('onChange should be callen with \"14:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:59'});\n            });\n        });\n\n        describeDesktop('shift + stepper down (hh focus)', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.click(stepperDecrement, {shiftKey: true});\n            });\n            it('hh input should have \"12\" value', () => {\n                expect(hh).attr('value', '12');\n            });\n            itDesktop('hh input should have selection', () => {\n                expect([hh.selectionStart, hh.selectionEnd]).to.deep.equal([0, 2]);\n            });\n            it('onChange should be callen with \"12:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '12:59'});\n            });\n        });\n\n        describe('arrow up on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('up')});\n            });\n            it('hh input should have \"14\" value', () => {\n                expect(hh).attr('value', '14');\n            });\n            it('mm input should have \"00\" value', () => {\n                expect(mm).attr('value', '00');\n            });\n            it('onChange should be callen with \"14:00\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '14:00'});\n            });\n        });\n\n    });\n\n    describe('render with onChange={onChange} format=ampm\" value=\"11:59\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"11:59\" onChange={onChange}/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n\n        describe('arrow up on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('up')});\n            });\n            it('hh input should have \"12\" value', () => {\n                expect(hh).attr('value', '12');\n            });\n            it('mm input should have \"00\" value', () => {\n                expect(mm).attr('value', '00');\n            });\n            itDesktop('ampm input should have \"PM\" value', () => {\n                expect(ampm).text('PM');\n            });\n            it('onChange should be callen with \"12:00\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '12:00'});\n            });\n        });\n    });\n\n    describe('render with onChange={onChange} format=\"ampm\" value=\"23:59\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"23:59\" onChange={onChange}/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n\n        describe('arrow up on hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                simulate.click(hh);\n                simulate.keyDown(hh, {keyCode: keycode('up')});\n            });\n            itDesktop('hh input should have \"12\" value', () => {\n                expect(hh).attr('value', '12');\n            });\n            itNative('hh input should have \"00\" value', () => {\n                expect(hh).attr('value', '00');\n            });\n            it('mm input should have \"59\" value', () => {\n                expect(mm).attr('value', '59');\n            });\n            itDesktop('ampm input should have \"AM\" value', () => {\n                expect(ampm).text('AM');\n            });\n            it('onChange should be callen with \"00:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '00:59'});\n            });\n        });\n    });\n\n    describe('render with onChange={onChange} format=\"ampm\" value=\"00:00\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"00:00\" onChange={onChange}/>);\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n\n        describe('arrow down on mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                simulate.click(mm);\n                simulate.keyDown(mm, {keyCode: keycode('down')});\n            });\n            itDesktop('hh input should have \"11\" value', () => {\n                expect(hh).attr('value', '11');\n            });\n            itNative('hh input should have \"23\" value', () => {\n                expect(hh).attr('value', '23');\n            });\n            it('mm input should have \"59\" value', () => {\n                expect(mm).attr('value', '59');\n            });\n            itDesktop('ampm input should have \"PM\" value', () => {\n                expect(ampm).text('PM');\n            });\n            it('onChange should be callen with \"23:59\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '23:59'});\n            });\n        });\n    });\n\n    describe('render with format=\"24h\" value=\"01:55\"', () => {\n        let renderer: any;\n        let root: any;\n        let hh: any;\n        let mm: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"24h\" value=\"01:55\"/>);\n            root = renderer.select('TIME_PICKER');\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n        });\n\n        describe('entering \"1\" into hh segment', () => {\n            beforeEach(() => {\n                simulate.focus(hh);\n                hh.value = '1';\n                simulate.change(hh);\n            });\n            it('should set focus state', () => {\n                hasCssState(root, styles, {focus: true});\n            });\n            it('hh input should have \"1\" value', () => {\n                expect(hh).attr('value', '1');\n            });\n            it('mm input should have \"55\" value', () => {\n                expect(mm).attr('value', '55');\n            });\n            it('should keep curson in hh segment', () => {\n                expect(document.activeElement).to.equal(hh);\n            });\n        });\n    });\n\n    describeNative('render with value=\"01:59\" format=\"ampm\" (touch)', () => {\n        let renderer: any;\n        let stepperIncrement: any;\n        let stepperDecrement: any;\n\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"01:59\"/>);\n            stepperIncrement = renderer.select('STEPPER_INCREMENT');\n            stepperDecrement = renderer.select('STEPPER_DECREMENT');\n        });\n        it ('should not render stepperIncrement', () => {\n            expect(stepperIncrement).to.be.null;\n        });\n        it ('should not render stepperDecrement', () => {\n            expect(stepperDecrement).to.be.null;\n        });\n    });\n\n    describe('render with onChange={onChange} format=\"ampm\" value=\"04:55\"', () => {\n        let onChange: any;\n        let renderer: any;\n        let root: any;\n        let hh: any;\n        let mm: any;\n        let ampm: any;\n        beforeEach(() => {\n            onChange = sinon.spy();\n            renderer = clientRenderer.render(<TimePicker format=\"ampm\" value=\"04:55\" onChange={onChange}/>);\n            root = renderer.select('TIME_PICKER');\n            hh = renderer.select('TIME_PICKER_INPUT_HH');\n            mm = renderer.select('TIME_PICKER_INPUT_MM');\n            ampm = renderer.select('TIME_PICKER_AMPM');\n        });\n        describe('entering \"3\" into mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                mm.value = '3';\n                simulate.change(mm);\n            });\n            it('should set focus state', () => {\n                hasCssState(root, styles, {focus: true});\n            });\n            it('hh input should have \"04\" value', () => {\n                expect(hh).attr('value', '04');\n            });\n            it('mm input should have \"3\" value', () => {\n                expect(mm).attr('value', '3');\n            });\n            itDesktop('ampm should have \"AM\" value', () => {\n                expect(ampm).text('AM');\n            });\n            it('should keep selection on mm segment', () => {\n                expect(document.activeElement).to.equal(mm);\n            });\n            it('onChange should not be callen', async () => {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                expect(onChange).to.not.be.called;\n            });\n        });\n\n        describe('entering \"7\" into mm segment', () => {\n            beforeEach(() => {\n                simulate.focus(mm);\n                mm.value = '7';\n                simulate.change(mm);\n            });\n            it('should set focus state', () => {\n                hasCssState(root, styles, {focus: true});\n            });\n            it('hh input should have \"04\" value', () => {\n                expect(hh).attr('value', '04');\n            });\n            it('mm input should have \"07\" value', () => {\n                expect(mm).attr('value', '07');\n            });\n            itDesktop('ampm should have \"AM\" value', () => {\n                expect(ampm).text('AM');\n            });\n            itDesktop('should move selection on ampm segment', () => {\n                expect(document.activeElement).to.equal(ampm);\n            });\n            it('onChange should be callen with \"04:07\"', async () => {\n                expect(onChange).to.be.calledWithExactly({value: '04:07'});\n            });\n        });\n\n        describeDesktop('focus and change ampm input', () => {\n            beforeEach(() => {\n                simulate.focus(ampm);\n                simulate.keyDown(ampm, {keyCode: keycode('space')});\n            });\n            it('onChange should be callen with \"16:55\"', () => {\n                expect(onChange).to.be.calledWithExactly({value: '16:55'});\n            });\n        });\n    });\n\n    describeDesktop('Render <TimePickerDemo/>', () => {\n        let renderer: any;\n        let firstInputHH: any;\n        let firstInputMM: any;\n        let firstStepperUp: any;\n        let secondInputHH: any;\n        let secondInputMM: any;\n        let secondStepperUp: any;\n        beforeEach(() => {\n            renderer = clientRenderer.render(<TimePickerDemo/>);\n            firstInputHH = renderer.select('TIME_PICKER_DEMO_CONTROLLED_24', 'TIME_PICKER_INPUT_HH');\n            firstInputMM = renderer.select('TIME_PICKER_DEMO_CONTROLLED_24', 'TIME_PICKER_INPUT_MM');\n            firstStepperUp = renderer.select('TIME_PICKER_DEMO_CONTROLLED_24', 'STEPPER_INCREMENT');\n            secondInputHH = renderer.select('TIME_PICKER_DEMO_CONTROLLED_AMPM', 'TIME_PICKER_INPUT_HH');\n            secondInputMM = renderer.select('TIME_PICKER_DEMO_CONTROLLED_AMPM', 'TIME_PICKER_INPUT_MM');\n            secondStepperUp = renderer.select('TIME_PICKER_DEMO_CONTROLLED_AMPM', 'STEPPER_INCREMENT');\n        });\n\n        describe('focus on hh segment on first input', () => {\n            it('should keep focus on hh segment of first input', () => {\n                simulate.focus(firstInputHH);\n                simulate.click(firstStepperUp);\n                expect(document.activeElement === firstInputHH).to.be.true;\n            });\n        });\n\n        describe('focus on mm segment on first input', () => {\n            it('should keep focus on mm segment on first input', () => {\n                simulate.focus(firstInputMM);\n                simulate.click(firstStepperUp);\n                expect(document.activeElement === firstInputMM).to.be.true;\n            });\n        });\n\n        describe('initial click on stepper inside first input', () => {\n            it('should move focus on hh segment on first input', () => {\n                simulate.click(firstStepperUp);\n                expect(document.activeElement === firstInputHH).to.be.true;\n            });\n        });\n\n        describe('focus on mm segment on first input then on mm segment on second input then', () => {\n            beforeEach(() => {\n                simulate.click(firstInputMM);\n                simulate.focus(firstInputMM);\n            });\n            describe('focus on mm segment on second input', () => {\n                beforeEach(() => {\n                    simulate.blur(firstInputMM);\n                    simulate.click(secondInputMM);\n                    simulate.focus(secondInputMM);\n                });\n                describe.skip('click on stepper in first input', () => {\n                    it('should set focus on hh on first input', () => {\n                        simulate.blur(secondInputMM);\n                        simulate.focus(firstStepperUp);\n                        simulate.click(firstStepperUp);\n                        expect(document.activeElement === firstInputHH).to.be.true;\n                    });\n                });\n            });\n        });\n    });\n\n});\n\ndescribe('TimePicker/utils', () => {\n    describe('formatTimeChunk()', () => {\n        it('\"\"', () => {\n            expect(formatTimeChunk('')).to.equal('00');\n        });\n        it('\"1\"', () => {\n            expect(formatTimeChunk('1')).to.equal('01');\n        });\n        it('\"12\"', () => {\n            expect(formatTimeChunk('12')).to.equal('12');\n        });\n    });\n    describe('to24()', () => {\n        it('12 AM = 0', () => {\n            expect(to24(12, Ampm.AM)).to.equal(0);\n        });\n        it('1 AM = 1', () => {\n            expect(to24(1, Ampm.AM)).to.equal(1);\n        });\n        it('12 PM = 12', () => {\n            expect(to24(12, Ampm.PM)).to.equal(12);\n        });\n        it('11 PM = 23', () => {\n            expect(to24(11, Ampm.PM)).to.equal(23);\n        });\n    });\n    describe('toAmpm()', () => {\n        it('0 = 12 AM', () => {\n            expect(toAmpm(0)).to.deep.equal({hh: 12, ampm: Ampm.AM});\n        });\n        it('1 = 1 AM', () => {\n            expect(toAmpm(1)).to.deep.equal({hh: 1, ampm: Ampm.AM});\n        });\n        it('12 = 12 PM', () => {\n            expect(toAmpm(12)).to.deep.equal({hh: 12, ampm: Ampm.PM});\n        });\n        it('15 = 3 PM', () => {\n            expect(toAmpm(15)).to.deep.equal({hh: 3, ampm: Ampm.PM});\n        });\n    });\n    describe('isValidValue()', () => {\n        it('11:00 AM = true', () => {\n            expect(isValidValue(11, 'hh', Ampm.AM)).to.equal(true);\n        });\n        it('11:00 PM = true', () => {\n            expect(isValidValue(11, 'hh', Ampm.PM)).to.equal(true);\n        });\n        it('13:00 PM = false', () => {\n            expect(isValidValue(13, 'hh', Ampm.PM)).to.equal(false);\n        });\n        it('13:00 = true', () => {\n            expect(isValidValue(13, 'hh', Ampm.NONE)).to.equal(true);\n        });\n        it('25:00 = false', () => {\n            expect(isValidValue(25, 'hh', Ampm.NONE)).to.equal(false);\n        });\n        it('11:25 = true', () => {\n            expect(isValidValue(25, 'mm', Ampm.NONE)).to.equal(true);\n        });\n        it('11:65 = false', () => {\n            expect(isValidValue(65, 'mm', Ampm.NONE)).to.equal(false);\n        });\n    });\n});\n"]}