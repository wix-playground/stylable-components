{"version":3,"file":"auto-complete.spec.js","sourceRoot":"","sources":["../../../test/components/auto-complete.spec.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAiKA;;AAjKA,6BAA+B;AAC/B,qDAAwH;AACxH,+EAA0E;AAC1E,iCAAuC;AAEvC,IAAM,QAAQ,GAAG,eAAe,CAAC;AACjC,IAAM,YAAY,GAAG,QAAQ,GAAG,OAAO,CAAC;AACxC,IAAM,aAAa,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAE1C,IAAM,KAAK,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC7G,IAAM,UAAU,GAAG,4BAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC5C,IAAM,cAAc,GAAG,6BAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AAE7D,QAAQ,CAAC,kBAAkB,EAAE;IACzB,IAAM,cAAc,GAAG,IAAI,iCAAc,EAAE,CAAC;IAC5C,SAAS,CAAC,cAAM,OAAA,cAAc,CAAC,OAAO,EAAE,EAAxB,CAAwB,CAAC,CAAC;IAE1C,QAAQ,CAAC,uBAAuB,EAAE;QAC9B,EAAE,CAAC,wCAAwC,EAAE;;;;;wBACnC,KAAuB,cAAc,CAAC,MAAM,CAAC,oBAAC,qCAAgB,OAAG,CAAC,EAAjE,MAAM,YAAA,EAAE,UAAU,gBAAA,CAAgD;wBACnE,MAAM,GAAG,GAAG,CAAC;wBACb,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAvB,CAAuB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAE7E,2BAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;wBAEtC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAE,CAAC;wBACrC,qBAAM,cAAc,CAAC;gCACjB,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;gCACjC,yBAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC1D,CAAC,CAAC,EAAA;;wBAHF,SAGE,CAAC;wBAEH,0BAAO,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,CAAC;wBAClD,qBAAM,cAAc,CAAC,cAAM,OAAA,yBAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAApD,CAAoD,CAAC,EAAA;;wBAAhF,SAAgF,CAAC;wBAEjF,2BAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChD,qBAAM,UAAU,CAAC;gCACb,yBAAM,CAAC,MAAM,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;4BAChF,CAAC,CAAC,EAAA;;wBAFF,SAEE,CAAC;;;;aACN,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QAClB,IAAA,yEAA8D,EAA7D,kBAAM,EAAE,0BAAU,CAA4C;QAErE,MAAM,CAAC,UAAU,CAAC;YACd,yBAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACzC,yBAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE;QACrD,IAAM,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;QACtB,IAAA,sGAAM,CAA+D;QAE5E,MAAM,CAAmB,QAAQ,EAAE,aAAa,CAAE,CAAC,KAAK,GAAG,KAAK,CAAC;QACjE,2BAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;QAEjD,MAAM,CAAC,cAAc,CAAC;YAClB,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACzC,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;;;;oBACzC,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,UAAU,EAAE,KAAK,EAAE,IAAI,SAAE,CAAC,CAAC;oBAE/D,qBAAM,cAAc,CAAC,cAAM,OAAA,yBAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,EAA1C,CAA0C,CAAC,EAAA;;oBAAtE,SAAsE,CAAC;;;;SAC1E,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;;;;oBAC7B,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,IAAI,QAAC,UAAU,EAAE,KAAK,GAAG,CAAC,CAAC;oBAE/D,qBAAM,cAAc,CAAC,cAAM,OAAA,yBAAM,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAA/D,CAA+D,CAAC,EAAA;;oBAA3F,SAA2F,CAAC;;;;SAC/F,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;;;;;oBAC3C,QAAQ,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;oBAC7B,cAAc,CAAC,MAAM,CACjB,oBAAC,kBAAY,IAAC,IAAI,QAAC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAG,CACvE,CAAC;oBAEF,2BAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEhD,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;4BACzC,yBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;wBAClE,CAAC,CAAC,EAAA;;oBAHF,SAGE,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE;;;;;oBAC/C,MAAM,GAAG,GAAG,CAAC;oBACb,aAAa,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBAC5C,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,IAAI,QAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC;oBACxE,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;oBAEpC,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,QAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACnE,CAAC,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE;;;;;oBACxD,MAAM,GAAG,GAAG,CAAC;oBACb,aAAa,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAC3C,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,IAAI,QAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC;oBACxE,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;oBAEpC,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,QAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACnE,CAAC,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE;;;;;oBAC7C,KAAuB,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,OAAE,CAAC,EAA5D,MAAM,YAAA,EAAE,UAAU,gBAAA,CAA2C;oBAEpE,qBAAM,UAAU,CAAC;4BACb,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,aAAa,CAAE,CAAC;4BAC/C,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAE,CAAC;4BAErD,yBAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;4BACpC,yBAAM,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;wBAC7D,CAAC,CAAC,EAAA;;oBANF,SAME,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE;;;;;oBACzD,iBAAiB,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;oBAChC,KAAuB,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,iBAAiB,EAAE,iBAAiB,GAAG,CAAC,EAAlG,MAAM,YAAA,EAAE,UAAU,gBAAA,CAAiF;oBAE1G,qBAAM,UAAU,CAAC,cAAM,OAAA,yBAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,EAA7D,CAA6D,CAAC,EAAA;;oBAArF,SAAqF,CAAC;oBACtF,2BAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;oBACtD,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;4BAClD,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;wBAC1E,CAAC,CAAC,EAAA;;oBAHF,SAGE,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE;;;;;oBACrD,iBAAiB,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;oBAChC,KAAuB,cAAc,CAAC,MAAM,CAC9C,oBAAC,kBAAY,IAAC,UAAU,EAAE,KAAK,EAAE,IAAI,QAAC,iBAAiB,EAAE,iBAAiB,GAAG,CAChF,EAFM,MAAM,YAAA,EAAE,UAAU,gBAAA,CAEvB;oBAEF,qBAAM,UAAU,CAAC,cAAM,OAAA,yBAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,EAAxC,CAAwC,CAAC,EAAA;;oBAAhE,SAAgE,CAAC;oBACjE,2BAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;4BAClD,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;wBAC3E,CAAC,CAAC,EAAA;;oBAHF,SAGE,CAAC;;;;SACN,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;;;;;oBAC1D,iBAAiB,GAAG,wBAAK,CAAC,GAAG,EAAE,CAAC;oBAChC,KAAuB,cAAc,CAAC,MAAM,CAAC,oBAAC,kBAAY,IAAC,iBAAiB,EAAE,iBAAiB,GAAG,CAAC,EAAlG,MAAM,YAAA,EAAE,UAAU,gBAAA,CAAiF;oBAE1G,qBAAM,UAAU,CAAC,cAAM,OAAA,yBAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,EAAxC,CAAwC,CAAC,EAAA;;oBAAhE,SAAgE,CAAC;oBACjE,0BAAO,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,CAAC;oBAC/C,qBAAM,cAAc,CAAC;4BACjB,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;4BAClD,yBAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;wBAC1E,CAAC,CAAC,EAAA;;oBAHF,SAGE,CAAC;;;;SACN,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {ClientRenderer, expect, selectDom, simulate, sinon, trigger, waitForDom as gWaitForDom} from 'test-drive-react';\nimport {AutoCompleteDemo} from '../../demo/components/auto-complete.demo';\nimport {AutoComplete} from '../../src';\n\nconst autoComp = 'AUTO_COMPLETE';\nconst autoCompDemo = autoComp + '_DEMO';\nconst autoCompInput = autoComp + '_INPUT';\n\nconst items = ['Muffins', 'Pancakes', 'Cupcakes', 'Souffles', 'Pasta', 'Soup', 'Caramel', 'Avazim', 'Moses'];\nconst bodySelect = selectDom(document.body);\nconst bodyWaitForDom = gWaitForDom.bind(null, document.body);\n\ndescribe('<AutoComplete />', () => {\n    const clientRenderer = new ClientRenderer();\n    afterEach(() => clientRenderer.cleanup());\n\n    describe('The autocomplete user', () => {\n        it('types in the input and selects a value', async () => {\n            const {select, waitForDom} = clientRenderer.render(<AutoCompleteDemo />);\n            const prefix = 'P';\n            const filteredItems = items.filter(item => item.startsWith(prefix)).join('');\n\n            simulate.click(select(autoComp + '_CARET'));\n\n            const itemList = bodySelect('LIST')!;\n            await bodyWaitForDom(() => {\n                expect(itemList).to.be.present();\n                expect(itemList.textContent).to.equal(items.join(''));\n            });\n\n            trigger.change(bodySelect(autoCompInput), prefix);\n            await bodyWaitForDom(() => expect(itemList.textContent).to.equal(filteredItems));\n\n            simulate.click(bodySelect('LIST')!.children[0]);\n            await waitForDom(() => {\n                expect(select(autoCompDemo + '_TEXT')).to.have.text('You picked: Pancakes');\n            });\n        });\n    });\n\n    it('renders to the screen', () => {\n        const {select, waitForDom} = clientRenderer.render(<AutoComplete />);\n\n        return waitForDom(() => {\n            expect(select(autoComp)).to.be.present();\n            expect(bodySelect('LIST')).to.be.absent();\n        });\n    });\n\n    it('invokes the onChange when text is entered to label', () => {\n        const onChange = sinon.spy();\n        const {select} = clientRenderer.render(<AutoComplete onChange={onChange}/>);\n\n        select<HTMLInputElement>(autoComp, autoCompInput)!.value = 'abc';\n        simulate.change(select(autoComp, autoCompInput));\n\n        return bodyWaitForDom(() => {\n            expect(onChange).to.have.been.calledOnce;\n            expect(onChange).to.have.been.calledWithMatch({value: 'abc'});\n        });\n    });\n\n    it('renders the item list if open is given', async () => {\n        clientRenderer.render(<AutoComplete dataSource={items} open/>);\n\n        await bodyWaitForDom(() => expect(bodySelect('LIST')).to.be.present());\n    });\n\n    it('renders the items if given', async () => {\n        clientRenderer.render(<AutoComplete open dataSource={items}/>);\n\n        await bodyWaitForDom(() => expect(bodySelect('LIST')!.children[0]).to.have.text('Muffins'));\n    });\n\n    it('invokes the onChange when an option is clicked', async () => {\n        const onChange = sinon.spy();\n        clientRenderer.render(\n            <AutoComplete open dataSource={['Cat', 'Dog']} onChange={onChange}/>\n        );\n\n        simulate.click(bodySelect('LIST')!.children[0]);\n\n        await bodyWaitForDom(() => {\n            expect(onChange).to.have.been.calledOnce;\n            expect(onChange).to.have.been.calledWithMatch({value: 'Cat'});\n        });\n    });\n\n    it('displays filtered results according to given value', async () => {\n        const prefix = 'P';\n        const filteredItems = ['Pancakes', 'Pasta'];\n        clientRenderer.render(<AutoComplete open dataSource={items} value={prefix}/>);\n        const itemList = bodySelect('LIST');\n\n        await bodyWaitForDom(() => {\n            expect(itemList!.textContent).to.equal(filteredItems.join(''));\n        });\n    });\n\n    it('ignores case when filtering according to the default filter', async () => {\n        const prefix = 'm';\n        const filteredItems = ['Muffins', 'Moses'];\n        clientRenderer.render(<AutoComplete open dataSource={items} value={prefix}/>);\n        const itemList = bodySelect('LIST');\n\n        await bodyWaitForDom(() => {\n            expect(itemList!.textContent).to.equal(filteredItems.join(''));\n        });\n    });\n\n    it('places the caret inside the input and centers it', async () => {\n        const {select, waitForDom} = clientRenderer.render(<AutoComplete/>);\n\n        await waitForDom(() => {\n            const input = select(autoComp, autoCompInput)!;\n            const caret = select(autoComp, autoComp + '_CARET')!;\n\n            expect(caret).to.be.insideOf(input);\n            expect([input, caret]).to.be.verticallyAligned('center');\n        });\n    });\n\n    it('calls the onOpenStateChange event when clicking on the caret', async () => {\n        const onOpenStateChange = sinon.spy();\n        const {select, waitForDom} = clientRenderer.render(<AutoComplete onOpenStateChange={onOpenStateChange}/>);\n\n        await waitForDom(() => expect(select(autoComp, autoComp + '_CARET')).to.be.present());\n        simulate.click(select(autoComp, autoComp + '_CARET'));\n        await bodyWaitForDom(() => {\n            expect(onOpenStateChange).to.have.been.calledOnce;\n            expect(onOpenStateChange).to.have.been.calledWithMatch({value: true});\n        });\n    });\n\n    it('calls the onOpenStateChange event when selecting an item', async () => {\n        const onOpenStateChange = sinon.spy();\n        const {select, waitForDom} = clientRenderer.render(\n            <AutoComplete dataSource={items} open onOpenStateChange={onOpenStateChange}/>\n        );\n\n        await waitForDom(() => expect(select(autoComp)).to.be.present());\n        simulate.click(bodySelect('LIST')!.children[0]);\n        await bodyWaitForDom(() => {\n            expect(onOpenStateChange).to.have.been.calledOnce;\n            expect(onOpenStateChange).to.have.been.calledWithMatch({value: false});\n        });\n    });\n\n    it('calls the onOpenStateChange event when first entering a value', async () => {\n        const onOpenStateChange = sinon.spy();\n        const {select, waitForDom} = clientRenderer.render(<AutoComplete onOpenStateChange={onOpenStateChange}/>);\n\n        await waitForDom(() => expect(select(autoComp)).to.be.present());\n        trigger.change(bodySelect(autoCompInput), 'M');\n        await bodyWaitForDom(() => {\n            expect(onOpenStateChange).to.have.been.calledOnce;\n            expect(onOpenStateChange).to.have.been.calledWithMatch({value: true});\n        });\n    });\n});\n"]}