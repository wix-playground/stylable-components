{"version":3,"file":"date-picker.spec.js","sourceRoot":"","sources":["../../../test/components/date-picker.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as keycode from 'keycode';\nimport * as React from 'react';\nimport {ClientRenderer, DriverBase, expect, sinon} from 'test-drive-react';\nimport {DatePickerDemo} from '../../demo/components/date-picker-demo';\nimport {DatePicker} from '../../src';\nimport {\n    getDayNames,\n    getDaysInMonth,\n    getMonthFromOffset,\n    getNumOfFollowingDays,\n    getNumOfPreviousDays\n} from '../../src/utils';\nimport {DatePickerTestDriver} from '../../test-kit';\nimport {sleep} from '../utils';\n\nclass DatePickerDemoDriver extends DriverBase {\n    public static ComponentClass = DatePickerDemo;\n    public datePicker = new DatePickerTestDriver(() => this.select('DATE_PICKER_DEMO', 'DATE_PICKER'));\n\n    public get date(): HTMLSpanElement {\n        return this.select('DATE_PICKER_DEMO', 'CURRENT_DATE');\n    }\n}\n\ndescribe('The DatePicker Component', () => {\n    const clientRenderer = new ClientRenderer();\n    afterEach(() => clientRenderer.cleanup());\n\n    const JANUARY_FIRST = new Date(2017, 0, 1);\n    const FEBRUARY_FIRST = new Date(2017, 1, 1);\n    const MARCH_FIRST  = new Date(2017, 2, 1);\n    const DECEMBER_FIRST = new Date(2017, 11, 1);\n\n    describe('A Typical User', () => {\n        it('writes into the date picker input field, presses enter, ' +\n            'and expects the date picker input to have the proper value', async () => {\n            const {driver: datePickerDemo , waitForDom} = clientRenderer.render(<DatePickerDemo />)\n                .withDriver(DatePickerDemoDriver);\n\n            datePickerDemo.datePicker.changeDate('2017/02/01');\n\n            await waitForDom(() => expect(datePickerDemo.date).to.have.text('Wed Feb 01 2017'));\n        });\n\n        it('clicks on the icon, picks a date from the dropdown, ' +\n            'and then expects the dropdown to close and the date to have been selected', async () => {\n            const {driver: datePickerDemo, waitForDom} = clientRenderer.render(\n                <DatePickerDemo value={JANUARY_FIRST} />).withDriver(DatePickerDemoDriver);\n\n            const datePicker = datePickerDemo.datePicker;\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.absent());\n            // simulate.click(select('CALENDAR_ICON'));\n\n            datePicker.openCalender();\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n\n            datePicker.clickOnDay(4);\n\n            await waitForDom(() => {\n                expect(datePicker.dropDown).to.be.absent();\n                expect(datePickerDemo.date).to.have.text('Wed Jan 04 2017');\n            });\n        });\n    });\n\n    it('should only call onChange once', async () => {\n        const onChange = sinon.spy();\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker onChange={onChange} />)\n            .withDriver(DatePickerTestDriver);\n\n        datePicker.changeDate('2017/02/01');\n\n        await waitForDom(() => expect(onChange).to.have.been.calledOnce);\n    });\n\n    it('should use a provided value', async () => {\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker value={JANUARY_FIRST} />)\n            .withDriver(DatePickerTestDriver);\n\n        await waitForDom(() => expect(datePicker.selectedDate).to.equal(JANUARY_FIRST.toDateString()));\n    });\n\n    it('should not call onChange with an invalid date', async () => {\n        const onChange = sinon.spy();\n        const {driver: datePicker} = clientRenderer.render(<DatePicker onChange={onChange} />)\n            .withDriver(DatePickerTestDriver);\n\n        datePicker.changeDate('2sgsdfsdfw223');\n        await sleep(20);\n        expect(onChange).to.have.not.been.called;\n    });\n\n    it('should call onChange with the current input value when blurred', async () => {\n        const onChange = sinon.spy();\n        const {driver: datePicker, waitForDom} = clientRenderer.render(\n            <DatePicker value={JANUARY_FIRST} onChange={onChange} />\n        ).withDriver(DatePickerTestDriver);\n\n        datePicker.changeDate('2017/02/01');\n\n        await waitForDom(() => expect(onChange).to.have.been.calledWithMatch({value: FEBRUARY_FIRST}));\n    });\n\n    it('should use a provided placeholder', async () => {\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker placeholder=\"mm/dd/yyyy\" />)\n            .withDriver(DatePickerTestDriver);\n\n        await waitForDom(() => expect(datePicker.input).to.have.attribute('placeholder', 'mm/dd/yyyy'));\n    });\n\n    it('should show and hide the dropdown when the input is clicked', async () => {\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker />)\n            .withDriver(DatePickerTestDriver);\n\n        await waitForDom(() => expect(datePicker.isOpen()).to.be.false);\n\n        datePicker.clickOnDatePicker();\n\n        await waitForDom(() => expect(datePicker.isOpen()).to.be.true);\n\n        datePicker.clickOnDatePicker();\n\n        await waitForDom(() => expect(datePicker.isOpen()).to.be.false);\n    });\n\n    it('should show and hide the dropdown when focused and openOnFocus is true', async () => {\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker openOnFocus />)\n            .withDriver(DatePickerTestDriver);\n\n        await waitForDom(() => expect(datePicker.dropDown).to.be.absent());\n\n        datePicker.focus();\n\n        await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n    });\n\n    it('can be changed with the arrow keys', async () => {\n        const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker value={JANUARY_FIRST} openOnFocus/>)\n            .withDriver(DatePickerTestDriver);\n\n        function simulateKeyPress(keyToPress: string) {\n            datePicker.openCalender();\n            datePicker.keyPress(keycode(keyToPress));\n            datePicker.keyPress(keycode('enter'));\n        }\n\n        // Advance one week\n        simulateKeyPress('down');\n\n        await waitForDom(() => expect(datePicker.selectedDate).to.equal('Sun Jan 08 2017'));\n\n        // Go back one week\n        simulateKeyPress('up');\n\n        await waitForDom(() => expect(datePicker.selectedDate).to.equal('Sun Jan 01 2017'));\n\n        // Go forward one day\n        simulateKeyPress('right');\n\n        await waitForDom(() => expect(datePicker.selectedDate).to.equal('Mon Jan 02 2017'));\n\n        // Go back one day\n        simulateKeyPress('left');\n\n        await waitForDom(() => expect(datePicker.selectedDate).to.equal('Sun Jan 01 2017'));\n    });\n\n    describe('The Dropdown', () => {\n        const dayNames = getDayNames();\n        const days: string[] = [\n            '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',\n            '11', '12', '13', '14', '15', '16', '17', '18', '19',\n            '20', '21', '22', '23', '24', '25', '26', '27', '28'\n        ];\n\n        it('should display the days for a fixed month', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker\n                    showDropdownOnInit={true}\n                    value={FEBRUARY_FIRST}\n                />\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => {\n                dayNames.forEach((dayName, index) => expect(datePicker.getDayName(index)).to.have.text(dayName));\n                days.forEach(day => expect(datePicker.getDay(day)).to.have.text(day));\n            });\n        });\n\n        it('should show the next and previous month buttons horizontally aligned with the month and year', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker showDropdownOnInit value={JANUARY_FIRST}/>\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => {\n                const headerContents = [\n                    datePicker.prevMonthLabel,\n                    datePicker.monthLabel,\n                    datePicker.yearLabel,\n                    datePicker.nextMonthLabel\n                ];\n                expect(headerContents).to.be.verticallyAligned('center', 1);\n            });\n        });\n\n        it('should display the day names in horizontal sequence, and vertically aligned', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker showDropdownOnInit value={JANUARY_FIRST}/>\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => {\n                const dayNameElements = dayNames.map((name, index) => {\n                    return datePicker.getDayName(index);\n                });\n\n                expect(dayNameElements).to.be.inHorizontalSequence();\n                expect(dayNameElements).to.be.verticallyAligned('center', 1.5);\n            });\n        });\n\n        it('should display the days in a grid', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker value={JANUARY_FIRST} showDropdownOnInit/>\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => {\n                const firstRow = [];\n                const firstColumn = [];\n\n                for (let i = 1; i < 7; i++) {\n                    firstRow.push(datePicker.getDay(i));\n                }\n\n                for (let i = 1; i <= 5; i++) {\n                    firstColumn.push(datePicker.getDay((7 * (i - 1)) + 1));\n                }\n\n                // Check that the days are displayed in rows (checking that each row is in horizontal sequence\n                expect(firstRow).to.be.inHorizontalSequence();\n                expect(firstRow).to.be.verticallyAligned('center');\n\n                // Check that the days are displayed in columns\n                expect(firstColumn).to.be.inVerticalSequence();\n                expect(firstColumn).to.be.horizontallyAligned('center');\n            });\n        });\n\n        it('should show the days starting on the correct day of the week', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker value={MARCH_FIRST} showDropdownOnInit/>\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect([\n                datePicker.getDay(1),\n                datePicker.getDayName(3)\n            ]).to.be.horizontallyAligned('center'));\n        });\n\n        it('should show the trailing days from the last and next months', () => {\n            const {driver: datePicker} = clientRenderer.render(<DatePicker value={MARCH_FIRST} showDropdownOnInit/>)\n                .withDriver(DatePickerTestDriver);\n\n            expect(datePicker.getPrevDay(26)).to.be.present();\n            expect(datePicker.getPrevDay(27)).to.be.present();\n            expect(datePicker.getPrevDay(28)).to.be.present();\n            expect(datePicker.getNextDay(1)).to.be.present();\n\n        });\n\n        it('displays the year', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker showDropdownOnInit value={JANUARY_FIRST}/>\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect(datePicker.yearLabel).to.have.text('2017'));\n        });\n\n        it('displays the name of the month', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker\n                    showDropdownOnInit={true}\n                    value={JANUARY_FIRST}\n                />\n            ).withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect(datePicker.monthLabel).to.have.text('January'));\n        });\n\n        it('has a button which steps forward a month', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker showDropdownOnInit value={DECEMBER_FIRST}/>\n            ).withDriver(DatePickerTestDriver);\n\n            expect(datePicker.yearLabel).to.have.text('2017');\n            expect(datePicker.monthLabel).to.have.text('December');\n            datePicker.clickOnNextMonth();\n\n            await waitForDom(() => {\n                expect(datePicker.yearLabel).to.have.text('2018');\n                expect(datePicker.monthLabel).to.have.text('January');\n            });\n        });\n\n        it('has a button which steps back a month', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(\n                <DatePicker showDropdownOnInit value={JANUARY_FIRST}/>\n            ).withDriver(DatePickerTestDriver);\n\n            expect(datePicker.yearLabel).to.have.text('2017');\n            expect(datePicker.monthLabel).to.have.text('January');\n            datePicker.clickOnPrevMonth();\n\n            await waitForDom(() => {\n                expect(datePicker.yearLabel).to.have.text('2016');\n                expect(datePicker.monthLabel).to.have.text('December');\n            });\n        });\n\n        it('should stay open when the next or previous month buttons are clicked', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker showDropdownOnInit/>)\n                .withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n\n            datePicker.clickOnPrevMonth();\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n\n            datePicker.clickOnNextMonth();\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n        });\n\n        it('should appear when the Enter key is pressed and the openOnFocus property is set to false', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker openOnFocus={false} />)\n                .withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.absent());\n\n            datePicker.keyPress(keycode('enter'));\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n        });\n\n        it('should appear when the Spacebar is pressed and the openOnFocus property is set to false', async () => {\n            const {driver: datePicker, waitForDom} = clientRenderer.render(<DatePicker openOnFocus={false} />)\n                .withDriver(DatePickerTestDriver);\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.absent());\n\n            datePicker.keyPress(keycode('space'));\n\n            await waitForDom(() => expect(datePicker.dropDown).to.be.present());\n        });\n    });\n\n    describe('The Helper Functions', () => {\n        it('getMonthFromOffset should return the next month when the second argument is 1', () => {\n            const date = new Date('Mar 6 2017');\n            const nextMonth = getMonthFromOffset(date, 1);\n\n            expect(nextMonth.getMonth()).to.equal(date.getMonth() + 1);\n        });\n\n        it('getMonthFromOffset should return the previous month when the second argument is -1', () => {\n            const date = new Date('Mar 6 2017');\n            const nextMonth = getMonthFromOffset(date, -1);\n\n            expect(nextMonth.getMonth()).to.equal(date.getMonth() - 1);\n        });\n\n        it('getMonthFromOffset should handle the year changing when moving forward a month', () => {\n            const date = new Date('Dec 6 2016');\n            const nextMonth = getMonthFromOffset(date, 1);\n\n            expect(nextMonth.getFullYear()).to.equal(date.getFullYear() + 1);\n            expect(nextMonth.getMonth()).to.equal(0);\n        });\n\n        it('getMonthFromOffset should handle the year changing when moving back a month', () => {\n            const date = new Date('Jan 6 2018');\n            const nextMonth = getMonthFromOffset(date, -1);\n\n            expect(nextMonth.getFullYear()).to.equal(date.getFullYear() - 1);\n            expect(nextMonth.getMonth()).to.equal(11);\n        });\n\n        it('getDaysInMonth should return the number of days in a given month', () => {\n            expect(getDaysInMonth(new Date('Feb 18 2017'))).to.equal(28);\n            expect(getDaysInMonth(new Date('Jun 5 2016'))).to.equal(30);\n            expect(getDaysInMonth(new Date('Jan 28, 2017'))).to.equal(31);\n        });\n\n        it('getNumOfPreviousDays should return the number of days to display for the previous month', () => {\n            // Sunday is the default starting day\n            expect(getNumOfPreviousDays(new Date('Feb 18 2017'))).to.equal(3);\n            expect(getNumOfPreviousDays(new Date('Jun 5 2017'))).to.equal(4);\n            expect(getNumOfPreviousDays(new Date('July 5 2017'))).to.equal(6);\n            expect(getNumOfPreviousDays(new Date('September 5 2019'))).to.equal(0);\n        });\n\n        it('getNumOfPreviousDays should handle starting on different days of the week', () => {\n            const dateToTest = new Date('July 5 2017');\n            const secondDateToTest = new Date('September 5 2017');\n            const thirdDateToTest = new Date('October 5 2017');\n            const fourthDateToTest = new Date('August 5 2019');\n\n            expect(getNumOfPreviousDays(dateToTest, 1), 'Wrong number of days for Monday').to.equal(5);\n            expect(getNumOfPreviousDays(dateToTest, 2), 'Wrong number of days for Tuesday').to.equal(4);\n            expect(getNumOfPreviousDays(dateToTest, 3), 'Wrong number of days for Wednesday').to.equal(3);\n            expect(getNumOfPreviousDays(dateToTest, 4), 'Wrong number of days for Thursday').to.equal(2);\n            expect(getNumOfPreviousDays(dateToTest, 5), 'Wrong number of days for Friday').to.equal(1);\n            expect(getNumOfPreviousDays(dateToTest, 6), 'Wrong number of days for Saturday').to.equal(0);\n\n            expect(getNumOfPreviousDays(secondDateToTest, 1), 'Wrong number of days for Monday').to.equal(4);\n            expect(getNumOfPreviousDays(secondDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(3);\n            expect(getNumOfPreviousDays(secondDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(2);\n            expect(getNumOfPreviousDays(secondDateToTest, 4), 'Wrong number of days for Thursday').to.equal(1);\n            expect(getNumOfPreviousDays(secondDateToTest, 5), 'Wrong number of days for Friday').to.equal(0);\n            expect(getNumOfPreviousDays(secondDateToTest, 6), 'Wrong number of days for Saturday').to.equal(6);\n\n            expect(getNumOfPreviousDays(thirdDateToTest, 1), 'Wrong number of days for Monday').to.equal(6);\n            expect(getNumOfPreviousDays(thirdDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(5);\n            expect(getNumOfPreviousDays(thirdDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(4);\n            expect(getNumOfPreviousDays(thirdDateToTest, 4), 'Wrong number of days for Thursday').to.equal(3);\n            expect(getNumOfPreviousDays(thirdDateToTest, 5), 'Wrong number of days for Friday').to.equal(2);\n            expect(getNumOfPreviousDays(thirdDateToTest, 6), 'Wrong number of days for Saturday').to.equal(1);\n\n            expect(getNumOfPreviousDays(fourthDateToTest, 1), 'Wrong number of days for Monday').to.equal(3);\n            expect(getNumOfPreviousDays(fourthDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(2);\n            expect(getNumOfPreviousDays(fourthDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(1);\n            expect(getNumOfPreviousDays(fourthDateToTest, 4), 'Wrong number of days for Thursday').to.equal(0);\n            expect(getNumOfPreviousDays(fourthDateToTest, 5), 'Wrong number of days for Friday').to.equal(6);\n            expect(getNumOfPreviousDays(fourthDateToTest, 6), 'Wrong number of days for Saturday').to.equal(5);\n        });\n\n        it('getNumOfFollowingDays should return the number of days to display for the next month', () => {\n            // Sunday is the default starting day\n            expect(getNumOfFollowingDays(new Date('Feb 18 2017'))).to.equal(4);\n            expect(getNumOfFollowingDays(new Date('Jun 5 2017'))).to.equal(1);\n            expect(getNumOfFollowingDays(new Date('July 5 2017'))).to.equal(5);\n            expect(getNumOfFollowingDays(new Date('September 5 2019'))).to.equal(5);\n        });\n\n        it('getNumOfFollowingDays should handle starting on different days of the week', () => {\n            const dateToTest = new Date('July 5 2017');\n            const secondDateToTest = new Date('September 5 2017');\n            const thirdDateToTest = new Date('October 5 2017');\n            const fourthDateToTest = new Date('August 5 2019');\n\n            expect(getNumOfFollowingDays(dateToTest, 1), 'Wrong number of days for Monday').to.equal(6);\n            expect(getNumOfFollowingDays(dateToTest, 2), 'Wrong number of days for Tuesday').to.equal(0);\n            expect(getNumOfFollowingDays(dateToTest, 3), 'Wrong number of days for Wednesday').to.equal(1);\n            expect(getNumOfFollowingDays(dateToTest, 4), 'Wrong number of days for Thursday').to.equal(2);\n            expect(getNumOfFollowingDays(dateToTest, 5), 'Wrong number of days for Friday').to.equal(3);\n            expect(getNumOfFollowingDays(dateToTest, 6), 'Wrong number of days for Saturday').to.equal(4);\n\n            expect(getNumOfFollowingDays(secondDateToTest, 1), 'Wrong number of days for Monday').to.equal(1);\n            expect(getNumOfFollowingDays(secondDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(2);\n            expect(getNumOfFollowingDays(secondDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(3);\n            expect(getNumOfFollowingDays(secondDateToTest, 4), 'Wrong number of days for Thursday').to.equal(4);\n            expect(getNumOfFollowingDays(secondDateToTest, 5), 'Wrong number of days for Friday').to.equal(5);\n            expect(getNumOfFollowingDays(secondDateToTest, 6), 'Wrong number of days for Saturday').to.equal(6);\n\n            expect(getNumOfFollowingDays(thirdDateToTest, 1), 'Wrong number of days for Monday').to.equal(5);\n            expect(getNumOfFollowingDays(thirdDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(6);\n            expect(getNumOfFollowingDays(thirdDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(0);\n            expect(getNumOfFollowingDays(thirdDateToTest, 4), 'Wrong number of days for Thursday').to.equal(1);\n            expect(getNumOfFollowingDays(thirdDateToTest, 5), 'Wrong number of days for Friday').to.equal(2);\n            expect(getNumOfFollowingDays(thirdDateToTest, 6), 'Wrong number of days for Saturday').to.equal(3);\n\n            expect(getNumOfFollowingDays(fourthDateToTest, 1), 'Wrong number of days for Monday').to.equal(1);\n            expect(getNumOfFollowingDays(fourthDateToTest, 2), 'Wrong number of days for Tuesday').to.equal(2);\n            expect(getNumOfFollowingDays(fourthDateToTest, 3), 'Wrong number of days for Wednesday').to.equal(3);\n            expect(getNumOfFollowingDays(fourthDateToTest, 4), 'Wrong number of days for Thursday').to.equal(4);\n            expect(getNumOfFollowingDays(fourthDateToTest, 5), 'Wrong number of days for Friday').to.equal(5);\n            expect(getNumOfFollowingDays(fourthDateToTest, 6), 'Wrong number of days for Saturday').to.equal(6);\n        });\n    });\n});\n"]}