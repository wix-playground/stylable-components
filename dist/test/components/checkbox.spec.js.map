{"version":3,"file":"checkbox.spec.js","sourceRoot":"","sources":["../../../test/components/checkbox.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {ClientRenderer, DriverBase, expect, sinon, waitFor} from 'test-drive-react';\nimport {CheckBoxDemo, demoCheckBoxText} from '../../demo/components/checkbox-demo';\nimport {CheckBox} from '../../src';\nimport {CheckBoxTestDriver} from '../../test-kit/components/checkbox-driver';\nimport {sleep} from '../utils/sleep';\n\nclass CheckBoxDemoDriver extends DriverBase {\n    public static ComponentClass = CheckBoxDemo;\n\n    public readonly basicDemo: {checkbox: CheckBoxTestDriver, button: HTMLButtonElement} = {\n        checkbox: new CheckBoxTestDriver(() => this.select('BASIC_DEMO', 'BASIC_DEMO_CHECKBOX')),\n        button: this.select('BASIC_DEMO', 'BUTTON_SUBMIT')\n    };\n\n    public readonly disabledDemo: {checkbox: CheckBoxTestDriver} = {\n        checkbox: new CheckBoxTestDriver(() => this.select('DISABLED_DEMO', 'DISABLED_DEMO_CHECKBOX'))\n    };\n\n    public readonly indeterminateDemo: {\n        topCheckbox: CheckBoxTestDriver,\n        option1Checkbox: CheckBoxTestDriver,\n        option2Checkbox: CheckBoxTestDriver\n    } = {\n        topCheckbox: new CheckBoxTestDriver(() => this.select('INDETERMINATE_DEMO_TOP_LEVEL')),\n        option1Checkbox: new CheckBoxTestDriver(() => this.select('INDETERMINATE_DEMO_OPTION1')),\n        option2Checkbox: new CheckBoxTestDriver(() => this.select('INDETERMINATE_DEMO_OPTION2'))\n    };\n}\n\ndescribe('<Checkbox/>', () => {\n    const clientRenderer = new ClientRenderer();\n\n    afterEach(() => {\n        clientRenderer.cleanup();\n    });\n\n    describe('Component / Demo test', () => {\n        it('Basic demo', async () => {\n            const {driver, waitForDom} = clientRenderer.render(<CheckBoxDemo/>).withDriver(CheckBoxDemoDriver);\n\n            const checkbox = driver.basicDemo.checkbox;\n            const button = driver.basicDemo.button;\n\n            await waitForDom(() => {\n                expect(checkbox.root, 'basic root').to.be.present();\n                expect(checkbox.isChecked(), 'expected checkbox to be unchecked').to.equal(false);\n                expect(checkbox.children[0], 'basic label').to.have.text(demoCheckBoxText);\n                expect(button, 'submit button was expected to be diabled').to.have.attribute('disabled');\n            });\n\n            checkbox.click();\n\n            await waitFor(() => {\n                expect(checkbox.isChecked(), 'expected checkbox to be checked').to.equal(true);\n                expect(checkbox.tickMark).to.be.insideOf(checkbox.box);\n                expect(button, 'submit button was expected to be enabled').to.not.have.attribute('disabled');\n            });\n        });\n\n        it('Disabled Demo', async () => {\n            const {driver, waitForDom} = clientRenderer.render(<CheckBoxDemo/>).withDriver(CheckBoxDemoDriver);\n\n            const checkbox = driver.disabledDemo.checkbox;\n\n            await waitForDom(() => {\n                expect(checkbox.root, 'disabled root').to.be.present();\n                expect(checkbox.box, 'disabled box').to.be.present();\n                expect(checkbox.isChecked(), 'disabled checkbox should not be checked').to.equal(false);\n            });\n\n            checkbox.click();\n\n            await waitFor(() => {\n                expect(checkbox.box, 'disabled box').to.be.present();\n                expect(checkbox.isChecked(), 'disabled checkbox should not be checked').to.equal(false);\n            });\n        });\n\n        it('Indeterminate Demo', async () => {\n            const {driver, waitForDom} = clientRenderer.render(<CheckBoxDemo/>).withDriver(CheckBoxDemoDriver);\n\n            const {topCheckbox, option1Checkbox, option2Checkbox} = driver.indeterminateDemo;\n\n            await waitForDom(() => {\n                expect(option1Checkbox.isChecked(), 'option 1 should be checked').to.equal(true);\n                expect(option2Checkbox.isChecked(), 'option 2 should be unchecked').to.equal(false);\n                expect(topCheckbox.isChecked(), 'top checkbox should be unchecked').to.equal(false);\n                expect(topCheckbox.isIndeterminate(), 'top checkbox should be indeterminate').to.equal(true);\n            });\n\n            topCheckbox.click();\n\n            await waitFor(() => {\n                expect(option1Checkbox.isChecked(), 'option 1 should be checked').to.equal(true);\n                expect(option2Checkbox.isChecked(), 'option 2 should be checked').to.equal(true);\n            });\n        });\n    });\n\n    it('Renders with default values', async () => {\n        const {driver: checkbox, waitForDom} = clientRenderer.render(<CheckBox/>).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.root).to.be.present();\n            expect(checkbox.isChecked(), 'checkbox was expected to be unchecked').to.equal(false);\n        });\n    });\n\n    it('Displays children', async () => {\n        const {driver: checkbox, waitForDom} = clientRenderer.render(\n            <CheckBox>\n                <span>covfefe</span>\n            </CheckBox>\n        ).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.children[0]).to.have.text('covfefe');\n        });\n    });\n\n    it('Displays a box icon', async () => {\n        const {driver: checkbox, waitForDom} = clientRenderer.render(\n            <CheckBox />\n        ).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.box).to.be.present();\n        });\n    });\n\n    it('Aligns children and box icon', async () => {\n        const {driver: checkbox, waitForDom} = clientRenderer.render(\n            <CheckBox>\n                <span>yoyo</span>\n            </CheckBox>\n        ).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.children[0]).to.have.text('yoyo');\n            expect([checkbox.box, checkbox.children[0]]).to.be.verticallyAligned('bottom', 5);\n        });\n    });\n\n    it('Displays custom tick mark when value is true', async () => {\n        const {driver: checkbox, waitForDom} = clientRenderer.render(\n            <CheckBox\n                value={true}\n            />\n        ).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.box).to.be.present();\n            expect(checkbox.box).to.have.attribute('data-name', 'custom-box');\n            expect(checkbox.tickMark).to.be.present();\n            expect(checkbox.tickMark).to.have.attribute('data-name', 'custom-tickmark');\n        });\n    });\n\n    it('Calls onChange when clicked', async () => {\n        const onChange = sinon.spy();\n\n        const {driver: checkbox, waitForDom} = clientRenderer.render(\n            <CheckBox\n                value={true}\n                onChange={onChange}\n            />\n        ).withDriver(CheckBoxTestDriver);\n\n        await waitForDom(() => {\n            expect(checkbox.root).to.be.present();\n        });\n\n        checkbox.click();\n\n        await waitFor(() => {\n            expect(onChange).to.have.been.calledOnce;\n            expect(onChange).to.have.been.calledWithMatch({value: false});\n        });\n    });\n\n    describe('Accessibility features', () => {\n        it('Renders a native input and pass on checked state', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox value={true}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            const nativeInput = checkbox.nativeInput;\n\n            await waitForDom(() => {\n                expect(nativeInput, 'native input not found in DOM').to.be.present();\n                expect(nativeInput).to.be.instanceOf(HTMLInputElement);\n                expect(nativeInput).to.have.attribute('type', 'checkbox');\n                expect(nativeInput, 'native checkbox should be checked').to.have.property('checked', true);\n            });\n        });\n\n        it('native input gets disabled state', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox disabled/>\n            ).withDriver(CheckBoxTestDriver);\n\n            const nativeInput = checkbox.nativeInput;\n\n            await waitForDom(() => {\n                expect(nativeInput, 'native checkbox should be disabled').to.have.attribute('disabled');\n            });\n        });\n\n        it('native input gets id prop if supplied by user', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox id=\"covfefe\"/>\n            ).withDriver(CheckBoxTestDriver);\n\n            const nativeInput = checkbox.nativeInput;\n\n            await waitForDom(() => {\n                expect(nativeInput, 'native checkbox should have id').to.have.attribute('id', 'covfefe');\n            });\n        });\n\n        it('component gets tabIndex 0 by default', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(<CheckBox/>).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.nativeInput).to.have.attribute('tabIndex', '0');\n            });\n        });\n\n        it('component gets tabIndex supplied by the user', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox tabIndex={99998}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.nativeInput).to.have.attribute('tabIndex', '99998');\n            });\n        });\n    });\n\n    describe('When disabled', () => {\n        it('doesn\\'t call onChange when clicked', async () => {\n            const onChange = sinon.spy();\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox disabled onChange={onChange}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.root).to.be.present();\n            });\n\n            checkbox.click();\n            await sleep(10);\n            expect(onChange).to.not.have.been.called;\n        });\n\n        it('displays tickmark if value is true', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox disabled value={true}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.isChecked()).to.equal(true);\n            });\n        });\n\n        it('displays indeterminate icon', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox disabled value={true} indeterminate/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.isIndeterminate()).to.equal(true);\n            });\n        });\n    });\n\n    describe('When readonly', () => {\n        it('doesn\\'t call onChange when clicked', async () => {\n            const onChange = sinon.spy();\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox readonly onChange={onChange}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.root).to.be.present();\n            });\n\n            checkbox.click();\n            await sleep(10);\n            expect(onChange).to.not.have.been.called;\n        });\n\n        it('displays tickmark if value is true', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox readonly value={true}/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.isChecked()).to.equal(true);\n            });\n        });\n    });\n\n    describe('When indeterminate', () => {\n        it('renders indeterminate icon when value is true', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox value={true} indeterminate/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.box).to.be.present();\n                expect(checkbox.isIndeterminate()).to.equal(true);\n                expect(checkbox.isChecked()).to.equal(false);\n            });\n        });\n\n        it('renders indeterminate icon when value is false', async () => {\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox value={false} indeterminate/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.box).to.be.present();\n                expect(checkbox.isIndeterminate()).to.equal(true);\n            });\n        });\n\n        it('click calls onChange with value true', async () => {\n            const onChange = sinon.spy();\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox\n                    value={true}\n                    onChange={onChange}\n                    indeterminate\n                />\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.root).to.be.present();\n            });\n\n            checkbox.click();\n\n            await waitFor(() => {\n                expect(onChange).to.have.been.calledOnce;\n                expect(onChange).to.have.been.calledWithMatch({value: true});\n            });\n        });\n\n        it('does not call onChange when disabled', async () => {\n            const onChange = sinon.spy();\n            const {driver: checkbox, waitForDom} = clientRenderer.render(\n                <CheckBox disabled onChange={onChange} indeterminate/>\n            ).withDriver(CheckBoxTestDriver);\n\n            await waitForDom(() => {\n                expect(checkbox.root).to.be.present();\n            });\n\n            checkbox.click();\n            await sleep(10);\n            expect(onChange).to.not.have.been.called;\n        });\n    });\n});\n"]}