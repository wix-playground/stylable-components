{"version":3,"file":"inspect-stylable.js","sourceRoot":"","sources":["../../../test-kit/utils/inspect-stylable.ts"],"names":[],"mappings":";;AAEA,iCACI,OAAgB,EAChB,UAAqC,EACrC,SAAiB;IAEjB,IAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,WAAE,GAAC,SAAS,IAAG,IAAI,MAAE,CAAC;IACvE,IAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;;AAC/C,CAAC;AARD,0DAQC;AAED,qCACI,OAAgB,EAChB,UAAqC,EACrC,SAAiB;IAEjB,IAAM,gBAAgB,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC/D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;AACxD,CAAC;AAPD,kEAOC","sourcesContent":["import {Stylesheet} from 'stylable';\n\nexport function elementHasStylableState(\n    element: Element,\n    stylesheet: {$stylesheet: Stylesheet},\n    stateName: string\n): boolean {\n    const stateMap = stylesheet.$stylesheet.cssStates({[stateName]: true});\n    const attributeName = Object.keys(stateMap)[0];\n    return element.hasAttribute(attributeName);\n}\n\nexport function elementHasStylableClassName(\n    element: Element,\n    stylesheet: {$stylesheet: Stylesheet},\n    className: string\n): boolean {\n    const mangledClassName = stylesheet.$stylesheet.get(className);\n    return element.classList.contains(mangledClassName);\n}\n"]}