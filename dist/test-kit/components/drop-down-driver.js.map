{"version":3,"file":"drop-down-driver.js","sourceRoot":"","sources":["../../../test-kit/components/drop-down-driver.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qDAAiE;AACjE,sEAAkE;AAElE,IAAM,UAAU,GAAG,4BAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAE5C;IAAoC,kCAAU;IAA9C;;IAoCA,CAAC;IAjCG,sBAAW,qCAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QACjC,CAAC;;;OAAA;IAEM,+BAAM,GAAb;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACvB,CAAC;IAEM,oCAAW,GAAlB,UAAmB,GAAW;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;IAED,sBAAW,gCAAI;aAAf;YACI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACjD,CAAC;;;OAAA;IAEM,8BAAK,GAAZ;QACI,MAAM,CAAC,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,wCAAe,GAAtB;QACI,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACnD,CAAC;IAEM,gCAAO,GAAd,UAAe,OAAe;QAC1B,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,SAAA,EAAC,CAAC,CAAC;IAC3C,CAAC;IAlCa,6BAAc,GAAG,oBAAQ,CAAC;IAmC5C,qBAAC;CAAA,AApCD,CAAoC,6BAAU,GAoC7C;AApCY,wCAAc","sourcesContent":["import {DriverBase, selectDom, simulate} from 'test-drive-react';\nimport {DropDown} from '../../src/components/drop-down/drop-down';\n\nconst bodySelect = selectDom(document.body);\n\nexport class DropDownDriver extends DriverBase {\n    public static ComponentClass = DropDown;\n\n    public get selection(): string | null {\n        return this.root.textContent;\n    }\n\n    public isOpen(): boolean {\n        return !!this.list;\n    }\n\n    public clickOnItem(idx: number): void {\n        if (this.items) {\n            this.items[idx] && simulate.click(this.items![idx]);\n        }\n    }\n\n    public get list(): HTMLDivElement | null {  // refactor when selectionList driver is available\n        return bodySelect('LIST');\n    }\n\n    public get items(): HTMLCollection | null { // refactor when selectionList driver is available\n        return this.list ? this.list.children : null;\n    }\n\n    public focus(): void {\n        return simulate.focus(this.root);\n    }\n\n    public clickOnDropDown(): void {\n        simulate.click(this.select('DROP_DOWN_INPUT'));\n    }\n\n    public keyDown(keyCode: number): void {\n        simulate.keyDown(this.root, {keyCode});\n    }\n}\n"]}