{"version":3,"file":"number-input-driver.js","sourceRoot":"","sources":["../../../test-kit/components/number-input-driver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,mCAA0C;AAC1C,qDAAsD;AACtD,iCAAsC;AAEtC,kCAA0C;AAE1C;IAAuC,qCAAU;IAAjD;;IAyDA,CAAC;IAvDG,sBAAW,0CAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAED,sBAAW,sCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAED,sBAAW,wCAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,wCAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAEM,0CAAc,GAArB,UAAsB,IAAgB;QAClC,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEM,0CAAc,GAArB,UAAsB,IAAgB;QAClC,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAgB;QAC9B,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,aAAG,OAAO,EAAE,eAAQ,CAAC,EAAE,IAAK,IAAI,EAAE,CAAC;IACxE,CAAC;IAEM,wCAAY,GAAnB,UAAoB,IAAgB;QAChC,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,aAAG,OAAO,EAAE,eAAQ,CAAC,IAAI,IAAK,IAAI,EAAE,CAAC;IAC1E,CAAC;IAEM,sCAAU,GAAjB;QACI,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAC,OAAO,EAAE,eAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;IAClE,CAAC;IAEM,oCAAQ,GAAf;QACI,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAC,OAAO,EAAE,eAAQ,CAAC,GAAG,EAAC,CAAC,CAAC;IAChE,CAAC;IAEM,kCAAM,GAAb,UAAc,KAAa;QACvB,wBAAgB,CAAC,IAAI,CAAC,WAA+B,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAEM,gCAAI,GAAX;QACI,2BAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAvDa,gCAAc,GAAG,iBAAW,CAAC;IAwD/C,wBAAC;CAAA,AAzDD,CAAuC,6BAAU,GAyDhD;AAzDY,8CAAiB","sourcesContent":["import {codes as KeyCodes} from 'keycode';\nimport {DriverBase, simulate} from 'test-drive-react';\nimport {NumberInput} from '../../src';\nimport {Modifiers} from '../../src/components/stepper';\nimport {simulateKeyInput} from '../utils';\n\nexport class NumberInputDriver extends DriverBase {\n    public static ComponentClass = NumberInput;\n    public get nativeInput() {\n        return this.select('NATIVE_INPUT_NUMBER');\n    }\n\n    public get stepper() {\n        return this.select('NUMBER_INPUT_STEPPER');\n    }\n\n    public get increment() {\n        return this.select('STEPPER_INCREMENT');\n    }\n\n    public get decrement() {\n        return this.select('STEPPER_DECREMENT');\n    }\n\n    public get prefix() {\n        return this.select('PREFIX');\n    }\n\n    public get suffix() {\n        return this.select('SUFFIX');\n    }\n\n    public clickIncrement(opts?: Modifiers) {\n        simulate.click(this.increment, opts);\n    }\n\n    public clickDecrement(opts?: Modifiers) {\n        simulate.click(this.decrement, opts);\n    }\n\n    public pressUpKey(opts?: Modifiers) {\n        simulate.keyDown(this.nativeInput, {keyCode: KeyCodes.up, ...opts});\n    }\n\n    public pressDownKey(opts?: Modifiers) {\n        simulate.keyDown(this.nativeInput, {keyCode: KeyCodes.down, ...opts});\n    }\n\n    public pressEnter() {\n        simulate.keyDown(this.nativeInput, {keyCode: KeyCodes.enter});\n    }\n\n    public pressEsc() {\n        simulate.keyDown(this.nativeInput, {keyCode: KeyCodes.esc});\n    }\n\n    public typeIn(value: string) {\n        simulateKeyInput(this.nativeInput as HTMLInputElement, value);\n    }\n\n    public blur() {\n        simulate.blur(this.nativeInput);\n    }\n}\n"]}