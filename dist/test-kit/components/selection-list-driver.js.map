{"version":3,"file":"selection-list-driver.js","sourceRoot":"","sources":["../../../test-kit/components/selection-list-driver.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qDAAsD;AACtD,iCAAwC;AACxC,mGAAsF;AACtF,kCAA8E;AAE9E;IAA6C,2CAAU;IAAvD;;IA8BA,CAAC;IA3BU,uCAAK,GAAZ;QACI,2BAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,sCAAI,GAAX;QACI,2BAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAW,0CAAK;aAAhB;YACI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAEM,yCAAO,GAAd,UAAe,OAAe;QAC1B,2BAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,SAAA,EAAC,CAAC,CAAC;IAC3C,CAAC;IAEM,uCAAK,GAAZ,UAAa,OAAgB;QACzB,2BAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAEM,yDAAuB,GAA9B,UAA+B,OAAgB,EAAE,SAAiB;QAC9D,MAAM,CAAC,+BAAuB,CAAC,OAAO,EAAE,+BAAa,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAEM,6DAA2B,GAAlC,UAAmC,OAAgB,EAAE,SAAiB;QAClE,MAAM,CAAC,mCAA2B,CAAC,OAAO,EAAE,+BAAa,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC;IA5Ba,sCAAc,GAAG,mBAAa,CAAC;IA6BjD,8BAAC;CAAA,AA9BD,CAA6C,6BAAU,GA8BtD;AA9BY,0DAAuB","sourcesContent":["import {DriverBase, simulate} from 'test-drive-react';\nimport {SelectionList} from '../../src';\nimport listBaseStyle from '../../src/components/selection-list/selection-list.st.css';\nimport {elementHasStylableClassName, elementHasStylableState} from '../utils';\n\nexport class SelectionListTestDriver extends DriverBase {\n    public static ComponentClass = SelectionList;\n\n    public focus(): void {\n        simulate.focus(this.root);\n    }\n\n    public blur(): void {\n        simulate.blur(this.root);\n    }\n\n    public get items(): Element[] {\n        return Array.from(this.root.children);\n    }\n\n    public keyDown(keyCode: number): void {\n        simulate.keyDown(this.root, {keyCode});\n    }\n\n    public click(element: Element): void {\n        simulate.click(element);\n    }\n\n    public elementHasStylableState(element: Element, stateName: string): boolean {\n        return elementHasStylableState(element, listBaseStyle, stateName);\n    }\n\n    public elementHasStylableClassName(element: Element, className: string): boolean {\n        return elementHasStylableClassName(element, listBaseStyle, className);\n    }\n}\n"]}