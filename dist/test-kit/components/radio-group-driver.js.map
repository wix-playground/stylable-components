{"version":3,"file":"radio-group-driver.js","sourceRoot":"","sources":["../../../test-kit/components/radio-group-driver.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qDAA4C;AAC5C,iCAAkD;AAElD;IAAsC,oCAAU;IAAhD;;IAUA,CAAC;IAPG,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9B,CAAC;;;OAAA;IAEM,yCAAc,GAArB,UAAsB,GAAW;QAAjC,iBAEC;QADG,MAAM,CAAC,IAAI,iBAAiB,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,eAAe,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,EAA7C,CAA6C,CAAC,CAAC;IACtF,CAAC;IARa,+BAAc,GAAG,gBAAU,CAAC;IAS9C,uBAAC;CAAA,AAVD,CAAsC,6BAAU,GAU/C;AAVY,4CAAgB;AAY7B;IAAuC,qCAAU;IAAjD;;IAwCA,CAAC;IArCG,sBAAW,4CAAa;aAAxB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAEM,qCAAS,GAAhB;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAC/C,CAAC;IAEM,sCAAU,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACvC,CAAC;IAEM,sCAAU,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACvC,CAAC;IAED,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACpC,CAAC;;;OAAA;IAED,sBAAW,mCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QACnC,CAAC;;;OAAA;IAED,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAC9C,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,GAAG,IAAK,OAAA,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,IAAI,GAAG,KAAK,CAAC,EAA7C,CAA6C,CAAC,CAAC;QACxE,CAAC;;;OAAA;IAED,sBAAW,mCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QACtG,CAAC;;;OAAA;IAEM,iCAAK,GAAZ;QACK,IAAI,CAAC,IAAuB,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAtCa,gCAAc,GAAG,iBAAW,CAAC;IAuC/C,wBAAC;CAAA,AAxCD,CAAuC,6BAAU,GAwChD;AAxCY,8CAAiB","sourcesContent":["import {DriverBase} from 'test-drive-react';\nimport {RadioButton, RadioGroup} from '../../src';\n\nexport class RadioGroupDriver extends DriverBase {\n    public static ComponentClass = RadioGroup;\n\n    public get items(): HTMLCollection {\n        return this.root.children;\n    }\n\n    public getRadioButton(idx: number): RadioButtonDriver {\n        return new RadioButtonDriver(() => this.select('RADIO_BUTTON_' + idx.toString()));\n    }\n}\n\nexport class RadioButtonDriver extends DriverBase {\n    public static ComponentClass = RadioButton;\n\n    public get nativeElement(): HTMLInputElement {\n        return this.select('NATIVE_INPUT');\n    }\n\n    public isChecked(): boolean {\n        return !!this.select('CHECKED_RADIO_ICON');\n    }\n\n    public isDisabled(): boolean {\n        return this.nativeElement.disabled;\n    }\n\n    public isReadOnly(): boolean {\n        return this.nativeElement.readOnly;\n    }\n\n    public get value(): string {\n        return this.nativeElement.value;\n    }\n\n    public get name(): string {\n        return this.nativeElement.name;\n    }\n\n    public get children(): Array<Node | null> {\n        return Array.from(\n            this.select('CONTENT_CONTAINER').childNodes\n        ).filter((e, idx) => e.nodeType !== Node.COMMENT_NODE && idx !== 0);\n    }\n\n    public get icon(): SVGElement {\n        return this.isChecked() ? this.select('CHECKED_RADIO_ICON') : this.select('UNCHECKED_RADIO_ICON');\n    }\n\n    public click(): void {\n        (this.root as HTMLDivElement).click();\n    }\n}\n"]}