:import {
    -st-from: "./variables.st.css";
    -st-named: fontFamily,
               fontSize,
               fontWeight,
               lineHeight,
               color_MainText,
               color_MainPlaceholder,
               color_MainText_Background,
               borderRadius,
               color_Default,
               color_Hover,
               color_Active,
               color_Focus,
               color_Disabled,
               borderDefault,
               borderHover,
               borderFocus,
               inputHeight,
               inputWidth,
               borderDisabled;
}

/* Typography */
:global(h1) {
    color: value(color_MainText);
    font-size: 32px;
    line-height: 48px;
}

:global(h2) {
    color: value(color_MainText);
    font-size: 24px;
    line-height: 36px;
}

:global(h3) {
    color: value(color_MainText);
    font-size: 19px;
    line-height: 28px;
}

:global(h4) {
    color: value(color_MainText);
    font-size: 16px;
    line-height: 24px;
}

:global(h5) {
    color: value(color_MainText);
    font-size: 14px;
    line-height: 20px;
}

:global(h6) {
    color: value(color_MainText);
    font-size: 12px;
    line-height: 18px;
}

:global(p) {
    color: value(color_MainText);
    font-size: 16px;
    line-height: 24px;
}

:global(label) {
    color: value(color_MainPlaceholder);
    font-size: 16px;
    line-height: 24px;
}

:global(img) {
    display: inline-block;
    vertical-align: middle;
}

:global(textarea) {
    height: auto;
    min-height: 50px;
    border-radius: value(borderRadius);
}

:global(a) {
    text-decoration: none;
    user-select: none;
    color: value(color_Default);
    outline: 0;
}

:global(a:focus) {
    color: value(color_Default);
}

:global(a:visited:not(.button):not(a[disabled])) {
    color: value(color_Focus);
}

:global(a:hover) {
    color: value(color_Hover);
}

:global(a.disabled), :global(a[disabled]) {
    color: value(color_Disabled);
}


